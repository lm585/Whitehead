library(ComplexHeatmap)
library(beeswarm)
library(edgeR)
library("circlize")
library(dplyr)
library(Seurat)
library(patchwork)
library(vioplot)

setwd("/Users/linyongmao/Documents/autism")

###
raw <- read.delim("human_Microglia_RNA-18samp.gene.count.stranded.txt")
#remove 3 adult samples, and only keep P17_Temporal & P8_Parietal
#search raw.samp
 raw.samp <- raw[, c(6:7,9:18, 20)]
 dim(raw.samp)
# [1] 62703    13
rownames(raw.samp) <- raw$geneID
dim(raw.samp)
# [1] 62703    13
summary( raw.samp[,1] - raw[, 6]  )
y <- DGEList(counts=raw.samp)
y <- calcNormFactors(y)
dim(y)
summary(y$samples$norm.factors)
#   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
# 0.8766  0.9510  1.0106  1.0024  1.0569  1.1434
#5 male samples
keep <-rowSums(edgeR::cpm(y)>=1) >= 4
y<-y[keep,]
dim(y)
# [1] 15089    13
d = edgeR::cpm(y)
a <- d
b = log10(a+1)
for(i in 1:dim(b)[1])
{
 a[i, ] <- (b[i, ] - mean(as.numeric(b[i,]))) / var(as.numeric(b[i,]))^(1/2)
}
###a is z-score of log10(cpm+1)
info <- read.delim("human.postnatal.18samp.info")
gene.name <- raw[, 1:2]
a.df <- as.data.frame(a)
a.df$id <- row.names(a.df)
a.df.g <- merge(a.df, gene.name, by.x="id", by.y="geneID")
dim(a.df.g)
 t1 <- read.delim("/Users/linyongmao/Documents/autism/human_Microglia_rna-postnatal-MvF-diff2-1.noX.Y.interac.strand.rnk", header=F)
 t2 <- a.df.g[ a.df.g$name %in% t1$V1,]
 a.df.g <- t2
 dim(a.df.g)
# [1] 14603    15

## read in CHEA results
## chea.human.mg.f.bias.infg.102genes.withBackg.txt
t1 <- read.delim("temp.mouse.mg.f.bias.pathway.44genes.txt")
 t2 <- t1[ t1$Adjusted.P.value < 0.01 ,]
 dim(t2)
# [1] 22  9
 t3 <- t2[ grep("human", t2$Term, ignore.case=TRUE),]
 dim(t3)
# [1] 9 9
 res <- t3[,c(1:2)]
 res$ox.yes=-999
 res$ox.no=-999
 res$rand.no=-999
 res$rand.yes=-999
 res$ox.yes.rand.no.P <- -999
 res$ox.yes.ox.no.P = -999


 for(i in 1:dim(t3)[1]) {
 t4 <- strsplit(t3$Genes[i], ';')
#####TF target genes
 # t4[[1]]
 file <- "temp-pathway-200genes-list"
f1 <- read.delim(file, header=F)
 tf <- strsplit( t3$Term[i], ' ')[[1]][1]
if(dim(a.df.g[ a.df.g$name %in% c( tf), ])[1] > 0) {
p.exp <- a.df.g[ a.df.g$name %in% c(f1$V1, tf), ]
length(p.exp$name)
mat <- as.data.frame(p.exp[, 2:14])
 rownames(mat) <- p.exp$name
 identical(mat$human_Microglia_RNA_polyA_P14, p.exp$human_Microglia_RNA_polyA_P14)
 mat2 <- as.data.frame(t(mat))
 c1 <- as.data.frame(cor(mat2, method="spearman"))
 c2 <- data.frame(1:dim(c1)[1], colnames(c1))
 i2 <- c2[ c2$colnames.c1. == tf,1]
 c3 <-data.frame( c1[, i2])
 colnames(c3)[1] <- tf
 c3$id <- rownames(c1)
 identical(c3$id, p.exp$name)
 summary(c1[,i2] - c3[,1])
 c4 <- cbind(c3, p.exp)
 colnames(c4)
 c5 <- c4[,c(1,3,17)]
 head(c5)
#               VDR                 id    name
# NDUFAB1 0.4725275 ENSG00000004779.10 NDUFAB1
# MDH1    0.5934066 ENSG00000014641.21    MDH1
 c5$VDR.binding = "oxphos.no"
 targ1 <- read.delim("temp.pathway.alltargetgenes.txt")
 targ2 <- targ1[ targ1$Term == t3$Term[i], ]
 targ3 <- strsplit(targ2$Genes[1], ';')
## targ3[[1]] , oxphos.200.targets by TF

 corr1 <- c5
 corr1[ corr1$name %in% targ3[[1]] , ]$VDR.binding <- "oxphos.yes"
corr1.ox <- corr1
 corr1.ox[ corr1.ox$name %in% t4[[1]], ]$VDR.binding <- "oxphos.yes.sex.biased"

#############################################################
# random genes corr
file <- "../autism/random100-non-oxphos"
f2 <- read.delim(file, header=T)
p.exp <- a.df.g[ a.df.g$name %in% c(f2$V1, tf), ]
length(p.exp$name)
mat <- as.data.frame(p.exp[, 2:14])
 rownames(mat) <- p.exp$name
 identical(mat$human_Microglia_RNA_polyA_P14, p.exp$human_Microglia_RNA_polyA_P14)
 mat2 <- as.data.frame(t(mat))
 c1 <- as.data.frame(cor(mat2, method="spearman"))
 c2 <- data.frame(1:dim(c1)[1], colnames(c1))
 i2 <- c2[ c2$colnames.c1. == tf,1]
 c3 <-data.frame( c1[, i2])
 colnames(c3)[1] <- tf
 c3$id <- rownames(c1)
 identical(c3$id, p.exp$name)
 summary(c1[,i2] - c3[,1])
 c4 <- cbind(c3, p.exp)
 colnames(c4)     
 c5 <- c4[,c(1,3,17)]
 head(c5)
 c5$VDR.binding = "randomgenes.no"
 corr1 <- c5
 t4 <- read.delim("chea.random100-non-oxphos.txt")
 t5 <- t4[ t4$Adjusted.P.value < 5e4 ,]
 dim(t5)
# [1] 698   9
 t6 <- t5
 t7 <- t6[ t6$Term == t3$Term[i], ]
 t8 <- strsplit(t7$Genes[1], ';')
 if(dim(t7)[1] > 0) {corr1[ corr1$name %in% t8[[1]], ]$VDR.binding <- "randomgenes.yes"}

 corr1.rand <- corr1
 identical(colnames(corr1.rand), colnames(corr1.ox))
 t9 <- rbind(corr1.rand, corr1.ox)
 t10 <- t9[t9$name != tf,]
 dim(t10[ t10$VDR.binding == "randomgenes.yes",])
 dim(t10[ t10$VDR.binding == "randomgenes.no",])
 dim(t10[ t10$VDR.binding == "oxphos.yes",])
 dim(t10[ t10$VDR.binding == "oxphos.no",])
 dim(t10[ t10$VDR.binding == "oxphos.yes.sex.biased",])

 t10$caterg <- factor( t10$VDR.binding, levels=c("oxphos.no", "oxphos.yes", "oxphos.yes.sex.biased", "randomgenes.no", "randomgenes.yes"), labels=c("OXPHOS.genes.NO", "OXPHOS.genes.YES", "path.sex.bias.YES", "random.genes.NO", "random.genes.YES"))

 boxplot(t10[,1] ~ t10$caterg, outcol="white",  xlab="", ylab="", main=t3$Term[i], col=c("white", "grey", "orange"), ylim=c(-1,1), cex.main=0.6)
 beeswarm(t10[,1] ~ t10$caterg,add=T)
 abline(h = seq(-100, 100, 1/10), lty = 5, lwd = 0.5, col = "gray")

 t11 <- t10[ t10$VDR.binding == "randomgenes.yes",]
 t12 <-  t10[ t10$VDR.binding == "randomgenes.no",]
 t13 <- t10[ t10$VDR.binding == "oxphos.yes",]
 t14 <- t10[ t10$VDR.binding == "oxphos.no",]
 t15 <- t10[ t10$VDR.binding == "oxphos.yes.sex.biased",]
 res$ox.yes[i] <- mean(t15[,1])
 res$ox.no[i] <- mean(t14[,1])
 res$rand.yes[i] <- mean(t11[,1])
 res$rand.no[i] <- mean(t12[,1])
 test1 <- wilcox.test(t15[,1], t12[,1])

 res$ox.yes.rand.no.P[i] <- test1$p.value
 test2 <-  wilcox.test(t15[,1], t14[,1])
 res$ox.yes.ox.no.P[i] <- test2$p.value
}
 }

 write.table(res[ res$ox.yes != -999,], "temp1", quote=F, sep="\t")

