t <- read.delim("microglia-41-samples.genecount.txt", header = T, row.names = 1)
rawCount <- t[,2:42]
> dim(rawCount)
[1] 58302    41
group <- factor(rep(1, 41))
y <- DGEList(counts=rawCount,group=group)
y <- calcNormFactors(y)
write.table(y$samples, "microglia-lib-norm-factor", quote = F, sep = "\t")
mds <- plotMDS(y, top=98765)
df <- data.frame(colnames(y), mds$x, mds$y)

linyongmao@Linyong-Mao-MBP16-2019 microglia % cut -f 1,6,10,11,16,17,18,19,23,24,27,29,32,33,35,41,42,43 microglia-41-samples.genecount.txt 
 > microglia-41-samples.female17samp.genecount.tx
                                      cut -f 1,3,4,7,8,9,12,13,14,15,20,21,22,25,26,28,30,34,36,37,38,39,40 microglia-41-samples.genecount.txt 
> microglia-41-samples.male17samp.genecount.txt 
mv -i microglia-41-samples.male17samp.genecount.txt microglia-41-samples.male22samp.genecount.txt
cat microglia-39-sample-sampInfo.txt | head -1 > temp-control
cat microglia-39-sample-sampInfo.txt  | grep -w Control >> temp-control
head -1 microglia-41-samples.genecount.txt | awk 'BEGIN {FS = "\t"; OFS = "\t"} {for(i = 1; i <= NF; i++) print  $i, i}'  > temp-sample-columNum
/Users/linyongmao/Documents/microglia/scrnaseq-metaannot-combine    temp-control temp-sample-columNum out
paste  temp-control  out  | cut -f 1-7 > microglia-41-samples.control-F-M.16samp.sampInfo.txt
paste  temp-control  out  | cut -f 9 |awk 'BEGIN {FS = "\t"; OFS = ""; ORS =""} {print $1 ","} '
cut -f 1,9,10,16,20,23,26,30,32,33,34,35,36,37,38,39,42 microglia-41-samples.genecount.txt > microglia-41-samples.control-F-M.16samp.genecount.txt

rawCount <- read.delim("microglia-41-samples.female17samp.genecount.txt", header = T, row.names = 1)
sampleinfo <- read.delim("microglia-41-samples.female17samp.sampInfo.txt", row.names=1)
group <- factor(sampleinfo$controTumor)

y <- DGEList(counts=rawCount,group=group)
y <- calcNormFactors(y)
###mds <- plotMDS(y, top=98765)
###df <- data.frame(colnames(y), mds$x, mds$y)
keep <-rowSums(cpm(y)>=1) >= 4
y<-y[keep,]
dim(y)
[1] 16850    17

design <- model.matrix(~sampleinfo$controTumor + sampleinfo$age)
> design
   (Intercept) sampleinfo$controTumorTumor sampleinfo$age
1            1                           1             64
2            1                           0             73
3            1                           1             67
4            1                           0             64
5            1                           1             30
6            1                           1             20
7            1                           1             44
8            1                           0             60
9            1                           1             55
10           1                           1             57
11           1                           1             69
12           1                           0             78
13           1                           0             45
14           1                           0             62
15           1                           1             45
16           1                           0             35
17           1                           1             72

y <- estimateDisp(y,design)
fit <- glmQLFit(y, design)
qlf <- glmQLFTest(fit, coef=2)
top2v1 <- topTags(qlf, n = 91234)
write.table(top2v1, "diff2-1.txt", sep="\t", quote = F)

rawCount <- read.delim("microglia-41-samples.male22samp.genecount.txt", header = T, row.names = 1)
sampleinfo <- read.delim("microglia-41-samples.male22samp.sampInfo.txt", row.names=1)
sampleinfo
group <- factor(sampleinfo$controTumor)
y <- DGEList(counts=rawCount,group=group)
y <- calcNormFactors(y)
y
keep <-rowSums(cpm(y)>=1) >= 5
y<-y[keep,]
dim(y)
###[1] 16246    22

design <- model.matrix(~sampleinfo$controTumor + sampleinfo$age)
design
   (Intercept) sampleinfo$controTumorTumor sampleinfo$age
1            1                           1             75
2            1                           1             32
3            1                           1             63
4            1                           1             63
5            1                           0             60


> y <- estimateDisp(y,design)
> fit <- glmQLFit(y, design)
> qlf <- glmQLFTest(fit, coef=2)
> top2v1 <- topTags(qlf, n = 91234)
> write.table(top2v1, "diff2-1.txt", sep="\t", quote = F)
> topTags(qlf)
Coefficient:  sampleinfo$controTumorTumor 
                    logFC     logCPM        F       PValue       FDR
ENSG00000130844  1.715600  6.8048595 23.16679 7.145985e-05 0.2602094
ENSG00000047634  1.525419  4.1331532 21.98299 9.767113e-05 0.2602094
ENSG00000140534  8.539626 -0.3918492 26.88397 1.030518e-04 0.2602094

rawCount <- read.delim("microglia-41-samples.control-F-M.16samp.genecount.txt", header = T, row.names = 1)
sampleinfo <- read.delim("microglia-41-samples.control-F-M.16samp.sampInfo.txt", row.names=1)
mean(colnames(rawCount) == rownames(sampleinfo))
###[1] 1
y <- DGEList(counts=rawCount)
y <- calcNormFactors(y)
###mds <- plotMDS(y, top=98765)
###df <- data.frame(colnames(y), mds$x, mds$y)
keep <-rowSums(cpm(y)>=1) >= 4
y<-y[keep,]
dim(y)
###[1] 16366    16
design <- model.matrix(~sampleinfo$XX + sampleinfo$age)
> design
   (Intercept) sampleinfo$XXXY sampleinfo$age
1            1               1             60
2            1               0             73
3            1               0             64
4            1               1             48

y <- estimateDisp(y,design)
fit <- glmQLFit(y, design)
qlf <- glmQLFTest(fit, coef=2)
top2v1 <- topTags(qlf, n = 91234)
write.table(top2v1, "diff2-1.txt", sep="\t", quote = F)
mv -i diff2-1.txt control-F-M-diff2-1.txt
vi control-F-M-diff2-1.txt
/Users/linyongmao/Documents/microglia/scrnaseq-metaannot-combine  control-F-M-diff2-1.txt         geneID-name-type-chr out
paste  control-F-M-diff2-1.txt out > control-F-M-diff2-1.name-type-chr.txt
./make-rnk-genesymble                control-F-M-diff2-1.name-type-chr.txt  control-F-M-diff2-1.rnk
cat geneID-name-type-chr | cut -f 2-4 > temp-2
/Users/linyongmao/Documents/microglia/scrnaseq-metaannot-combine    control-F-M-diff2-1.rnk temp-2 out
paste   control-F-M-diff2-1.rnk out > control-F-M-diff2-1.rnk.type.chr.txt
###"temp.txt" cpm(y)
/Users/linyongmao/Documents/microglia/scrnaseq-metaannot-combine  control-F-M-diff2-1.name-type-chr.txt temp.txt out
paste  control-F-M-diff2-1.name-type-chr.txt  out >  control-F-M-diff2-1.name-type-chr.cpm
cat control-F-M-diff2-1.name-type-chr.cpm | cut -f 1,8,12-200 > temp-2
bash   script-gct-plus-0d01 > control-F-M-diff2-1.16366genes.cpm.plus0d01.gct
vi control-F-M-diff2-1.cls
###GSEA resuly files control only
f1="/Users/linyongmao/gsea_home/output/microgliaSex/ControlOnlyMalevsFemale_prerank_p.GseaPreranked.1638567040071/gsea_report_for_na_pos_1638567040071.tsv"
f2="/Users/linyongmao/gsea_home/output/microgliaSex/ControlOnlyMalevsFemale_prerank_p.GseaPreranked.1638567040071/gsea_report_for_na_neg_1638567040071.tsv"
cat $f1 $f2 |cut -f 1,4,6,7,8 | sort | uniq > temp-1.txt
f3="/Users/linyongmao/gsea_home/output/microgliaSex/logRatioUseMedianControlOnlyMalevsFemale.Gsea.1638558369585/gsea_report_for_XY_1638558369585.tsv"
f4="/Users/linyongmao/gsea_home/output/microgliaSex/logRatioUseMedianControlOnlyMalevsFemale.Gsea.1638558369585/gsea_report_for_XX_1638558369585.tsv"
cat $f3 $f4 |cut -f 1,4,6,7,8 | sort | uniq > temp-2.txt
paste temp-[12].txt | awk '$1 != $6'
paste temp-[12].txt > temp-3.txt  

rawCount <- read.delim("microglia-41-samples.female13samp.noCereb.noOcci.genecount.txt", header = T, row.names = 1)
sampleinfo <- read.delim("microglia-41-samples.female13samp.noCereb.noOcci.sampInfo.txt", row.names=1)
group <- factor(sampleinfo$controTumor)
y <- DGEList(counts=rawCount,group=group)
y <- calcNormFactors(y)
keep <-rowSums(cpm(y)>=1) >= 3
y<-y[keep,]
dim(y)
##[1] 17319    13
vi microglia-41-samples.female13samp.noCereb.noOcci.cpm.txt
vi temp
mv temp temp-2
bash script-gct-plus-0d01 > microglia-41-samples.female13samp.noCereb.noOcci.cpm.plus0.01.gct
vi microglia-41-samples.female13samp.noCereb.noOcci.cls
#multivariable edgeR
> design <- model.matrix(~sampleinfo$controTumor + sampleinfo$age + sampleinfo$anatomy)
> design
   (Intercept) sampleinfo$controTumorTumor sampleinfo$age sampleinfo$anatomyParietal sampleinfo$anatomyTemporal
1            1                           1             64                          1                          0
2            1                           0             73                          0                          0
3            1                           1             67                          0                          0
4            1                           0             64                          0                          0
5            1                           1             30                          0                          0
6            1                           1             20                          0                          1
7            1                           0             60                          1                          0
> y <- estimateDisp(y,design)
> fit <- glmQLFit(y, design)
> qlf <- glmQLFTest(fit, coef=2)
> top2v1 <- topTags(qlf, n = 91234)
> write.table(top2v1, "diff2-1.txt", sep="\t", quote = F)
mv -i diff2-1.txt female-noCereb.noOcci-diff2-1.txt
> topTags(qlf, n = 9)
Coefficient:  sampleinfo$controTumorTumor
                    logFC      logCPM         F       PValue       FDR
ENSG00000184860  7.238206 -0.06334246  37.92130 3.536935e-05 0.4160104

/Users/linyongmao/Documents/microglia/scrnaseq-metaannot-combine  female-noCereb.noOcci-diff2-1.txt         geneID-name-type-chr out
paste  female-noCereb.noOcci-diff2-1.txt out > female-noCereb.noOcci-diff2-1.name-type-chr.txt
./make-rnk-genesymble                female-noCereb.noOcci-diff2-1.name-type-chr.txt  female-noCereb.noOcci-diff2-1.rnk


head -1 microglia-39-sample-sampInfo.txt > microglia-41-samples.male20samp.noCereb.noOcci.sampInfo.txt
cat microglia-39-sample-sampInfo.txt | grep -w XY | grep -iwv Cerebellum | grep -iwv occipital >>  microglia-41-samples.male20samp.noCereb.noOcci.sampInfo.txt
vi microglia-41-samples.male20samp.noCereb.noOcci.sampInfo.txt
cat microglia-41-samples.male20samp.noCereb.noOcci.sampInfo.txt | cut -f 1 | awk 'NR > 1' >  temp-1
head -1 microglia-41-samples.genecount.txt | awk 'BEGIN {FS = "\t"; OFS = "\t"} {for(i = 1; i <= NF; i++) print  $i, i}' > temp-2
/Users/linyongmao/Documents/microglia/scrnaseq-metaannot-combine  temp-1 temp-2 out
cat out | cut -f 2 | awk 'BEGIN {FS = "\t"; OFS = ""; ORS =""} {print $1 ","} '
cut -f 1,3,4,7,8,9,12,13,14,15,20,21,22,25,28,30,34,37,38,39,40 microglia-41-samples.genecount.txt  > microglia-41-samples.male20samp.noCereb.noOcci.genecount.txt

rawCount <- read.delim("microglia-41-samples.male20samp.noCereb.noOcci.genecount.txt", header = T, row.names = 1)
sampleinfo <- read.delim("microglia-41-samples.male20samp.noCereb.noOcci.sampInfo.txt", row.names=1)
group <- factor(sampleinfo$Tumor)
y <- DGEList(counts=rawCount,group=group)
y <- calcNormFactors(y)
keep <-rowSums(cpm(y)>=1) >= 4
y<-y[keep,]
dim(y)
#[1] 16609    20
d <- cpm(y)
write.table(d, "temp.txt", quote=F, sep = "\t")
vi temp.txt ###add geneID is first line first field
mv temp.txt  microglia-41-samples.female13samp.noCereb.noOcci.cpm.txt
mv microglia-41-samples.female13samp.noCereb.noOcci.cpm.txt microglia-41-samples.male20samp.noCereb.noOcci.cpm.txt
cp  microglia-41-samples.male20samp.noCereb.noOcci.cpm.txt temp-2
vi temp-2
bash script-gct-plus-0d01 > microglia-41-samples.male20samp.noCereb.noOcci.cpm.plus0.01.gct
vi microglia-41-samples.male20samp.noCereb.noOcci.cpm.cls  
#DEG testing
> design <- model.matrix(~sampleinfo$Tumor + sampleinfo$age + sampleinfo$location)
> design
y <- estimateDisp(y,design)
fit <- glmQLFit(y, design)
qlf <- glmQLFTest(fit, coef=2)
top2v1 <- topTags(qlf, n = 91234)
write.table(top2v1, "diff2-1.txt", sep="\t", quote = F)
topTags(qlf, n = 9)
mv -i diff2-1.txt male-noCereb.noOcci-diff2-1.txt

f1="/Users/linyongmao/gsea_home/output/microgliaSex/male_noCereb.noOcci.TAM_prerank_p.GseaPreranked.1641623359768/gsea_report_for_na_pos_1641623359768.tsv"
f2="/Users/linyongmao/gsea_home/output/microgliaSex/male_noCereb.noOcci.TAM_prerank_p.GseaPreranked.1641623359768/gsea_report_for_na_neg_1641623359768.tsv"
cat $f1 $f2 |cut -f 1,4,6,7,8 | sort | uniq > temp-1.txt
f3="/Users/linyongmao/gsea_home/output/microgliaSex/female_noCereb.noOcci.TAM_prerank_p.GseaPreranked.1641587017060/gsea_report_for_na_pos_1641587017060.tsv"
f4="/Users/linyongmao/gsea_home/output/microgliaSex/female_noCereb.noOcci.TAM_prerank_p.GseaPreranked.1641587017060/gsea_report_for_na_neg_1641587017060.tsv"
cat $f3 $f4 |cut -f 1,4,6,7,8 | sort | uniq > temp-2.txt
paste temp-[12].txt | awk '$1 != $6'
paste temp-[12].txt > temp-3.txt  
/Users/linyongmao/Documents/microglia/scrnaseq-metaannot-combine  temp-paths      ../transgender-scRNA/temp-3.txt out

cat microglia-39-sample-sampInfo.txt  | grep -iwv Cerebellum | grep -iwv occipital | cut -f 1 > temp-nocere-sampids
head -1 microglia-41-samples.genecount.txt | awk 'BEGIN {FS = "\t"; OFS = "\t"} {for(i = 1; i <= NF; i++) print  $i, i}' > temp-1
/Users/linyongmao/Documents/microglia/scrnaseq-metaannot-combine temp-nocere-sampids temp-1 out
paste temp-nocere-sampids out | cut -f 3 | awk 'BEGIN {FS = "\t"; ORS = ""} {print $1 ","}'
cut -f 1,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,22,23,25,27,28,30,32,33,34,35,37,38,39,40,41,42 microglia-41-samples.genecount.txt > temp
mv temp microglia-41-samples.F-M-33samps.noCereb.noOcci.genecount.txt
> rawCount <- read.delim("microglia-41-samples.F-M-33samps.noCereb.noOcci.genecount.txt", header = T, row.names = 1)
> dim(rawCount)
##[1] 58302    33
group <- factor(rep(1, 33))
y <- DGEList(counts=rawCount,group=group)
y <- calcNormFactors(y)
med <- data.frame(y$counts[,1])
med$logic <- TRUE
d <- cpm(y)
for(i in 1:dim(y)[1]) {
 med$logic[i] <- median(d[i,]) >= 1
}
y<-y[med$logic,]
dim(y)
#[1] 14204    33
mds <- plotMDS(y, top=98765)
x <- cbind( colnames(y$counts), mds$x, mds$y)
x <- as.data.frame(x)
info <- read.delim("microglia-39-sample-sampInfo.txt", row.names=1)
info$id <- rownames(info)
pca.info <- merge(x, info, by.x="V1", by.y="id")
plot(pca.info$V2, pca.info$V3, cex=0.05, xlab="PC1 (20%)", ylab = "PC2 (14%)")
....graph
res <- lm(as.numeric(pca.info$V2) ~ pca.info$XX + pca.info$location + pca.info$age + pca.info$Tumor)
r <- summary(res)
r

px <- pca.info[ pca.info$XX == "XX", ]
res <- lm(as.numeric(px$V2) ~  px$location + px$age + px$Tumor)
r <- summary(res)
r

px <- pca.info[ pca.info$XX == "XY", ]
res <- lm(as.numeric(px$V2) ~  px$location + px$age + px$Tumor)
r <- summary(res)
r

res <- lm(as.numeric(pca.info$V3) ~ pca.info$XX + pca.info$location + pca.info$age + pca.info$Tumor)
r <- summary(res)
r

px <- pca.info[ pca.info$Tumor == "Control", ] 
res <- lm(-as.numeric(px$V3) ~  px$location + px$age + px$XX)
r <- summary(res)
r

px <- pca.info[ pca.info$Tumor == "Tumor", ]
res <- lm(-as.numeric(px$V3) ~  px$location + px$age + px$XX)
r <- summary(res)
r

px <- pca.info[ pca.info$XX == "XX", ]
res <- lm(-as.numeric(px$V3) ~  px$location + px$age + px$Tumor)
r <- summary(res)
r

px <- pca.info[ pca.info$XX == "XX", ]
res <- lm(-as.numeric(px$V3) ~   px$Tumor)
r <- summary(res)
r

px <- pca.info[ pca.info$XX == "XY", ]
res <- lm(-as.numeric(px$V3) ~  px$location + px$age + px$Tumor)
r <- summary(res)
r

px <- pca.info[ pca.info$XX == "XY", ]
res <- lm(-as.numeric(px$V3) ~   px$Tumor)
r <- summary(res)
r

#############################################################################
#Only keeping tumor resection samples (excluding benign,  low grade, metastatic samples)
info <- read.delim("microglia-39-sample-sampInfo.txt", row.names=1)
info.2 <- info[ info$Tumor == "Control" | info$grade == "Tumor resection", ]
dim(info.2)
##[1] 31  6
> a <- scan()
> m <- matrix(a, 5, 4, byrow=T)
> y <- m[, c(1,2)]
> y
> fisher.test(y)

cx <- info.2[ info.2$XX == "XX" & info.2$Tumor == "Control",  ]$age
cy <- info.2[ info.2$XX == "XY" & info.2$Tumor == "Control",  ]$age
tx <- info.2[ info.2$XX == "XX" & info.2$Tumor == "Tumor",  ]$age
ty <- info.2[ info.2$XX == "XY" & info.2$Tumor == "Tumor",  ]$age
> t.test(cx, tx)
info.2$grape3 <- paste(info.2$XX, info.2$Tumor)
boxplot( info.2$age ~ info.2$grape3, xlab = "", ylab = "age" )
beeswarm( info.2$age ~ info.2$grape3, add =T,pch = c(16,16,17,17), col=c("green", "red", "green", "red"), cex = 1.5)

cat microglia-39-sample-sampInfo.txt   | grep -iw control | cut -f 1 > temp-1
cat microglia-39-sample-sampInfo.txt   | grep -iw "Tumor resection" | cut -f 1 >> temp-1
sort temp-1 | uniq > temp-sampids       
head -1 microglia-41-samples.genecount.txt | awk 'BEGIN {FS = "\t"; OFS = "\t"} {for(i = 1; i <= NF; i++) print  $i, i}' > temp-1
/Users/linyongmao/Documents/microglia/scrnaseq-metaannot-combine temp-sampids temp-1 out
paste temp-sampids out | cut -f 3 | awk 'BEGIN {FS = "\t"; ORS = ""} {print $1 ","}'
cut -f 1,3,6,8,9,10,11,12,13,14,16,17,19,20,21,23,25,26,27,28,30,32,33,34,35,36,37,38,39,41,42,43 microglia-41-samples.genecount.txt > temp
mv temp microglia-41-samples.F-M-31samps.tumResecOnly.genecount.txt
> rawCount <- read.delim("microglia-41-samples.F-M-31samps.tumResecOnly.genecount.txt", header = T, row.names = 1)
> dim(rawCount)
[1] 58302    31
group <- factor(rep(1, 31))
y <- DGEList(counts=rawCount,group=group)
y <- calcNormFactors(y)
med <- data.frame(y$counts[,1])
med$logic <- TRUE
d <- cpm(y)
for(i in 1:dim(y)[1]) {
 med$logic[i] <- median(d[i,]) >= 1
}
y<-y[med$logic,]
dim(y)
#[1] 14140    31
mds <- plotMDS(y, top=98765)
x <- cbind( colnames(y$counts), mds$x, mds$y)
x <- as.data.frame(x)
info <- read.delim("microglia-39-sample-sampInfo.txt")
pca.info <- merge(x, info, by.x="V1", by.y="id1")
plot(pca.info$V2, pca.info$V3, cex=0.05, xlab="PC1 (17%)", ylab = "PC2 (14%)")
...graph
...legend("bottomright", 

rawCount <- read.delim("microglia-41-samples.F-14samps.tumResecOnly.genecount.txt", header = T, row.names = 1)
sampleinfo <- read.delim("microglia-41-samples.F-14samps.tumResecOnly.sampInfo.txt", row.names=1)
group <- factor(sampleinfo$Tumor)
y <- DGEList(counts=rawCount,group=group)
y <- calcNormFactors(y)
###mds <- plotMDS(y, top=98765)
###df <- data.frame(colnames(y), mds$x, mds$y)
keep <-rowSums(cpm(y)>=1) >= 4
y<-y[keep,]
dim(y)
#[1] 16546    14
design <- model.matrix(~sampleinfo$Tumor + sampleinfo$age)
y <- estimateDisp(y,design)
fit <- glmQLFit(y, design)
qlf <- glmQLFTest(fit, coef=2)
top2v1 <- topTags(qlf, n = 91234)
write.table(top2v1, "diff2-1.txt", sep="\t", quote = F)
mv -i diff2-1.txt female-14samps.tumResecOnly.diff2-1.txt
/Users/linyongmao/Documents/microglia/scrnaseq-metaannot-combine  female-14samps.tumResecOnly.diff2-1.txt         geneID-name-type-chr out
paste  female-14samps.tumResecOnly.diff2-1.txt out > female-14samps.tumResecOnly.name-type-chr.txt
./make-rnk-genesymble                female-14samps.tumResecOnly.name-type-chr.txt  female-14samps.tumResecOnly.rnk

mv temp.txt female-14samps.tumResecOnly.cpm.txt
cp female-14samps.tumResecOnly.cpm.txt temp-2
vi temp-2
bash script-gct-plus-0d01 > female-14samps.tumResecOnly.cpm.plus0.01.gct
vi female-14samps.tumResecOnly.cpm.cls

###male, TAM vs control, tumor resection only
rawCount <- read.delim("microglia-41-samples.M-17samps.tumResecOnly.genecount.txt", header = T, row.names = 1) 
sampleinfo <- read.delim("microglia-41-samples.M-17samps.tumResecOnly.sampInfo.txt", row.names=1)
group <- factor(sampleinfo$Tumor)
y <- DGEList(counts=rawCount,group=group)
y <- calcNormFactors(y)
keep <-rowSums(cpm(y)>=1) >= 4
y<-y[keep,]
dim(y)
#[1] 15998    17
d <- cpm(y)
write.table(d, "temp.txt", quote=F, sep = "\t")
mv -i temp.txt M-17samps.tumResecOnly.cpm.txt
cp   M-17samps.tumResecOnly.cpm.txt temp-2
vi temp-2
bash script-gct-plus-0d01 > M-17samps.tumResecOnly.cpm.plus0.01.gct
vi M-17samps.tumResecOnly.cpm.cls

mv -i diff2-1.txt M-17samps.tumResecOnly.diff2-1.txt
/Users/linyongmao/Documents/microglia/scrnaseq-metaannot-combine  M-17samps.tumResecOnly.diff2-1.txt         geneID-name-type-chr out
paste  M-17samps.tumResecOnly.diff2-1.txt out > M-17samps.tumResecOnly.name-type-chr.txt
./make-rnk-genesymble                M-17samps.tumResecOnly.name-type-chr.txt  M-17samps.tumResecOnly.rnk

#############################################
###fisher multi row test
> a <- scan()
1: 0	3	2	0
5: 3	4	2	6
9: 0	1	0	0
13: 3	1	2	2
17: 1	1	3	5
21: 
Read 20 items
> m <- matrix(a, nrow=5, ncol = 4, byrow=T)
> m
     [,1] [,2] [,3] [,4]
[1,]    0    3    2    0
[2,]    3    4    2    6
[3,]    0    1    0    0
[4,]    3    1    2    2
[5,]    1    1    3    5
> # XX_cotrol	XX_Tumor	XY control	XY Tumor
> y <- m[,c(2,4)]
> y
     [,1] [,2]
[1,]    3    0
[2,]    4    6
[3,]    1    0
[4,]    1    2
[5,]    1    5
> fisher.test(y)

	Fisher's Exact Test for Count Data

data:  y
p-value = 0.1367
alternative hypothesis: two.sided

setwd("/Users/linyongmao/Documents/microglia")
f <- read.delim("temp-HALLMARK_INTERFERON_GAMMA_RESPONSE-f-m-ranks.txt")
boxplot(f$rank1, f$rank2, xlab = "", ylab = "logFC based gene ranks in percentile")
beeswarm(data.frame(f$rank1, f$rank2),  pch = 1, col = 1, cex = 1, add = T)
axis(1, at = 1:2, labels=c("F", "M"))
title(main="HALLMARK_INTERFERON_GAMMA_RESPONSE \n p = 3.09E-06 (t test, 193 genes)")

f <- read.delim("temp-HALLMARK_E2F_TARGETS-f-m-ranks.txt")
boxplot(f$rank1, f$rank2, xlab = "", ylab = "logFC based gene ranks in percentile")
beeswarm(data.frame(f$rank1, f$rank2),  pch = 1, col = 1, cex = 1, add = T)
title(main="HALLMARK_E2F_TARGETS \n p = 0.00721 (t test, 198 genes)")
axis(1, at = 1:2, labels=c("F", "M"))

head -1 microglia-41-samples.male20samp.noCereb.noOcci.genecount.txt | awk 'BEGIN {FS = "\t"; OFS = "\t"} {for(i = 1; i <= NF; i++) print i, $i}'  > temp-1
paste temp-1 microglia-41-samples.male20samp.noCereb.noOcci.sampInfo.txt | awk '$2 != $3'
head -1 microglia-41-samples.female13samp.noCereb.noOcci.genecount.txt | awk 'BEGIN {FS = "\t"; OFS = "\t"} {for(i = 1; i <= NF; i++) print i, $i}'  > temp-1
paste temp-1 microglia-41-samples.female13samp.noCereb.noOcci.sampInfo.txt | awk '$2 != $3'

####################################################################
###heatmap LEGs in female in HALLMARK_INTERFERON_GAMMA_RESPONSE
library(ComplexHeatmap)
library(beeswarm)
library(edgeR)
library("circlize")

setwd("/Users/linyongmao/Documents/microglia")
rawCount <- read.delim("microglia-41-samples.female17samp.genecount.txt", header = T, row.names = 1)
sampleinfo <- read.delim("microglia-41-samples.female17samp.sampInfo.txt", row.names=1)
y <- DGEList(counts=rawCount)
y <- calcNormFactors(y)
keep <-rowSums(cpm(y)>=1) >= 4
y<-y[keep,]
dim(y)
###[1] 16850    17

d = cpm(y)
a <- d
b = log10(a+1)
for(i in 1:dim(b)[1])
{
 a[i, ] <- (b[i, ] - mean(as.numeric(b[i,]))) / var(as.numeric(b[i,]))^(1/2)
}
### a is  z score of expressed genes in female samples
write.table(rownames(a), "temp-filt-geneID.txt", quote=F, sep = "\t")
cut -f 2 temp-filt-geneID.txt  > temp-filt-geneID.2.txt
vi  temp-filt-geneID.2.txt
/Users/linyongmao/Documents/microglia/scrnaseq-metaannot-combine  temp-filt-geneID.2.txt geneID-name out
cut -f 1-2 out | awk 'BEGIN {FS = "\t"; OFS = "\t"} {print $2, $1}' > temp-filt-geneID.2.name-ID.txt
bash script-female-specific-genes
vi temp-female-only
/Users/linyongmao/Documents/microglia/scrnaseq-metaannot-combine    temp-female-only temp-filt-geneID.2.name-ID.txt out
cut -f 1-2 out | awk 'BEGIN {FS = "\t"; OFS = "\t"} {print $2, $1}' > out-2
/Users/linyongmao/Documents/microglia/scrnaseq-metaannot-combine  out-2 geneID-name-type-chr out-3
mv -i out-3 femaleOnlyLEGs-HALLMARK_INTERFERON_GAMMA_RESPONSE.txt

###LEGs ONLY from male dataset, but retrieve sames genes from female, some genes may miss from female due to gene filtering
cat maleOnlyLEGs-HALLMARK_E2F_TARGETS.txt | awk 'BEGIN {FS = "\t"; OFS = "\t"} {print $2, $1}' > temp-name-id
fc="/Users/linyongmao/gsea_home/output/microgliaSex/templogratioPlus0d01usMedian.Gsea.1635801846691/ranked_gene_list_Tumor_versus_Control_1635801846691.tsv"
pc="/Users/linyongmao/gsea_home/output/microgliaSex/microglia_female_prerank_p.GseaPreranked.1635699072273/ranked_gene_list_na_pos_versus_na_neg_1635699072273.tsv"
......
paste  out5  out6  > maleOnlyLEGs-HALLMARK_E2F_TARGETS.female.fc.p-value.txt
> g <- read.delim("maleOnlyLEGs-HALLMARK_E2F_TARGETS.female.fc.p-value.txt", header=F)
> g
a.df <- as.data.frame(a)
a.df$id <- rownames(a.df)
a.df.g <- merge(a.df, g, by.x="id", by.y="V8")
mat <- as.matrix(a.df.g[,2:18])
rownames(mat) <- a.df.g$V1

dim(mat)

col_fun = colorRamp2(c(-1,0,1), c("green", "white",  "magenta"))
col_fun_2 = colorRamp2(c(-2,log10(0.25),0), c("green", "white",  "magenta"))
ca <- HeatmapAnnotation(log2FC= a.df.g$V3, log10Pval = -abs(a.df.g$V6), which="row", col=list(log2FC = col_fun, log10Pval = col_fun_2))
col_fun_3 = colorRamp2(c(-3,0,3), c("blue", "white",  "red"))
ha <- HeatmapAnnotation(group=sampleinfo$controTumor, colAvg = colMeans(mat),  
      col = list(group = c("Control" = "green", "Tumor" = "red"), colAvg = col_fun_3))
Heatmap(matrix = mat,
                top_annotation = ha,
        name = "mRNA", row_names_gp = gpar(fontsize = 8), clustering_distance_columns="euclidean", clustering_method_columns="complete",
        column_split=sampleinfo$controTumor,
         col = col_fun_3, right_annotation=ca, row_order=order(a.df.g$V3), column_order=order(colMeans(mat) + 4*(sampleinfo$controTumor == "Tumor")))	 
Heatmap(matrix = mat,
                top_annotation = ha,
        name = "mRNA", row_names_gp = gpar(fontsize = 8), clustering_distance_columns="euclidean", clustering_method_columns="complete", column_split=sampleinfo$controTumor, right_annotation=ca)

col_fun2 = colorRamp2(c(-4,0,4), c("blue", "white",  "red"))
ha <- HeatmapAnnotation(group=sampleinfo$controTumor, col = list(group = c("Control" = "green", "Tumor" = "red")))
Heatmap(matrix = mat,
                top_annotation = ha,
        name = "mRNA", row_names_gp = gpar(fontsize = 8), clustering_distance_columns="euclidean", clustering_method_columns="complete", 
	column_split=sampleinfo$controTumor, 
	right_annotation=ca, row_split= c("log2FC < 0.5", "log2FC > 0.5")[1+(fc[ rownames(mat) ,]$SCORE > 0.5)], col = col_fun2)
####################################################################
###heatmap selected genes in male in HALLMARK_INTERFERON_GAMMA_RESPONSE
library(ComplexHeatmap)
library(beeswarm)
library(edgeR)
library("circlize")

setwd("/Users/linyongmao/Documents/microglia")
rawCount <- read.delim("microglia-41-samples.male22samp.genecount.txt", header = T, row.names = 1)
sampleinfo <- read.delim("microglia-41-samples.male22samp.sampInfo.txt", row.names=1)
y <- DGEList(counts=rawCount)
y <- calcNormFactors(y)
keep <-rowSums(cpm(y)>=1) >= 5
y<-y[keep,]
dim(y)
###[1] 16246    22

d = cpm(y)
a <- d
b = log10(a+1)
for(i in 1:dim(b)[1])
{
 a[i, ] <- (b[i, ] - mean(as.numeric(b[i,]))) / var(as.numeric(b[i,]))^(1/2)
}
### a is  z score of expressed genes in female samples
write.table(rownames(a), "temp-filt-geneID.txt", quote=F, sep = "\t")
cut -f 2 temp-filt-geneID.txt  > temp-filt-geneID.2.txt
vi  temp-filt-geneID.2.txt
/Users/linyongmao/Documents/microglia/scrnaseq-metaannot-combine  temp-filt-geneID.2.txt geneID-name out
cut -f 1-2 out | awk 'BEGIN {FS = "\t"; OFS = "\t"} {print $2, $1}' > temp-filt-geneID.2.name-ID.txt
bash script-female-specific-genes
vi temp-female-only
/Users/linyongmao/Documents/microglia/scrnaseq-metaannot-combine    temp-female-only temp-filt-geneID.2.name-ID.txt out

fc="/Users/linyongmao/gsea_home/output/microgliaSex/tempMale_logratioPlus0d01usMedian.Gsea.1635809488219/ranked_gene_list_Tumor_versus_Control_1635809488219.tsv"
cat maleOnlyLEGs-HALLMARK_E2F_TARGETS.txt | awk 'BEGIN {FS = "\t"; OFS = "\t"} {print $2, $1}' > temp-name-id
/Users/linyongmao/Documents/microglia/scrnaseq-metaannot-combine  temp-name-id $fc out
cat out | grep -vw notApplicable > out2
pc="/Users/linyongmao/gsea_home/output/microgliaSex/microglia_male_prerank_p.GseaPreranked.1635699117040/ranked_gene_list_na_pos_versus_na_neg_1635699117040.tsv"
/Users/linyongmao/Documents/microglia/scrnaseq-metaannot-combine out2 $pc out3
cat out3 | awk '{print $1 "\t" $2}' > out4
paste out2 out4 > out5
/Users/linyongmao/Documents/microglia/scrnaseq-metaannot-combine  out5 temp-name-id out6
paste  out5  out6 | awk 'BEGIN {FS = "\t"; OFS = "\t"}  $1 != $5' | wc -l
paste  out5  out6 | awk 'BEGIN {FS = "\t"; OFS = "\t"}  $1 != $7' | wc -l
paste  out5  out6  > maleOnlyLEGs-HALLMARK_E2F_TARGETS.fc.p-value.txt

g <- read.delim("maleOnlyLEGs-HALLMARK_E2F_TARGETS.fc.p-value.txt", header=F)
g.f <- read.delim("maleOnlyLEGs-HALLMARK_E2F_TARGETS.female.fc.p-value.txt", header=F)
t <- merge(g, g.f, by.x="V1", by.y = "V1", all.x = TRUE)
dim(t)
g <- t
a.df <- as.data.frame(a)
a.df$id <- rownames(a.df)
a.df.g <- merge(a.df, g, by.x="id", by.y="V8.x")
dim(a.df.g)
a.df.g
mat <- as.matrix(a.df.g[,2:23])
rownames(mat) <- a.df.g$V1
dim(mat)
##[1] 27 22
ha <- HeatmapAnnotation(group=sampleinfo$controTumor, col = list(group = c("Control" = "green", "Tumor" = "red")))
col_fun = colorRamp2(c(-1,0,1), c("green", "white",  "magenta"))
col_fun_2 = colorRamp2(c(-2,log10(0.25),0), c("green", "white",  "magenta"))
ca <- HeatmapAnnotation(log2FC= a.df.g$V3.x, log10Pval = -abs(a.df.g$V6.x), which="row", col=list(log2FC = col_fun, log10Pval = col_fun_2))
col_fun_3 = colorRamp2(c(-3,0,3), c("blue", "white",  "red"))
ha <- HeatmapAnnotation(group=sampleinfo$controTumor, colAvg = colMeans(mat),  
      col = list(group = c("Control" = "green", "Tumor" = "red"), colAvg = col_fun_3))

for(i in 1:length(a.df.g$V3.y))
{ if(is.na(a.df.g$V3.y[i]))
     a.df.g$V3.y[i] = 0
}
Heatmap(matrix = mat,
                top_annotation = ha,
        name = "mRNA", row_names_gp = gpar(fontsize = 8), clustering_distance_columns="euclidean", clustering_method_columns="complete",
        column_split=sampleinfo$controTumor,
         col = col_fun_3, right_annotation=ca, row_order=order(a.df.g$V3.y), column_order=order(colMeans(mat) + 4*(sampleinfo$controTumor == "Tumor")))


ha <- HeatmapAnnotation(group=sampleinfo$controTumor)
fc <- read.delim("/Users/linyongmao/gsea_home/output/microgliaSex/tempMale_logratioPlus0d01usMedian.Gsea.1635809488219/ranked_gene_list_Tumor_versus_Control_1635809488219.tsv", row.names=1)
length(fc[ rownames(mat) ,]$SCORE)
dim(mat)
col_fun = colorRamp2(c(-1,0,1), c("blue", "white",  "red"))
ca <- HeatmapAnnotation(logFC=fc[ rownames(mat) ,]$SCORE, which="row", col=list(logFC = col_fun))
Heatmap(matrix = mat,
                top_annotation = ha,
        name = "mRNA", row_names_gp = gpar(fontsize = 8), clustering_distance_columns="euclidean", clustering_method_columns="complete", column_split=sampleinfo$controTumor, right_annotation=ca, row_split= c("log2FC < 0.5", "log2FC > 0.5")[1+(fc[ rownames(mat) ,]$SCORE > 0.5)])


#########################
###t1 <- fc[ rownames(mat) ,]
t1 <- fc[ rownames(fc) %in% rownames(mat),]
names0.5 <- rownames(t1[ t1$SCORE <= 0.5, ])
df1 <- as.data.frame(mat[,1])
df1$split = "geneset1"
df1[ rownames(df1) %in% names0.5, ]$split = "geneset2"
Heatmap(matrix = mat,
                top_annotation = ha,
        name = "mRNA", row_names_gp = gpar(fontsize = 8), clustering_distance_columns="euclidean", clustering_method_columns="complete", column_split=sampleinfo$controTumor, right_annotation=ca, row_split=df1$split)

#############################################################################
####PCA plot of39 samples
cut -f 1,6,10,11,16,17,18,19,23,24,27,29,32,33,35,41,42,43,3,4,7,8,9,12,13,14,15,20,21,22,25,26,28,30,34,36,37,38,39,40 microglia-41-samples.genecount.txt > temp.txt
t <- read.delim("temp.txt", header = T, row.names = 1)
dim(t)
##[1] 58302    39
rawCount <- t
group <- factor(rep(1, 39))
y <- DGEList(counts=rawCount,group=group)
y <- calcNormFactors(y)
med <- data.frame(y$counts[,1])
med$logic <- TRUE
d <- cpm(y)
for(i in 1:dim(y)[1]) {
 med$logic[i] <- median(d[i,]) >= 1
}
y<-y[med$logic,]
dim(y)
###[1] 14170    39
mds <- plotMDS(y, top=98765)
x <- cbind( colnames(y$counts), mds$x, mds$y)
write.table(x, "temp.txt", quote = F, sep = "\t")
x <- as.data.frame(x)
info <- read.delim("microglia-39-sample-sampInfo.txt", row.names=1)
rownames(x) <- colnames(y$counts)
info$id <- rownames(info)
pca.info <- merge(x, info, by.x="V1", by.y="id")

plot(pca.info$V2, pca.info$V3, cex=0.05, xlab="PC1 (19%)", ylab = "PC2 (14%)")
###text(as.numeric(x.info$V2), as.numeric(x.info$V3), paste(info$XX, info$Tumor))
points(pca.info[ pca.info$XX == "XX" & pca.info$Tumor == "Tumor", ]$V2, pca.info[ pca.info$XX == "XX" & pca.info$Tumor == "Tumor", ]$V3, col = "red", pch = 16 , cex = 1.6)
points(pca.info[ pca.info$XX == "XX" & pca.info$Tumor == "Control", ]$V2, pca.info[ pca.info$XX == "XX" & pca.info$Tumor == "Control", ]$V3, col = "green", pch = 16 , cex = 1.6)
points(pca.info[ pca.info$XX == "XY" & pca.info$Tumor == "Tumor", ]$V2, pca.info[ pca.info$XX == "XY" & pca.info$Tumor == "Tumor", ]$V3, col = "red", pch = 17 , cex = 1.6)
points(pca.info[ pca.info$XX == "XY" & pca.info$Tumor == "Control", ]$V2, pca.info[ pca.info$XX == "XY" & pca.info$Tumor == "Control", ]$V3, col = "green", pch = 17 , cex = 1.6)
legend("topleft", inset = 0.05, c("XX control", "XX tumor", "XY control", "XY tumor"), pch=c(16,16,17,17), col = c("green", "red", "green", "red" ))

###boxplot per four groups
pca.info$group <- paste(pca.info$XX, pca.info$Tumor)
boxplot(as.numeric( pca.info$V3) ~ pca.info$group, xlab="", ylab = "PC2")
beeswarm(as.numeric( pca.info$V3) ~ pca.info$group, pch = c(16,16,17,17), col = c("green", "red", "green", "red" ), cex = 2, add = T)
###add horizon grid line
> abline(h = seq(20,80,10), lty = 5, lwd = 0.5, col = "gray")

xxco <- pca.info[ pca.info$group == "XX Control",]$V3
xxtu <- pca.info[ pca.info$group == "XX Tumor",]$V3
xyco <- pca.info[ pca.info$group == "XY Control",]$V3
xytu <- pca.info[ pca.info$group == "XY Tumor",]$V3
ll <- list(xxco = xxco, xxtu = xxtu, xyco = xyco, xytu = xytu )
for(i in 1:length(ll)) {
 for(j in 1:length(ll)) {
wilcox <- wilcox.test(as.numeric( ll[[i]]),as.numeric( ll[[j]]), paired=F, exact=F, conf.int = T)
str <- paste(names(ll)[i], names(ll)[j], wilcox$p.value, sep = "\t" )
cat(str)
cat("\n")
 } }

boxplot(as.numeric( pca.info$V2) ~ pca.info$group, xlab="", ylab = "PC1")
beeswarm(as.numeric( pca.info$V2) ~ pca.info$group, pch = c(16,16,17,17), col = c("green", "red", "green", "red" ), cex = 2, add = T)
xxco <- pca.info[ pca.info$group == "XX Control",]$V2
xxtu <- pca.info[ pca.info$group == "XX Tumor",]$V2
xyco <- pca.info[ pca.info$group == "XY Control",]$V2
xytu <- pca.info[ pca.info$group == "XY Tumor",]$V2
ll <- list(xxco = xxco, xxtu = xxtu, xyco = xyco, xytu = xytu )
for(i in 1:length(ll)) {
 for(j in 1:length(ll)) {
wilcox <- wilcox.test(as.numeric( ll[[i]]),as.numeric( ll[[j]]), paired=F, exact=F, conf.int = T)
str <- paste(names(ll)[i], names(ll)[j], wilcox$p.value, sep = "\t" )
cat(str)
cat("\n")
 } }

boxplot(as.numeric( pca.info$V2) ~ pca.info$XX, xlab="", ylab = "PC1")
beeswarm(as.numeric( pca.info$V2) ~ pca.info$XX, pch = c(16,17), col = c("green", "green"), cex = 2, add = T)
xx <- pca.info[ pca.info$XX == "XX",]$V2
xy <- pca.info[ pca.info$XX == "XY",]$V2
wilcox.test(as.numeric(xx), as.numeric(xy), paired=F, exact=F, conf.int = T)

########multiple groups, [1] "XX Control"             "XX Benign resection"    "XX Tumor resection"     "XX Met resection"      
########[5] "XY Control"             "XY Low grade resection" "XY Tumor resection"   
pca.info$grape2 <- pca.info$grade
for(i in 1:dim(pca.info)[1]) {
 if(pca.info$Tumor[i] == "Control")
  { pca.info$grape2[i] = "Control"
  }
}
pca.info$grape3 <- paste(pca.info$XX, pca.info$grape2)
b <- sort(unique(paste(pca.info$XX, pca.info$grape2) ))
pca.info$grape3 <- factor( pca.info$grape3, levels=c(b[2], b[1], b[4], b[3], b[5:7]) )
####4in wide, 3 in high
par(pin=c(4,3))
boxplot(as.numeric(pca.info$V3) ~ pca.info$grape3 , xaxt = "n", ylab = "PC2", xlab = "")
#####las = 2 perpendicular,
axis(side = 1, 
     ## Rotate the labels.
     labels=c(b[2], b[1], b[4], b[3], b[5:7]) , at = 1:7, las =2)
beeswarm(as.numeric(pca.info$V3) ~ pca.info$grape3 ,add =T,pch = c(16,16,16,16,17,17,17), col=c("green", "red","red","red", "green", "red", "red"))

t1 <- pca.info[ pca.info$grape3 == "XY Low grade resection",  ]$V3
t2 <- pca.info[ pca.info$XX == "XX" & pca.info$Tumor == "Tumor",  ]$V3
t3 <- pca.info[ pca.info$grape3 == "XX Tumor resection",  ]$V3
t4 <- pca.info[ pca.info$grape3 == "XY Tumor resection",  ]$V3

cx <- pca.info[ pca.info$XX == "XX" & pca.info$Tumor == "Control",  ]$V3
cy <- pca.info[ pca.info$XX == "XY" & pca.info$Tumor == "Control",  ]$V3
tx <- pca.info[ pca.info$XX == "XX" & pca.info$Tumor == "Tumor",  ]$V3
ty <- pca.info[ pca.info$XX == "XY" & pca.info$Tumor == "Tumor",  ]$V3


d <- mean(as.numeric(cy)) - mean(as.numeric(cx))
> d
[1] 0.02690553

t.test(as.numeric(t3),as.numeric(t4))
wilcox.test(as.numeric(t3),as.numeric(t4))

t.test(as.numeric(t1) - mean(as.numeric(cy)),as.numeric(t3) - mean(as.numeric(cx)))
t.test(as.numeric(t4) - mean(as.numeric(cy)),as.numeric(t3) - mean(as.numeric(cx)))

t.test(as.numeric(tx),as.numeric(ty))
t.test(as.numeric(tx) - mean(as.numeric(cx)),as.numeric(ty) - mean(as.numeric(cy)))

######[1] XX Control             XX Tumor               XY Control             XY Low grade resection XY Tumor resection;   5 categories instead of 7 categories                                                                           

pca.info$grape2 <- pca.info$grade
for(i in 1:dim(pca.info)[1]) {
 if(pca.info$Tumor[i] == "Control")
  { pca.info$grape2[i] = "Control"
  }
}
pca.info$grape3 <- paste(pca.info$XX, pca.info$grape2)
pca.info[ pca.info$XX == "XX" & pca.info$Tumor == "Tumor",]$grape3 <- "XX Tumor"
pca.info$grape3 <- factor( pca.info$grape3)
boxplot(as.numeric(pca.info$V3) ~ pca.info$grape3 ,  ylab = "PC2 (14%)", xlab = "")
beeswarm(as.numeric(pca.info$V3) ~ pca.info$grape3 ,add =T,pch = c(16,16,17,17,17), col=c("green", "red","green","red", "red", "red"), cex=2)
abline(h = seq(-2,2,0.1), lty = 5, lwd = 0.5, col = "gray")
t1 <- pca.info[ pca.info$grape3 == "XY Control",]$V3
t2 <- pca.info[ pca.info$grape3 == "XY Low grade resection",]$V3
t3 <- pca.info[ pca.info$grape3 == "XY Tumor resection",]$V3
t.test( as.numeric(t1), as.numeric(t2))
mean(as.numeric(t1)) - mean(as.numeric(t2))
t4 <- pca.info[ pca.info$grape3 == "XX Control",]$V3
t5 <- pca.info[ pca.info$grape3 == "XX Tumor",]$V3
res.f <- t.test( as.numeric(t4), as.numeric(t5))
res.f$p.value
res.m.low <- t.test( as.numeric(t1), as.numeric(t2))
res.m.resect <- t.test( as.numeric(t1), as.numeric(t3))
res.m.resec.low <- t.test( as.numeric(t2), as.numeric(t3))
res.m.low$p.value
res.m.resect$p.value
res.m.resec.low$p.value

h = 0.6
lines(c(3,4), c(h,h), col="blue")
text(3.5, h, paste("p=", format(res.m.low$p.value , digits=3), sep=""), pos=3 ) 
h = 0.7
lines(c(4,5), c(h,h), col="blue")
text(4.5, h, paste("p=", format(res.m.resec.low$p.value , digits=3), sep=""), pos=3 )
h = 0.8
lines(c(3,5), c(h,h), col="blue")
text(4, h, paste("p=", format(res.m.resect$p.value , digits=3), sep=""), pos=3 )
h = 0.7
lines(c(1,2), c(h,h), col="blue")
text(1.5, h, paste("p=", format(res.f$p.value , digits=3), sep=""), pos=3 )

##############################################################################
#####lm(), PC2 ~ multivariables
res <- lm(-as.numeric(pca.info$V3) ~ pca.info$XX + pca.info$location + pca.info$age + pca.info$Tumor)
r <- summary(res)
r

res <- lm(-as.numeric(pca.info$V3) ~  pca.info$Tumor)
r <- summary(res)

a <- pca.info[pca.info$Tumor == "Tumor", ]
res <- lm(-as.numeric(a$V3) ~ a$XX + a$location + a$age )
r <- summary(res)

a <- pca.info[pca.info$Tumor == "Control", ]
res <- lm(-as.numeric(a$V3) ~ a$XX + a$location + a$age )
r <- summary(res)

pca.info$group <- paste(pca.info$XX, pca.info$Tumor)
boxplot(as.numeric( pca.info$V3) ~ pca.info$group, xlab="", ylab = "PC2")
beeswarm(as.numeric( pca.info$V3) ~ pca.info$group, pch = c(16,16,17,17), col = c("green", "red", "green", "red" ), cex = 2, add = T)
###add horizon grid
abline(h = seq(-0.8, 1.1, 0.1), lty = 5, lwd = 0.5, col = "gray")
b <- sort(unique(pca.info$group))
text(1, as.numeric(pca.info[ pca.info$location == "Temporal" & pca.info$group == b[1],]$V3),"Tempor", cex = 1)
text(2, as.numeric(pca.info[ pca.info$location == "Temporal" & pca.info$group == b[2],]$V3),"Tempor", cex = 1)
text(3, as.numeric(pca.info[ pca.info$location == "Temporal" & pca.info$group == b[3],]$V3),"Tempor", cex = 1)
text(4, as.numeric(pca.info[ pca.info$location == "Temporal" & pca.info$group == b[4],]$V3),"Tempor", cex = 1)
text(1, as.numeric(pca.info[ pca.info$location == "Cerebellum" & pca.info$group == b[1],]$V3),"cere", cex = 1)
text(2, as.numeric(pca.info[ pca.info$location == "Cerebellum" & pca.info$group == b[2],]$V3),"cere", cex = 1)
text(3, as.numeric(pca.info[ pca.info$location == "Cerebellum" & pca.info$group == b[3],]$V3),"cere", cex = 1)
text(4, as.numeric(pca.info[ pca.info$location == "Cerebellum" & pca.info$group == b[4],]$V3),"cere", cex = 1)

#############################################################################
###recurrent LEGs in female-biased pathways
g <- read.delim("out", row.names=1)
mat <- as.matrix(g)
col_fun = colorRamp2(c(0,1), c("white",  "magenta"))
Heatmap(matrix = mat,
        name = "LEGs", row_names_gp = gpar(fontsize = 8), column_names_gp = gpar(fontsize = 7), clustering_distance_columns="pearson", clustering_method_columns="complete", column_names_side ="top", clustering_distance_rows="pearson" , cell_fun = function(j, i, x, y, width, height, fill) {grid.rect(x = x, y = y, width = width, height = height,
            gp = gpar(col = "grey", fill = NA)) }, col = col_fun)

##############################################################################
#######LEGs in four groups
cpm <- read.delim("microglia-41-samples.female-male.39samp.cpm.txt")
./make-table-pathway-contain-genes list-of-pathway-LEGs-file list-of-pathway-recurr-genes out
cat out
cat femaleOnlyLEGs-HALLMARK_ALLOGRAFT_REJECTION.txt-list.txt      femaleOnlyLEG.. | sort |  uniq -c | awk '$1 > 3 {print $2}'  | grep -v symbol > temp-name-id
g <- read.delim("temp-name-id", header=F)
cpm.g <- cpm[ cpm$symbol %in% g$V1, ]
cpm.g.t <- as.data.frame( t(cpm.g))
dim(cpm.g.t)
###[1] 44 12
cpm.g.t$id <- rownames(cpm.g.t)
info <- read.delim("microglia-39-sample-sampInfo.txt")
cpm.g.t.info <- merge(cpm.g.t, info,  by.x="id", by.y = "id1", all.x = TRUE)
cpm.g.t.info$group <- paste(cpm.g.t.info$XX, cpm.g.t.info$Tumor, sep = "_")

layout(matrix(1:6, 2, 3, byrow=T) )
for(i in 2:7) {
boxplot( log2(as.numeric( cpm.g.t.info[4:42,i])+1) ~ cpm.g.t.info[4:42,]$group, xlab="", ylab = "log2 (cpm+1)", outline=T, pch = c(1,1,2,2),  cex=1)
beeswarm(log2(as.numeric( cpm.g.t.info[4:42,i])+1) ~ cpm.g.t.info[4:42,]$group, pch = c(1,1,2,2), col = c("green", "red", "green", "red" ), cex = 1, add = T)
title(main= cpm.g.t.info[43,i] )
}

###############################################gene level expression 39 sample boxplot
t1 <- read.delim("female-noCereb.noOcci-diff2-1.name-type-chr.txt")
t2 <- read.delim("male-noCereb.noOcci-diff2-1.name-type-chr.txt")
f.m <- merge(t1,t2, by.x="geneID", by.y="geneID", all=T)
g1 <- scan(what="", sep = "\n")
IL12A
IL12B
IL23A
TNF
IL1B
IL4
Il5
IL6
ICAM1
CXCL1
CXCL2
CXCL3
CXCL5
CXCL8
CXCL9
CXCL10

t3 <- f.m[ f.m$symbol.x %in% unique(g1), ]
dim(t3)
t4 <- t3[ t3$PValue.x < 0.05, ]
t4[, c(2,5,8,11,14,17) ]


###t5 <- sort.int(t4$PValue.x, index.return=T )
###sort t4 by XX p-value
##t4 <- t4[t5$ix,]

t <- read.delim("temp.txt", header = T, row.names = 1)
dim(t)
##[1] 58302    39
rawCount <- t
group <- factor(rep(1, 39))
y <- DGEList(counts=rawCount,group=group)
y <- calcNormFactors(y)
cpm <- cpm(y)
cpm.g <- cpm[ rownames(cpm) %in% t4$geneID, ]
cpm.g.t <- as.data.frame( t(cpm.g))
dim(cpm.g.t)
#[1] 39 8genes
cpm.g.t$id <- rownames(cpm.g.t)
info <- read.delim("microglia-39-sample-sampInfo.txt")
cpm.g.t.info <- merge(cpm.g.t, info,  by.x="id", by.y = "id1", all.x = TRUE)
cpm.g.t.info$group <- paste(cpm.g.t.info$XX, cpm.g.t.info$Tumor, sep = "_")

layout(matrix(1:9, 3, 3, byrow=T) )
for(i in 2:9) { ##8 genes
boxplot( log2( cpm.g.t.info[,i] + 1 ) ~ cpm.g.t.info$group, xlab="", ylab = "log2 (cpm+1)", outline=T, pch = c(1,1,2,2),  cex=1 , outcol="white")
beeswarm( log2( cpm.g.t.info[,i] + 1 ) ~ cpm.g.t.info$group, pch = c(1,1,2,2), col = c("green", "red", "green", "red" ), cex = 1, add = T)
id <- colnames(cpm.g.t.info)[i]
name <- t4[t4$geneID == id,]$symbol.x
title(main = name)
}

###M2
M2 macrophages are characterized by the upregulation of Dectin-1, DC-SIGN, mannose receptor, scavenger receptor A, scavenger receptor B-1, CD163, CCR2, CXCR1, and CXCR2
while M2 macrophages generate anti-inflammatory cytokine such as IL-10 and very low level of pro-inflammatory cytokine such as IL-12

IL-12(-)
IL10
TGFB2
TGFB3
CD163
CCR2
CXCR1
CXCR2

####M1
 and the typical characteristics of M1 macrophages include high antigen presentation, high production of IL-12 and IL-23,
Second, inflammatory M1 macrophages produce many other pro-inflammatory cytokines like TNFα, IL-1, IL-6, IL-12, Type I IFN, CXCL1-3, CXCL-5, and CXCL8-10 (9),

##############################gene level expression 33 samples - no cereb, no occip
cpm.info.noCereb <- cpm.g.t.info[ cpm.g.t.info$location != "Cerebellum" & cpm.g.t.info$location != "Occipital", ]
dim(cpm.info.noCereb)
layout(matrix(1:9, 3, 3, byrow=T) )
for(i in 2:9) { ##8 genes
boxplot( log2( cpm.info.noCereb[,i] + 1 ) ~ cpm.info.noCereb$group, xlab="", ylab = "log2 (cpm+1)", outline=T, pch = c(1,1,2,2),  cex=1 , outcol="white")
beeswarm( log2( cpm.info.noCereb[,i] + 1 ) ~ cpm.info.noCereb$group, pch = c(1,1,2,2), col = c("green", "red", "green", "red" ), cex = 1, add = T)
id <- colnames(cpm.info.noCereb)[i]
name <- t4[t4$geneID == id,]$symbol.x
title(main = name)
}

###p-value on boxplot
p.x <- t4[t4$geneID == id,]$PValue.x
p.x
###[1] 0.6036653
p.y <- t4[t4$geneID == id,]$PValue.y
 p.y
h = 2.7
lines(c(3,4), c(h,h), col="blue")
lines(c(1,2), c(h,h), col="blue")
text(1.5, h, paste("p=", format(p.x, digits=3), sep=""), pos=3 )
text(3.5, h, paste("p=", format(p.y, digits=3), sep=""), pos=3 )

###############tumResecOnly gene level expression boxplot
........
> t1 <- read.delim("female-14samps.tumResecOnly.name-type-chr.txt")
> t2 <- read.delim("M-17samps.tumResecOnly.name-type-chr.txt")
> t4 <- t3[ (t3$PValue.x < 0.05 & !is.na(t3$PValue.x)) | (t3$PValue.y < 0.05 & !is.na(t3$PValue.y)) , ]
........
> cpm.g.t.info.resect <- cpm.g.t.info[ cpm.g.t.info$Tumor == "Control" | cpm.g.t.info$grade == "Tumor resection",]

layout(matrix(1:6, 2, 3, byrow=T) )
for(i in 2:7) { ## genes
boxplot( log2( cpm.g.t.info.resect[,i] + 1 ) ~ cpm.g.t.info.resect$group, xlab="", ylab = "log2 (cpm+1)", outline=T, pch = c(1,1,2,2),  cex=1 , outcol="white")
beeswarm( log2( cpm.g.t.info.resect[,i] + 1 ) ~ cpm.g.t.info.resect$group, pch = c(1,1,2,2), col = c("green", "red", "green", "red" ), cex = 1, add = T)
id <- colnames(cpm.g.t.info.resect)[i]
name <- t4[t4$geneID == id,]$symbol.x
title(main = name)
}

#############################################################################
#######whole pathway level z-score boxplot
d = cpm(y)
a <- d
b = log10(a+1)
for(i in 1:dim(b)[1])
{
 a[i, ] <- (b[i, ] - mean(as.numeric(b[i,]))) / var(as.numeric(b[i,]))^(1/2)
}
###a is z-score of log10(cpm+1)
info <- read.delim("microglia-39-sample-sampInfo.txt")
g <- read.delim("geneID-name")
a.df <- as.data.frame(a)
a.df$id <- row.names(a.df)
a.df.g <- merge(a.df, g, by.x="id", by.y="geneID")
dim(a.df.g)
###[1] 14170    41
grep -i via_nfkb h.all* | awk '
BEGIN {FS = "\t"; OFS = ""}
{
 for(i = 3; i <= NF; i++)
 {
  if($i != "")
    print $i;
 }
}
' > temp-path.genes
p <- read.delim("temp-path.genes", header=F)
p.exp <- a.df.g[ a.df.g$name %in% p$V1, ]
length(p.exp$name)
###[1] 185
mat <- as.matrix(p.exp[, 2:40])
res <- data.frame(id = colnames(mat), mean = colMeans(mat))
> res
             id        mean
MGB_009 MGB_009  0.16357008
MGB_011 MGB_011  0.04620055
MGB_016 MGB_016  1.47960440
MGB_018 MGB_018  0.40593726
MGB_022 MGB_022  0.49574590
MGB_023 MGB_023 -0.42584137

res.info <- merge(res, info, by.x="id", by.y="id1")
res.info$group <- paste(res.info$XX, res.info$Tumor)
boxplot(res.info$mean ~ res.info$group, xlab = "", ylab = "z-score avg of all genes")
title(main="HALLMARK_TNFA_SIGNALING_VIA_NFKB")
beeswarm(res.info$mean ~ res.info$group, pch = c(16,16,17,17), col = c("green", "red", "green", "red" ), cex = 2, add = T)

xxco <- res.info[ res.info$group == "XX Control",]$mean
xxtu <- res.info[ res.info$group == "XX Tumor",]$mean
xyco <- res.info[ res.info$group == "XY Control",]$mean
xytu <- res.info[ res.info$group == "XY Tumor",]$mean

#############################################################################
##########whole pathway level z-score boxplot; loop
layout(matrix(1:6, 2, 3, byrow=T) )
file <- read.delim("temp-files", header=F)
for(index in 1:6) {
 p <- read.delim(file[index,1], header=F)
 p.exp <- a.df.g[ a.df.g$name %in% p$V1, ]
 length(p.exp$name)
 ###[1] 185
 mat <- as.matrix(p.exp[, 2:40])
 res <- data.frame(id = colnames(mat), mean = colMeans(mat))
 ###> res        
 ###             id        mean
 ###MGB_009 MGB_009  0.16357008
 ###MGB_011 MGB_011  0.04620055
 
 res.info <- merge(res, info, by.x="id", by.y="id1")
 res.info$grape3 <- paste(res.info$XX, res.info$Tumor)
 par(cex = 0.4)
 boxplot(as.numeric(res.info$mean) ~ res.info$grape3 ,  ylab = "z-score avg of all genes", xlab = "")
 beeswarm(as.numeric(res.info$mean) ~ res.info$grape3 ,add =T,pch = c(16,16,17,17), col=c("green", "red", "green", "red"), cex = 1.5)
 title(main = file[index,1])
 }

#############################################################################
###pathway level z-score avg per group
###cp from R-lm-XX-XY-Tumor-Control-pathway-Zscores-age-loc
###a.df.g && info
sink("temp-2.txt")

file <- read.delim("temp-files", header=F)
for(index in 1:dim(file)[1]) {
 p <- read.delim(file[index,1], header=F)
 p.exp <- a.df.g[ a.df.g$name %in% p$V1, ]
 length(p.exp$name)
 ###[1] 185
 mat <- as.matrix(p.exp[, 2:40])
 res <- data.frame(id = colnames(mat), mean = colMeans(mat))
 res.info <- merge(res, info, by.x="id", by.y="id1")
 res.info$grape3 <- paste(res.info$XX, res.info$Tumor)
 
####header printed multiple times
cat("pathway")
cat("\t")
a <- sort(unique(res.info$grape3))
for(kk in 1:4) {
cat(a[kk])
cat("\t")
}
###pathway      XX Control   XX Tumor        XY Control      XY Tumor
cat("\n")

 cat(file[index,1])
 cat("\t")

 for(kk in 1:4) {
 cat(mean(res.info[ res.info$grape3 == a[kk] , ]$mean))
 cat("\t")
}
cat("\n")
}

sink()

cat temp-2.txt | awk 'NR % 2 == 1' | uniq > temp-3
cat temp-2.txt | awk 'NR % 2 == 0' | uniq >> temp-3
vi temp-3
b1 <- read.delim("temp-3")
summary(b1)
mat <- as.matrix(b1[, 2:5])
rownames(mat) <- b1[,1]
col_fun = colorRamp2(c(-0.4,0,0.4), c("blue", "white",  "red"))
ca <- HeatmapAnnotation(XX.T_XY.T = mat[,2] - mat[,4], which = "row", col=list(XX.T_XY.T = col_fun) )
Heatmap(matrix=mat, name = "z-score", row_names_gp = gpar(fontsize = 8), column_order=c(1:4), right_annotation=ca)

#######################################################################
#######15 pathways, 7 groups, pathway-level z-score of all genes,
#######[1] "XX Benign resection"    "XX Control"             "XX Met resection"       "XX Tumor resection"    
#######[5] "XY Control"             "XY Low grade resection" "XY Tumor resection"    

cat list-of-pathways | while read ll
do
  grep -i "$ll"  h.all.v7.4.symbols.gmt | awk '
BEGIN {FS = "\t"; OFS = ""}
{
 for(i = 3; i <= NF; i++)
 {
  if($i != "")
    print $i;
 }
}
' > "$ll".temp.genes
done

ls  *.temp.genes > temp-files
.......dim(a.df.g)
###[1] 14170    41

layout(matrix(1:6, 2, 3, byrow=T) )
file <- read.delim("temp-files", header=F)
for(index in 1:6) {
 p <- read.delim(file[index,1], header=F)
 p.exp <- a.df.g[ a.df.g$name %in% p$V1, ]
 length(p.exp$name)
 ###[1] 185
 mat <- as.matrix(p.exp[, 2:40])
 res <- data.frame(id = colnames(mat), mean = colMeans(mat))
 ###> res
 ###             id        mean
 ###MGB_009 MGB_009  0.16357008
 ###MGB_011 MGB_011  0.04620055

 res.info <- merge(res, info, by.x="id", by.y="id1")
 res.info$grape2 <- res.info$grade
 for(i in 1:dim(res.info)[1]) {
  if(res.info$Tumor[i] == "Control")
   { res.info$grape2[i] = "Control"
   }
 }
 res.info$grape3 <- paste(res.info$XX, res.info$grape2)
 b <- sort(unique(paste(res.info$XX, res.info$grape2) ))
 res.info$grape3 <- factor( res.info$grape3, levels=c(b[2], b[1], b[4], b[3], b[5:7]), labels=c("XXco", "XXBe", "XXTu", "XXme", "XYco", "XYlo", "XYTu") )
 par(cex = 0.4)
 boxplot(as.numeric(res.info$mean) ~ res.info$grape3 ,  ylab = "z-score avg of all genes", xlab = "")
 beeswarm(as.numeric(res.info$mean) ~ res.info$grape3 ,add =T,pch = c(16,16,16,16,17,17,17), col=c("green", "red","red","red", "green", "red", "red"), cex = 1.5)
 title(main = file[index,1])
 }

#############################################################################
####all pathway genes ranks avg diff (F-M) vs. NES difference
cp -i "temp-39samp-lm.txt" te-39samp-lm.txt
a <- read.delim("temp-39samp-lm.txt")
plot(a$NES.2 - a$NES, a$mean.diff..f.m. )
abline(h = seq(-100,100,5), lty = 5, lwd = 0.5, col = "gray")
abline(v = seq(-100,100,1), lty = 5, lwd = 0.5, col = "gray")

a1 <- a[ a$NES * a$NES.1 > 0 & a$NES.2 * a$NES.3 > 0 & a$NES * a$NES.2 > 0, ]
dim(a1)
###same NES direction between prerank & sample perm methods; same NES direction between F & M
###[1] 39pathways-out-of-hallmark 34fields
###a1 <- a[ a$NES * a$NES.2 > 0, ]
dim(a1)
##45 pathways
plot(a1$NES.2 - a1$NES, a1$mean.diff..f.m., xlab = "prerank.NES (M - F)", ylab = "allPathwayGenesRanks.average (F - M)" )
b <- a1$NES.2 - a1$NES
abline(lm(a1$mean.diff..f.m. ~ b ), lwd = 2 )
abline(h = seq(-100,100,5), lty = 5, lwd = 0.5, col = "gray")
abline(v = seq(-100,100,0.1), lty = 5, lwd = 0.5, col = "gray")
abline(h = 0, lty = 5, lwd = 0.8, col = "black")
abline(v = 0, lty = 5, lwd = 0.8, col = "black")
res <- cor.test(a1$mean.diff..f.m.  , b)
title(main=paste("hallmark pathways\n","r= ",round(res$estimate, digits = 3), " p=", format(res$p.value, digits=3), sep =""))
p <- read.delim("temp.paths")
###pathway as header
###14 pathways from PPT slide
a1.p <- merge(a1, p, by.x="NAME", by.y="pathway")
dim(a1.p)
##13 pathways, because for M, NES direction between prerank & sample perm method are opposite
##14 pathways if ONLY a$NES * a$NES.2 > 0
points( a1.p$NES.2 - a1.p$NES, a1.p$mean.diff..f.m., col = "red", pch = 16, cex = 1.1 )
legend("topleft", inset = 0.02, c("sig. sex-biased pathways"), pch=16, col = "red")

###vs NES difference (sample permuttation based
cp -i "temp-39samp-lm.txt" te-39samp-lm.txt
a <- read.delim("temp-39samp-lm.txt")
plot(a$NES.2 - a$NES, a$mean.diff..f.m. )
abline(h = seq(-100,100,5), lty = 5, lwd = 0.5, col = "gray")
abline(v = seq(-100,100,1), lty = 5, lwd = 0.5, col = "gray")

a1 <- a[ a$NES * a$NES.1 > 0 & a$NES.2 * a$NES.3 > 0 & a$NES * a$NES.2 > 0, ]
dim(a1)
###same NES direction between prerank & sample perm methods; same NES direction between F & M
###[1] 39pathways-out-of-hallmark 34fields
###a1 <- a[ a$NES * a$NES.2 > 0, ]
dim(a1)
##45 pathways
plot(a1$NES.3 - a1$NES.1, a1$mean.diff..f.m., xlab = "samp.perm.NES (M - F)", ylab = "allPathwayGenesRanks.average (F - M)" )
b <- a1$NES.3 - a1$NES.1
abline(lm(a1$mean.diff..f.m. ~ b ), lwd = 2 )
abline(h = seq(-100,100,5), lty = 5, lwd = 0.5, col = "gray")
abline(v = seq(-100,100,0.1), lty = 5, lwd = 0.5, col = "gray")
abline(h = 0, lty = 5, lwd = 0.8, col = "black")
abline(v = 0, lty = 5, lwd = 0.8, col = "black")
res <- cor.test(a1$mean.diff..f.m.  , b)
title(main=paste("hallmark pathways\n","r= ",round(res$estimate, digits = 3), " p=", format(res$p.value, digits=3), sep =""))
p <- read.delim("temp.paths")
###pathway as header
###14 pathways from PPT slide
a1.p <- merge(a1, p, by.x="NAME", by.y="pathway")
dim(a1.p)
##13 pathways, because for M, NES direction between prerank & sample perm method are opposite
##14 pathways if ONLY a$NES * a$NES.2 > 0
points( a1.p$NES.3 - a1.p$NES.1, a1.p$mean.diff..f.m., col = "red", pch = 16, cex = 1.1 )
legend("topleft", inset = 0.02, c("sig. sex-biased pathways"), pch=16, col = "red")

#############################################################################
####all pathway genes logFC ranks avg diff (F-M) ~ preRank.NES (M - F)
a <- read.delim("noCereb.noOcci.NES.geneRankMean.diff.txt")
a1 <- a[ a$NES * a$NES.1 > 0 , ]
dim(a1)
###[1] 38 17
plot(a1$NES.1 - a1$NES, a1$mean.diff..f.m., xlab = "prerank.NES (M - F)", ylab = "allPathwayGenesRanks.average (F - M)" )
b <- a1$NES.1 - a1$NES
abline(lm(a1$mean.diff..f.m. ~ b ), lwd = 2 )
abline(h = seq(-100,100,5), lty = 5, lwd = 0.5, col = "gray")
abline(v = seq(-100,100,0.1), lty = 5, lwd = 0.5, col = "gray")
abline(h = 0, lty = 5, lwd = 0.8, col = "black")
abline(v = 0, lty = 5, lwd = 0.8, col = "black")
res <- cor.test(a1$mean.diff..f.m.  , b)
title(main=paste("hallmark pathways\n","r= ",round(res$estimate, digits = 3), " p=", format(res$p.value, digits=3), sep =""))
a2 <- a[ a$FDR.q.val < 0.05 & a$t.test.p.value < 0.05 & a$mean.diff..f.m. < 0, ]
dim(a2)
###[1] 12 17
all39 <- read.delim("te-39samp-lm.txt")
a3 <- merge(a2, all39, by.x="NAME", by.y="NAME" )
dim(a3)
###[1] 12 50
nocereb <- read.delim("tumResecOnly.NES.geneRankMean.diff.txt")
a4 <- merge(a3, nocereb, by.x="NAME", by.y = "female.NAME")
dim(a4)
###[1] 12 81
#####pathway FC sample perm FDR < 0.25 from all 39 samples
a5 <- a4[ a4$FDR.q.val.1.y < 0.25 , ]  ###10 pathways 
points(a5$NES.1.x - a5$NES.x, a5$mean.diff..f.m..x, col = "red") ###, pch = 16, cex = 1.1 )
a6 <- a5[ a5$NAME == "HALLMARK_ALLOGRAFT_REJECTION", ]
text(a6$NES.1.x - a6$NES.x, a6$mean.diff..f.m..x, "allograft", pos=4, cex = 0.8)
a6 <- a5[ a5$NAME == "HALLMARK_COMPLEMENT", ]
text(a6$NES.1.x - a6$NES.x, a6$mean.diff..f.m..x, "complement", pos=4, cex = 0.8)
a6 <- a5[ a5$NAME == "HALLMARK_IL2_STAT5_SIGNALING", ]
text(a6$NES.1.x - a6$NES.x, a6$mean.diff..f.m..x, "IL2_STAT5", pos=1, cex = 0.8)
a6 <- a5[ a5$NAME == "HALLMARK_IL6_JAK_STAT3_SIGNALING", ]
text(a6$NES.1.x - a6$NES.x, a6$mean.diff..f.m..x, "IL6_STAT3", pos=4, cex = 0.8)
a6 <- a5[ a5$NAME == "HALLMARK_INFLAMMATORY_RESPONSE", ]
text(a6$NES.1.x - a6$NES.x, a6$mean.diff..f.m..x, "inflam", pos=4, cex = 0.8)
a6 <- a5[ a5$NAME == "HALLMARK_TNFA_SIGNALING_VIA_NFKB", ]
text(a6$NES.1.x - a6$NES.x, a6$mean.diff..f.m..x, "TNFA_NFKB", pos=4, cex = 0.8)

### Male biased
m2 <- a[ a$FDR.q.val.1 < 0.05 & a$t.test.p.value < 0.05 & a$mean.diff..f.m. > 0, ]
dim(m2)
###[1]  6 17
all39 <- read.delim("te-39samp-lm.txt")
m3 <- merge(m2, all39, by.x="NAME", by.y="NAME" )
nocereb <- read.delim("tumResecOnly.NES.geneRankMean.diff.txt")
m4 <- merge(m3, nocereb, by.x="NAME", by.y = "female.NAME")
m5 <-  m4[ m4$FDR.q.val.3.x < 0.25 & m4$FDR.q.val.3.y < 0.25, ]
points(m5$NES.1.x - m5$NES.x, m5$mean.diff..f.m..x, col = "red")
m6 <- m5[ m5$NAME == "HALLMARK_E2F_TARGETS", ]
text(m6$NES.1.x - m6$NES.x, m6$mean.diff..f.m..x, "E2F", pos=2, cex = 0.8)
##legend("topleft", inset = 0.02, c("sig. sex-biased pathways"), pch=1, col = "red")
legend("topleft", inset = 0.02, c("sig. sex-biased pathways in samples \nwithout Cerebellum/occipital
"), pch=1, col = "red", cex=0.8)

#####################all pathway genes logFC ranks avg diff (F-M) ~ preRank.NES (M - F) for all 39 samples
###but sig. sex-biased pathways highlighted in the plot are using samples without Cerebellum and occipital
a <- read.delim("te-39samp-lm.txt")
plot(a$NES.2 - a$NES, a$mean.diff..f.m. )
abline(h = seq(-100,100,5), lty = 5, lwd = 0.5, col = "gray")
abline(v = seq(-100,100,1), lty = 5, lwd = 0.5, col = "gray")

a1 <- a[ a$NES * a$NES.2 > 0, ]
dim(a1)
###[1] 45 34
#....make scatter plot and linear regression using all 39 samples
#....make scatter plot and linear regression using tumor resection ONLY sample
plot(a1$NES.2 - a1$NES, a1$mean.diff..f.m., xlab = "prerank.NES (M - F)", ylab = "allPathwayGenesRanks.average (F - M)" )
b <- a1$NES.2 - a1$NES
abline(lm(a1$mean.diff..f.m. ~ b ), lwd = 2 )
abline(h = seq(-100,100,5), lty = 5, lwd = 0.5, col = "gray")
abline(v = seq(-100,100,0.1), lty = 5, lwd = 0.5, col = "gray")
abline(h = 0, lty = 5, lwd = 0.8, col = "black")
abline(v = 0, lty = 5, lwd = 0.8, col = "black")
res <- cor.test(a1$mean.diff..f.m.  , b)
title(main=paste("hallmark pathways\n","r= ",round(res$estimate, digits = 3), " p=", format(res$p.value, digits=3), sep =""))

atemp <- a1
dim(atemp)
###[1] 45 34
a <- read.delim("noCereb.noOcci.NES.geneRankMean.diff.txt")
a2 <- a[ a$FDR.q.val < 0.05 & a$t.test.p.value < 0.05 & a$mean.diff..f.m. < 0, ]
dim(a2)
##1] 12 17
a3 <- merge(a2, atemp, by.x="NAME", by.y="NAME" )
dim(a3)
##1] 12 50
nocereb <- read.delim("tumResecOnly.NES.geneRankMean.diff.txt")
a4 <- merge(a3, nocereb, by.x="NAME", by.y = "female.NAME")
dim(a4)
##1] 12 81
a5 <- a4[ a4$FDR.q.val.1.y < 0.25 , ]  ###10 pathways 
dim(a5)
##[1] 10 81
points(a5$NES.2.x - a5$NES.y, a5$mean.diff..f.m..y, col = "red") ###, pch = 16, cex = 1.1 )
a6 <- a5[ a5$NAME == "HALLMARK_ALLOGRAFT_REJECTION", ]
text(a6$NES.2.x - a6$NES.y, a6$mean.diff..f.m..y, "allograft", pos=2, cex = 0.8)
a6 <- a5[ a5$NAME == "HALLMARK_COMPLEMENT", ]
text(a6$NES.2.x - a6$NES.y, a6$mean.diff..f.m..y, "complement", pos=4, cex = 0.8)
a6 <- a5[ a5$NAME == "HALLMARK_IL2_STAT5_SIGNALING", ]
text(a6$NES.2.x - a6$NES.y, a6$mean.diff..f.m..y, "IL2_STAT5", pos=4, cex = 0.8)
a6 <- a5[ a5$NAME == "HALLMARK_IL6_JAK_STAT3_SIGNALING", ]
text(a6$NES.2.x - a6$NES.y, a6$mean.diff..f.m..y, "IL6_STAT3", pos=4, cex = 0.8)
a6 <- a5[ a5$NAME == "HALLMARK_INFLAMMATORY_RESPONSE", ]
text(a6$NES.2.x - a6$NES.y, a6$mean.diff..f.m..y, "inflam", pos=4, cex = 0.8)
a6 <- a5[ a5$NAME == "HALLMARK_TNFA_SIGNALING_VIA_NFKB", ]
text(a6$NES.2.x - a6$NES.y, a6$mean.diff..f.m..y, "TNFA_NFKB", pos=4, cex = 0.8)
### Male biased
m2 <- a[ a$FDR.q.val.1 < 0.05 & a$t.test.p.value < 0.05 & a$mean.diff..f.m. > 0, ]
dim(m2)
###[1]  6 17
m3 <- merge(m2, atemp, by.x="NAME", by.y="NAME" )
nocereb <- read.delim("tumResecOnly.NES.geneRankMean.diff.txt")
m4 <- merge(m3, nocereb, by.x="NAME", by.y = "female.NAME")
m5 <-  m4[ m4$FDR.q.val.3.x < 0.25 & m4$FDR.q.val.3.y < 0.25, ]
points(m5$NES.2.x - m5$NES.y, m5$mean.diff..f.m..y, col = "red")
m6 <- m5[ m5$NAME == "HALLMARK_E2F_TARGETS", ]
text(m6$NES.2.x - m6$NES.y, m6$mean.diff..f.m..y, "E2F", pos=1, cex = 0.8)
#####################all pathway genes logFC ranks avg diff (F-M) ~ preRank.NES (M - F) for tumor resection ONLY samples
###but sig. sex-biased pathways highlighted in the plot are using samples without Cerebellum and occipital
a <- read.delim("tumResecOnly.NES.geneRankMean.diff.txt")
a1 <- a[ a$NES * a$NES.2 > 0, ]
dim(a1)
##[1] 40 32
#....make scatter plot and linear regression using tumor resection ONLY sample
plot(a1$NES.2 - a1$NES, a1$mean.diff..f.m., xlab = "prerank.NES (M - F)", ylab = "allPathwayGenesRanks.average (F - M)" )
b <- a1$NES.2 - a1$NES
abline(lm(a1$mean.diff..f.m. ~ b ), lwd = 2 )
abline(h = seq(-100,100,5), lty = 5, lwd = 0.5, col = "gray")
abline(v = seq(-100,100,0.1), lty = 5, lwd = 0.5, col = "gray")
abline(h = 0, lty = 5, lwd = 0.8, col = "black")
abline(v = 0, lty = 5, lwd = 0.8, col = "black")
res <- cor.test(a1$mean.diff..f.m.  , b)
title(main=paste("hallmark pathways\n","r= ",round(res$estimate, digits = 3), " p=", format(res$p.value, digits=3), sep =""))

atemp <- read.delim("te-39samp-lm.txt")
dim(atemp)
a <- read.delim("noCereb.noOcci.NES.geneRankMean.diff.txt")
a2 <- a[ a$FDR.q.val < 0.05 & a$t.test.p.value < 0.05 & a$mean.diff..f.m. < 0, ]
dim(a2)
##1] 12 17
a3 <- merge(a2, atemp, by.x="NAME", by.y="NAME" )
dim(a3)
##1] 12 50
nocereb <- read.delim("tumResecOnly.NES.geneRankMean.diff.txt")
a4 <- merge(a3, nocereb, by.x="NAME", by.y = "female.NAME")
dim(a4)
##1] 12 81
a5 <- a4[ a4$FDR.q.val.1.y < 0.25 , ]  ###10 pathways 
dim(a5)
##[1] 10 81
points(a5$NES.2.y - a5$NES, a5$mean.diff..f.m., col = "red") ###, pch = 16, cex = 1.1 )
a6 <- a5[ a5$NAME == "HALLMARK_ALLOGRAFT_REJECTION", ]
text(a6$NES.2.y - a6$NES, a6$mean.diff..f.m., "allograft", pos=4, cex = 0.5)
a6 <- a5[ a5$NAME == "HALLMARK_COMPLEMENT", ]
text(a6$NES.2.y - a6$NES, a6$mean.diff..f.m., "complement", pos=4, cex = 0.6)
a6 <- a5[ a5$NAME == "HALLMARK_IL2_STAT5_SIGNALING", ]
text(a6$NES.2.y - a6$NES, a6$mean.diff..f.m., "IL2_STAT5", pos=4, cex = 0.7)
a6 <- a5[ a5$NAME == "HALLMARK_IL6_JAK_STAT3_SIGNALING", ]
text(a6$NES.2.y - a6$NES, a6$mean.diff..f.m., "IL6_STAT3", pos=4, cex = 0.7)
a6 <- a5[ a5$NAME == "HALLMARK_INFLAMMATORY_RESPONSE", ]
text(a6$NES.2.y - a6$NES, a6$mean.diff..f.m., "inflam", pos=4, cex = 0.7)
a6 <- a5[ a5$NAME == "HALLMARK_TNFA_SIGNALING_VIA_NFKB", ]
text(a6$NES.2.y - a6$NES, a6$mean.diff..f.m., "TNFA_NFKB", pos=4, cex = 0.7)

### Male biased
m2 <- a[ a$FDR.q.val.1 < 0.05 & a$t.test.p.value < 0.05 & a$mean.diff..f.m. > 0, ]
dim(m2)
###[1]  6 17
m3 <- merge(m2, atemp, by.x="NAME", by.y="NAME" )
nocereb <- read.delim("tumResecOnly.NES.geneRankMean.diff.txt")
m4 <- merge(m3, nocereb, by.x="NAME", by.y = "female.NAME")
m5 <-  m4[ m4$FDR.q.val.3.x < 0.25 & m4$FDR.q.val.3.y < 0.25, ]
points(m5$NES.2.y - m5$NES, m5$mean.diff..f.m., col = "red", pch=16)
m6 <- m5[ m5$NAME == "HALLMARK_E2F_TARGETS", ]
text(m6$NES.2.y - m6$NES, m6$mean.diff..f.m., "E2F", pos=4, cex = 0.7)

#########################sex biased pathways in 3 different sampling setting
###female biased
t1 <- all39[ all39$FDR.q.val < 0.05 & all39$FDR.q.val.1 < 0.25 , ]
dim(t1)
#[1] 26 34
t2 <- t1[ t1$mean.diff..f.m. < 0 & t1$t.test.p.value < 0.05, ]
dim(t2)
#[1] 13 34

###male biased
t3 <- all39[ all39$FDR.q.val.2 < 0.05 & all39$FDR.q.val.3 < 0.25, ]
dim(t3)
#[1]  6 34
t4 <- t3[ t3$mean.diff..f.m. > 0 & t3$t.test.p.value < 0.05, ]
dim(t4)
#[1]  1 34

#####tumor resection only
a <- read.delim("tumResecOnly.NES.geneRankMean.diff.txt")
t5 <- a[ a$FDR.q.val < 0.05 & a$FDR.q.val.1 < 0.25,]
dim(t5)
#[1] 22 32
t6 <- t5[ t5$mean.diff..f.m. < 0 & t5$t.test.p.value < 0.05,]
###3 pathways
t7 <- a[ a$FDR.q.val.2 < 0.05 & a$FDR.q.val.3 < 0.25,]
dim(t7)
#[1] 13 32
t8 <- t7[ t7$mean.diff..f.m. >0 & t7$t.test.p.value < 0.05, ] 
dim(t8)
#[1]  1 32

########################################################################
cat  microglia-39-sample.HALLMARK_INFLAMMATORY_RESPONSE.genes.corr.txt | awk  '$13 == "X"'  | wc -l
     609
0.05 / 609
[1] 8.210181e-05
cat  microglia-39-sample.HALLMARK_INFLAMMATORY_RESPONSE.genes.corr.txt | awk '$5 < 8.210181e-05 && $13 == "X"'  | wc -l
       8

######histogram of r
head -1  microglia-39-sample.HALLMARK_INFLAMMATORY_RESPONSE.genes.corr.txt > temp.1.txt
cat  microglia-39-sample.HALLMARK_INFLAMMATORY_RESPONSE.genes.corr.txt | awk 'BEGIN {FS = "\t"; OFS = "\t"} $13 == "X"' >> temp.1.txt
> x <- read.delim("temp.1.txt")
> summary(x)
> x.fdr <- p.adjust(x$f.p, method="fdr")
> head(x.fdr)
[1] 0.79662208 0.02437901 0.64919635 0.70664229 0.17453162 0.29113280
> x.m.fdr <- p.adjust(x$m.p, method="fdr")
> x.all.fdr <- p.adjust(x$a.p, method="fdr")
> x.f.m.fdr <- data.frame(x, f.fdr = x.fdr, m.fdr = x.m.fdr, a.fdr = x.all.fdr )
> write.table(x.f.m.fdr, "temp.2.txt", quote=F, sep = "\t")
vi temp.2.txt
cp -i temp.2.txt microglia-39-sample.HALLMARK_INFLAMMATORY_RESPONSE.genes.corr.xGenes.fdr.txt
hist(x.f.m.fdr$f.r, breaks=seq(-1,1,0.05), xlab = "r with XX samples", ylab = "# of X chromosome genes", main = "correlation with HALLMARK_INFLAMMATORY_RESPONSE", ylim=c(0, 40))
abline(v = 0.67, col="blue") ### r = +/- 0.67, fdr = 0.05
abline(h = seq(0,800,5), lty = 5, lwd = 0.5, col = "gray")
abline(v = -0.67, col="blue")
text(0.67, 20, "FDR = 0.05", pos = 4, col = "blue")

#########################################################################
###gene level expression 39 samples boxplot
t <- read.delim("temp.txt", header = T, row.names = 1)
dim(t)
##[1] 58302    39
rawCount <- t
group <- factor(rep(1, 39))
y <- DGEList(counts=rawCount,group=group)
y <- calcNormFactors(y)
keep <-rowSums(cpm(y)>=1) >= 4
y<-y[keep,]
dim(y)
##39 samples; [1] 18488    39
d = cpm(y)
a <- log2(d+1)
###a is log2(cpm+1)
info <- read.delim("microglia-39-sample-sampInfo.txt")
g <- read.delim("geneID-name")
a.df <- as.data.frame(a)
a.df$id <- row.names(a.df)
a.df.g <- merge(a.df, g, by.x="id", by.y="geneID")
dim(a.df.g)
##[1] 18488    41
p.exp <- a.df.g[ a.df.g$name == "ITGAM", ]
###p.exp <- a.df.g[ a.df.g$name == "MPP1", ]
geneName = p.exp$name
length(p.exp$name)
##[1] 1
mat <- as.matrix(p.exp[, 2:40])
res <- data.frame(id = colnames(mat), mean = colMeans(mat))
res.info <- merge(res, info, by.x="id", by.y="id1")
res.info$grape3 <- paste(res.info$XX, res.info$Tumor)
   boxplot(as.numeric(res.info$mean) ~ res.info$grape3 ,  ylab = "log2(cpm+1)", xlab = "", cex=0.1)
   beeswarm(as.numeric(res.info$mean) ~ res.info$grape3 ,add =T,pch = c(16,16,17,17), col=c("green", "red", "green", "red"), cex = 1)
   title(main = geneName)
   abline(h = seq(-100,100,0.5), lty = 5, lwd = 0.5, col = "gray")

#############################################################################
###pathway ~ pathway correlation
res.info.inflam <- res.info
res.info.ddx3x <- res.info
 me <- merge(res.info.ddx3x, res.info.inflam, by.x="id", by.y="id")
me.f <- me[ me$XX.x == "XX", ]
me.m <- me[ me$XX.x == "XY", ]
plot( me$mean.x, me$mean.y , xlab = "DDX3X targets", ylab = "inflammatory", cex = 0.05)
abline(lm( me$mean.y ~ me$mean.x ), lwd = 2 )
 points(me[ me$grape3.x == "XX Tumor", ]$mean.x, me[ me$grape3.x == "XX Tumor", ]$mean.y, col = "red", pch = 16 , cex = 1.6)
points(me[ me$grape3.x == "XX Control", ]$mean.x, me[ me$grape3.x == "XX Control", ]$mean.y, col = "green", pch = 16 , cex = 1.6)
points(me[ me$grape3.x == "XY Tumor", ]$mean.x, me[ me$grape3.x == "XY Tumor", ]$mean.y, col = "red", pch = 17 , cex = 1.6)
points(me[ me$grape3.x == "XY Control", ]$mean.x, me[ me$grape3.x == "XY Control", ]$mean.y, col = "green", pch = 17 , cex = 1.6)
legend("topleft", inset = 0.05, c("XX control", "XX tumor", "XY control", "XY tumor"), pch=c(16,16,17,17), col = c("green", "red", "green", "red" ))
abline(h = seq(-100,100,0.1), lty = 5, lwd = 0.5, col = "gray")
abline(v = seq(-100,100,0.1), lty = 5, lwd = 0.5, col = "gray")

.....a <- d ####no log2
comb <- merge(ddx3X, ddx3y, by.x="id", by.y="id" )
> comb$cpm <- log2((comb$mean.x / 8928 + comb$mean.y / 5738) * 10000 + 1)
> boxplot( comb$cpm ~ comb$grape3.x, ylab = "DDX3X + DDX3Y (cpm normalized by gene length. log2 scale)", xlab = "", cex = 0.5 )
beeswarm( comb$cpm ~ comb$grape3.x,add =T,pch = c(16,16,17,17), col=c("green", "red", "green", "red"), cex = 1)
title(main = "DDX3X + DDX3Y")
abline(h = seq(-100,100,0.5), lty = 5, lwd = 0.5, col = "gray")
> path.gene <- merge(comb, res.info.path, by.x = "id", by.y = "id")
> path.gene.x <- path.gene[ path.gene$XX.x == "XX", ]
> path.gene.y <- path.gene[ path.gene$XX.x == "XY", ]
####ddx3x + ddx3y combined cpm
> cor.test( path.gene.x$cpm, path.gene.x$mean )
> cor.test( path.gene.y$cpm, path.gene.y$mean )
> cor.test( path.gene$cpm, path.gene$mean )

###ddx3x only, all 39 samples
> cor.test( log2(path.gene$mean.x+1), path.gene$mean )
###ddx3x only, female samples only
> cor.test( log2(path.gene.x$mean.x+1), path.gene.x$mean )

####ddx3y only, male samples only
> cor.test( log2(path.gene.y$mean.y+1), path.gene.y$mean )

###test gene length
cat gene-length | awk 'NR == 5000'
ENSG00000120049 3294
grep "gene_id .ENSG00000120049.;" Homo_sapiens.GRCh38.90.gtf > temp1
grep -w exon temp1 > temp2
cat temp2 | awk 'BEGIN {FS = "\t"; OFS = "\t"} {for(i = $4; i <= $5; i++) print $1, i}' | sort | uniq -c | wc -l
    3294
grep "prime_utr" temp1 >> temp2
cut -f 3 temp2 | sort | uniq -c

ENSG00000000003 4535 (first gene)
ENSG00000284748 1326 (last gene)
ENSG00000156515 6073 (10000th gene)

#############################################################################
#############medians of xx control, xx tumor, for inflamm pathway, 39 samples20
c(xc,xt, yc, yt)
[1] -0.21874569  0.24967022 -0.04865440  0.09667048
#######all genes, no filtering
dim(y)
##[1] 58302    39
d = cpm(y)
a <- d
b = log10(a+1)
for(i in 1:dim(b)[1])
{
  a[i, ] <- (b[i, ] - mean(as.numeric(b[i,]))) / var(as.numeric(b[i,]))^(1/2)
}
###a is z-score of log10(cpm+1)
f <- read.delim("female-noCereb.noOcci-diff2-1.txt")
dim(f)
##[1] 17319     6
####sig up in XX tumor
g <- f[ f$logFC > 0 & f$PValue < 0.05, ]
dim(g)
##[1] 800   6
a.1 <- as.data.frame(a)
a.1$geneID <- rownames(a.1)
a.2 <- merge(a.1, g, by.x="geneID", by.y="geneID")
g <- read.delim("geneID-name")
a.df.g <- merge(a.2, g, by.x="geneID", by.y="geneID")
dim(a.df.g)
##[1] 800  46
p <- read.delim("temp-path.genes", header=F)
p.exp <- a.df.g[ a.df.g$name %in% p$V1, ]
length(p.exp$name)
##52
f <- read.delim("male-noCereb.noOcci-diff2-1.txt")
###left join
t <- merge(p.exp, f, by.x="geneID", by.y="geneID", all.x=T)
p.exp = t
p.exp.1 <- p.exp[ is.na(p.exp$PValue.y) ,]
p.exp.2 <- p.exp[ !is.na(p.exp$PValue.y) ,]
####tumor vs control non-sig in XY, or is sig in XY but FC less than XX
###all genes retained
t <- p.exp.2[ p.exp.2$PValue.y > 0.05 | p.exp.2$logFC.x > p.exp.2$logFC.y,]
dim(t)
####[1] 50 51
t <- p.exp.2[ p.exp.2$PValue.y > 0.25 | p.exp.2$logFC.x > p.exp.2$logFC.y,]
dim(t)
####[1] 50 51

info <- read.delim("microglia-39-sample-sampInfo.txt")
##> thresh = xt - xc - (yt - yc)
thresh = 0.323091
##[1] 0.323091
p.exp$dif = 0

for(i in 1:dim(p.exp)[1]) {
###each geneID
#############################gene median difference, tumor - control in XX, in XY
mat <- as.matrix(p.exp[i, 2:40])
res <- data.frame(id = colnames(mat), mean = colMeans(mat))
res.info <- merge(res, info, by.x="id", by.y="id1")
res.info$group <- paste(res.info$XX, res.info$Tumor)
t <- res.info[ res.info$group == "XX Control",]$mean
t1 <- median(t)
t <- res.info[ res.info$group == "XX Tumor",]$mean
t2 <- median(t)
t <- res.info[ res.info$group == "XY Control",]$mean
t3 <- median(t)
t <- res.info[ res.info$group == "XY Tumor",]$mean
t4 <- median(t)
dif = t2-t1 - (t4-t3)
p.exp[i,]$dif = dif
}

######gene level, 39 samples, z-score boxplot
for(i in 1:1) {
name="IL1B"
mat <- as.matrix(p.exp[p.exp$name == name, 2:40])
res <- data.frame(id = colnames(mat), mean = colMeans(mat))
res.info <- merge(res, info, by.x="id", by.y="id1")
res.info$group <- paste(res.info$XX, res.info$Tumor)
boxplot(res.info$mean ~ res.info$group, xlab = "", ylab = "z-score")
title(main=name)
beeswarm(res.info$mean ~ res.info$group, pch = c(16,16,17,17), col = c("green", "red", "green", "red" ), cex = 2, add = T)
abline(h = seq(-100,100,0.2), lty = 5, lwd = 0.5, col = "gray")
}

###marker: heatmap genes X 33 samples, 4-17-2022
t <- read.delim("microglia-41-samples.F-M-33samps.noCereb.noOcci.genecount.txt", header = T, row.names = 1)
dim(t)
####[1] 58302    33
rawCount <- t
group <- factor(rep(1, 33))
y <- DGEList(counts=rawCount,group=group)
y <- calcNormFactors(y)
d = cpm(y)
a <- d
b = log10(a+1)
for(i in 1:dim(b)[1])
{
  a[i, ] <- (b[i, ] - mean(as.numeric(b[i,]))) / var(as.numeric(b[i,]))^(1/2)
}
###a is z-score of log10(cpm+1)
f <- read.delim("female-noCereb.noOcci-diff2-1.txt")
dim(f)
####[1] 17319     6
####sig up in XX tumor
g <- f[ f$logFC > 0 & f$PValue < 0.05, ]
dim(g)
####[1] 800   6
a.1 <- as.data.frame(a)
a.1$geneID <- rownames(a.1)
a.2 <- merge(a.1, g, by.x="geneID", by.y="geneID")
g <- read.delim("geneID-name")
a.df.g <- merge(a.2, g, by.x="geneID", by.y="geneID")
dim(a.df.g)
####[1] 800  46
p <- read.delim("temp-path.genes", header=F)
p.exp <- a.df.g[ a.df.g$name %in% p$V1, ]
length(p.exp$name)
##52
info <- read.delim("microglia-39-sample-sampInfo.txt")
info$group = paste(info$XX, info$Tumor)
mat <- as.matrix( p.exp[,2:34])
rownames(mat) <- p.exp$name
t1 <- data.frame( colnames(mat))
t1$group = "notapp"
for(i in 1:dim(t1)[1]) {
t1$group[i] = info[ info$id1 == t1$colnames.mat.[i], ]$group
}
ha <- HeatmapAnnotation(group = t1$group)
Heatmap(matrix = mat, name = "Z-score", row_names_gp = gpar(fontsize = 8), bottom_annotation=ha, column_order=order(t1$group), column_split=t1$group, row_km=3, column_names_gp= gpar(fontsize = 8), row_km_repeats = 1234, column_title_gp=gpar(fontsize=8))

###boxplot of pathway genes correlation with pathway itself 
t1 <- read.delim("microglia-39-sample.HALLMARK_INFLAMMATORY_RESPONSE.genes.corr.txt")
t1$f.fdr <- p.adjust(t1$f.p, method = "fdr")
t1$m.fdr <- p.adjust(t1$m.p, method = "fdr")
t1$a.fdr <- p.adjust(t1$a.p, method = "fdr")
dim(t1[t1$f.fdr < 0.05,])
#1] 1348   16  
dim(t1[t1$m.fdr < 0.05,])
#1] 519  16  
dim(t1[t1$a.fdr < 0.05,])
#1] 3120   16  
p <- read.delim("HALLMARK_INFLAMMATORY_RESPONSE.temp.genes", header=F)
t1.p <- merge(p, t1, by.x="V1", by.y="name")
t2 <- data.frame(f.r = t1.p$f.r, m.r=t1.p$m.r, a.r=t1.p$a.r)
boxplot(t2, outline=F, ylim=c(-0.6,1))
beeswarm(t2, add=T, pch = 16) 
abline(h = seq(-100,100,0.1), lty = 5, lwd = 0.5, col = "gray")

###some linux commands
cat microglia-39-sample.HALLMARK_INFLAMMATORY_RESPONSE.genes.corr.txt | sort -t ' ' +5 -6nr  | awk 'BEGIN{FS = "\t"} $6 > 0.5' |cut -f 2,6,7 |head -100
#RPS9   0.741337761572533       7.89128517312579e-05
cat microglia-39-sample.HALLMARK_INFLAMMATORY_RESPONSE.genes.corr.txt | sort -t ' ' +5 -6nr  | awk 'BEGIN{FS = "\t"} $6 > 0.5' |cut -f 2,6,7 |head -100 | cut -f 1 > temp
cat temp  HALLMARK_INFLAMMATORY_RESPONSE.temp.genes | sort | uniq -d | wc -l
      11
cat temp  HALLMARK_INFLAMMATORY_RESPONSE.temp.genes | sort | uniq -d 
ADM
C5AR1
CCL20
CCL5
FPR1
HIF1A
ICAM1
OSM
OSMR
PLAUR
TIMP1
cat temp  HALLMARK_INFLAMMATORY_RESPONSE.temp.genes | sort | uniq -d > temp-1
cat microglia-39-sample.HALLMARK_INFLAMMATORY_RESPONSE.genes.corr.txt | sort -t ' ' +3 -4nr  | awk 'BEGIN{FS = "\t"} $4 > 0.5' |cut -f 2,4,5 |head -100
#FTH1P8 0.871251181597215       5.28182091694868e-06
cat temp  HALLMARK_INFLAMMATORY_RESPONSE.temp.genes | sort | uniq -d   ###9 genes
#female
C5AR1
CXCL8
GCH1
HIF1A
ICAM1 
IL4R
LCP2
NFKBIA
PLAUR
cat temp-1 temp-2 | sort | uniq -d ###overlapped genes between XX and XY
C5AR1
HIF1A
ICAM1
PLAUR 
###
###Func annotation of top 100 genes correlating with inflamm pathway in XX and XY, respectively
cat string-db-female-enrich.txt| cut -f 1,2,10 |grep -i nf-k | wc -l
      41
cat string-db-male-enrich.txt| cut -f 1,2,10 |grep -i nf-k | wc -l
       0
cat string-db-female-enrich.txt| cut -f 1,2,10 |grep -i nfkb | wc -l
       6
cat string-db-male-enrich.txt| cut -f 1,2,10 |grep -i nfkb | wc -l
       0
cat string-db-male-enrich.txt|grep REL | wc -l
       0

##################################
vi temp ### 13 pathway names only

cat temp | while read ll
do
grep -i "$ll" ../h.all.v7.4.symbols.gmt
done > temp.13.paths

cat temp-script-make-geneset-a-file

#
cat temp.13.paths | while read ll
do
 f=`echo "$ll" | cut -f 1`
 echo "$ll" | awk '
BEGIN{
 FS = "\t";
 }
 {
  for(i = 3; i <= NF; i++)
     print $i;
 }' > temp-2
 cat temp-2 | awk 'NF > 0' > "$f".genes 
done

ls HALLMARK*.genes | grep -v temp > temp-files-2

######################hallmark.13.paths.39samples.z-score-avg.txt
file <- read.delim("temp-files-2", header=F)
for(index in 1:dim(file)[1]){
print(file[index,1])
pathname = file[index,1]
p <- read.delim(file[index,1], header=F)
p.exp <- a.df.g[ a.df.g$name %in% p$V1, ]
mat <- as.matrix(p.exp[, 2:40])
res <- data.frame(id = colnames(mat), mean = colMeans(mat))
colnames(res) <- c("id", pathname)
if(index == 1)
  res2 = res
else
  res2 <- cbind(res2, res)
}
res2$id1 <- res2$id
res.info <- merge(res2, info, by.x="id1", by.y="id1")
res.info$grape3 <- paste(res.info$XX, res.info$Tumor)
write.table(t(res.info), "temp.2.txt", quote=F, sep="\t")
sort -r temp.2.txt | uniq > hallmark.13.paths.39samples.z-score-avg.txt

####temp.path.ddx3x
grape3	XY Tumor	XY Tumor	XX Tumor	XY Tumor	XY Tumor	XY Control	XX Control
HALLMARK_TNFA_SIGNALING_VIA_NFKB.genes	0.16357008	0.04620055	1.4796044	0.40593726	0.4957459	-0.42584137	-0.06869427
HALLMARK_P53_PATHWAY.genes	-0.14155725	-0.26996674	0.19868397	0.18998015	0.11138088	-0.56229407	0.03495609
HALLMARK_MYC_TARGETS_V2.genes	0.060938016	0.327836115	0.074658301	-0.011090214	0.460391099	-1.218443434	0.203158329
DDX3X	8.805728876	8.34808815	9.541254324	8.886581593	8.742060298	7.044572005	8.615656457 log2(cpm+1)

t <- read.delim("temp.path.ddx3x", header=F)
t1 <- as.data.frame(t(t))
for(i in 2:14) { #13 pathways
f <- t1[ t1$V1 == "XX Control" | t1$V1 == "XX Tumor",][,c(i,15)]
m <- t1[ t1$V1 == "XY Control" | t1$V1 == "XY Tumor",][,c(i,15)]
a <- t1[ t1$V1 != "grape3",][,c(i,15)]
f.r <- cor.test(as.numeric( f[,1]), as.numeric(f[,2]))
m.r <- cor.test(as.numeric( m[,1]), as.numeric(m[,2]))
a.r <- cor.test(as.numeric( a[,1]), as.numeric(a[,2]))
geneName = paste(t1[t1$V1 == "grape3", 15] ,t1[ t1$V1 == "grape3", i], sep = "\t")
corRes <- paste(geneName,  f.r$estimate, f.r$p.value, m.r$estimate, m.r$p.value, a.r$estimate, a.r$p.value, sep = "\t")
cat(corRes)
cat("\n")
}

####################50 pathways, pairwise corr
vi  temp.path.ddx3x ##rm some header lines
t <- read.delim("temp.path.ddx3x", header=F)
t1 <- as.data.frame(t(t))
dim(t1)
# [1] 40 (head+39samples) ; 51 (xx-ctrl + 50 paths)

for(i in 2:51) { #13 pathways
 for(j in 2:51) {
  if(t1[1,i] < t1[1,j]) {
f <- t1[ t1$V1 == "XX Control" | t1$V1 == "XX Tumor",][,c(i,j)]
m <- t1[ t1$V1 == "XY Control" | t1$V1 == "XY Tumor",][,c(i,j)]
a <- t1[ t1$V1 != "grape3",][,c(i,j)]
f.r <- cor.test(as.numeric( f[,1]), as.numeric(f[,2]))
m.r <- cor.test(as.numeric( m[,1]), as.numeric(m[,2]))
a.r <- cor.test(as.numeric( a[,1]), as.numeric(a[,2]))
geneName = paste(t1[t1$V1 == "grape3", i] ,t1[ t1$V1 == "grape3", j], sep = "\t")
corRes <- paste(geneName,  f.r$estimate, f.r$p.value, m.r$estimate, m.r$p.value, a.r$estimate, a.r$p.value, sep = "\t")
cat(corRes)
cat("\n")
}
}
}

############fdr, family-wise error rate, hallmark 50 pathways pairwise cutoff
cat hallmark.50.paths.39samples.pairwise.corr.f.m.a.uniqpair.txt hallmark.50.paths.39samples.pairwise.corr.f.m.a.redunpair.txt | sort | uniq -d | wc -l
    1225
t <- read.delim("hallmark.50.paths.39samples.pairwise.corr.f.m.a.uniqpair.txt", header=F)
t$f.fdr <- p.adjust( t$V4, method="fdr")
t$m.fdr <- p.adjust( t$V6, method="fdr")
t$a.fdr <- p.adjust( t$V8, method="fdr")
dim(t)
#[1] 1225   11
dim(t[ t$f.fdr < 0.05,])
#[1] 410  11
dim(t[ t$m.fdr < 0.05,])
#[1] 947  11
dim(t[ t$a.fdr < 0.05,])
#[1] 950  11
### Helen&2020
###

t <- read.delim("hallmark.50.paths.39samples.pairwise.corr.f.m.a.uniqpair.txt", header=F)
t$f.fam <- p.adjust( t$V4, method="bonferroni")
t$m.fam <- p.adjust( t$V6, method="bonferroni")
t$a.fam <- p.adjust( t$V8, method="bonferroni")
dim(t)
#[1] 1225   11
dim(t[ t$f.fam < 0.05,])
dim(t[ t$m.fam < 0.05,])
dim(t[ t$a.fam < 0.05,])
#######
# > dim(t[ t$f.fam < 0.05,])
# [1] 109  11
# > dim(t[ t$m.fam < 0.05,])
# [1] 405  11
# > dim(t[ t$a.fam < 0.05,])
# [1] 509  11

#######################pathway-pathway coexpression network
cat hallmark.50.paths.39samples.pairwise.corr.f.m.a.uniqpair.txt | awk 'BEGIN{FS = "\t"} $3 > 0.9 {print $1 "\t" $2 "\t" "F"}'   > temp-1
cat hallmark.50.paths.39samples.pairwise.corr.f.m.a.uniqpair.txt | awk 'BEGIN{FS = "\t"} $5 > 0.9 {print $1 "\t" $2 "\t" "M"}'   > temp-2
cat temp-1 temp-2 | cut -f 1-2 | sort | uniq -d | wc -l
      30 (42, 116)
cat temp-1 temp-2 | cut -f 1-2 | sort | uniq | wc -l
     128 ##50 pathways, 128*2/50 = 5.12, avergae 5 links per path
cat temp-1 temp-2 | cut -f 1-2 | sort | uniq -d | awk 'BEGIN{FS = "\t"}  {print $1 "\t" $2 "\t" "A"}'   > temp-3
cat temp-1 temp-3 | cut -f 1-2 | sort | uniq -u | awk 'BEGIN{FS = "\t"}  {print $1 "\t" $2 "\t" "F"}' > temp-4
cat temp-2 temp-3 | cut -f 1-2 | sort | uniq -u | awk 'BEGIN{FS = "\t"}  {print $1 "\t" $2 "\t" "M"}' > temp-5
cat temp-3 temp-4 temp-5 > hallmark.50.paths.39samples.r.0.9.f.m.a.net

hallmark.13paths.sexbiased

cat hallmark.50.paths.39samples.pairwise.corr.f.m.a.uniqpair.txt | awk 'BEGIN{FS = "\t"} $3 > 0.9 {print $1 "\t" $2 "\t" "F"}'   > temp-1
cat hallmark.50.paths.39samples.pairwise.corr.f.m.a.uniqpair.txt | awk 'BEGIN{FS = "\t"} $5 > 0.9 ' | sort -t '       ' +4 -5gr | head -42 | awk 'BEGIN{FS = "\t"} {print $1 "\t" $2 "\t" "M"}'   > temp-2
###42nd ranked pair in XY samples: 0.941087486542388
cat temp-1 temp-2 | cut -f 1-2 | sort | uniq -d | wc -l
      15
cat temp-1 temp-2 | cut -f 1-2 | sort | uniq  | wc -l
      69 (22%)
...
cat temp-3 temp-4 temp-5 > hallmark.50.paths.39samples.top42.f.m.a.net

##############################sex bias test p-values; 3 sampling methods, barplot
bash script-f-m-t-test-combined
cat hallmark.13paths.sexbiased.2 | cut -f 1 | awk 'NR > 1' | while read ll
do
grep -w "$ll" temp.f-m.ttest.txt
done > temp-1

bash script-path-p.value-barplot-input
bash script-path-p.value-barplot-input | awk 'NR > 4' | sort -t '       ' +1 -2g | sed 's/HALLMARK/h/' > temp-2
./table-transpose temp-2 temp-3
head temp-3 | cut -f 1-4 
# path  h_E2F_TARGETS   h_MYC_TARGETS_V2        h_G2M_CHECKPOINT
# noCereb.noOcci        -4.04017        -1.60241        -1.49978
# tumResecOnly  -2.88397        -0.285539       -1.13095
# all39samples  -2.14195        -0.374365       -0.743114

t1 <- read.delim("temp-3", row.names=1)
t2 <- seq(3, 100, by = 4) ###pathway position on y-axis
t3 <- t1[2,]
t3 <- rbind(t3, t1[3,])
t3 <- rbind(t3, t1[1,])

par(pin=c(2.8,4))
barplot(as.matrix( t3), horiz=T, beside=T, xlim=c(-5, 15), xlab="signed log10(p)", yaxt = "n", col=c("green", "grey", "red"), main ="sex bias test p-values")
axis(side=2, at = t2[1:13], labels=colnames(t1), las =1, cex.axis = 0.6)
abline(v= log10(0.05), lty = 5, lwd = 0.5, col = "blue" )
abline(v= -log10(0.05), lty = 5, lwd = 0.5, col = "blue" )
text(-log10(0.05), 3, "p=0.05", pos=4, col="blue")
legend("bottomright", rownames(t3), fill=c("green", "grey", "red"), cex = 0.6, inset = 0.05)

############################################################pathway NES barplot
cat temp-2 | grep -i inflamm | grep -w prerank | grep -w noCereb.noOcci > temp-3
cat temp-2 | grep -i HALLMARK_E2F_TARGETS | grep -w prerank | grep -w noCereb.noOcci >> temp-3
cat temp-2 | grep -i HALLMARK_G2M_CHECKPOINT | grep -w prerank | grep -w noCereb.noOcci >> temp-3
cat temp-3
bash temp-script-path-p.value-barplot-input   | awk 'NR > 3' > temp-4
> t1
                                      F        M
HALLMARK_INFLAMMATORY_RESPONSE 2.605196 1.271141
HALLMARK_E2F_TARGETS           1.384512 2.509930
HALLMARK_G2M_CHECKPOINT        1.621786 2.514877

barplot(as.matrix( t1), horiz=F, beside=T,  ylim=c(0, 3), ylab="NES (TAM vs ctrl, noCereb.noOcci)" , col=c("green", "grey", "red"), main ="")
abline(h= seq(0, 2.7, 0.1), lty = 5, lwd = 0.5, col = "grey" ) 
legend(2,3, rownames(t1), fill=c("green", "grey", "red"), cex = 0.6, inset = 0.05)

############################################refer to R-gene-pathway-corr for pathway level z-score
> p <- read.delim("HALLMARK_INFLAMMATORY_RESPONSE.genes", header=F)
> dim(p)
[1] 200   1
layout(matrix(1:3, 1, 3, byrow=T) )

boxplot(res.info$mean ~ res.info$group, xlab = "", ylab = "z-score avg of all genes", ylim=c(-0.7,1.2))
beeswarm(res.info$mean ~ res.info$group, pch = c(16,16,17,17), col = c("green", "red", "green", "red" ), cex = 2, add = T)
title(main="HALLMARK_INFLAMMATORY_RESPONSE")
abline(h = seq(-100,100,0.1), lty = 5, lwd = 0.5, col = "gray")

res.info.noCereb <- res.info[ res.info$location != "Cerebellum" & res.info$location != "Occipital", ] 
dim(res.info.noCereb)
#[1] 33  9
boxplot(res.info.noCereb$mean ~ res.info.noCereb$group, xlab = "", ylab = "z-score avg of all genes", ylim=c(-0.7,1.2))
beeswarm(res.info.noCereb$mean ~ res.info.noCereb$group, pch = c(16,16,17,17), col = c("green", "red", "green", "red" ), cex = 2, add = T)
title(main="HALLMARK_INFLAMMATORY_RESPONSE")
abline(h = seq(-100,100,0.1), lty = 5, lwd = 0.5, col = "gray")

res.info.resectOnly <- res.info[ res.info$Tumor == "Control" | res.info$grade == "Tumor resection", ] 
dim(res.info.resectOnly)
#[1] 31  9
boxplot(res.info.resectOnly$mean ~ res.info.resectOnly$group, xlab = "", ylab = "z-score avg of all genes", ylim=c(-0.7,1.2))
beeswarm(res.info.resectOnly$mean ~ res.info.resectOnly$group, pch = c(16,16,17,17), col = c("green", "red", "green", "red" ), cex = 2, add = T)
title(main="HALLMARK_INFLAMMATORY_RESPONSE")
abline(h = seq(-100,100,0.1), lty = 5, lwd = 0.5, col = "gray")

###t test between group means (pathway z-score)
t1 <- res.info
group <- unique( sort(t1$grape3))
for(i in 1:4)
{
 cat(group[i])
 cat("\n")
}

t1 <- res.info[ res.info$location != "Cerebellum" & res.info$location != "Occipital", ] 
t1 <- res.info[ res.info$Tumor == "Control" | res.info$grade == "Tumor resection", ]
#t1 <- t1[ t1$location != "Cerebellum" & t1$location != "Occipital", ] 

dim(t1)
ll <- list()
for(i in 1:4)
{
 ll[[i]] <- t1[ t1$grape3 == group[i], ]
 cat(mean( ll[[i]]$mean))
 cat("\n")
}
t2 <- t.test(ll[[1]]$mean, ll[[2]]$mean)
t3 <- t.test(ll[[3]]$mean, ll[[4]]$mean)
{
cat(t2$p.value)
cat("\n")
cat(t3$p.value)
cat("\n")
}

##########################################################################
head -1 microglia-39-sample.HALLMARK_INFLAMMATORY_RESPONSE.genes.corr.txt > temp.1.txt
for g in `echo REL      RELB    NFKB2   NFKBIE  NFKBIA  NFKB1   RELA`
do
 grep -w "$g" microglia-39-sample.HALLMARK_INFLAMMATORY_RESPONSE.genes.corr.txt 
done >> temp.1.txt

# following results from R-gene-pathway-corr
# gene level expression
# pathway level expression
# make gene-pathway correlation plot

layout(matrix(1:2, 1, 2, byrow=T) )

plot( res.info.g.p.fem$mean.x, res.info.g.p.fem$mean.y, xlab="inflamm pathway z-score", ylab="gene expr log2(cpm+1)", ylim=c(1, 8.5), col="white")
abline(lm(res.info.g.p.fem$mean.y ~ res.info.g.p.fem$mean.x))
points(res.info.g.p.fem[ res.info.g.p.fem$Tumor.x == "Control", ]$mean.x, res.info.g.p.fem[ res.info.g.p.fem$Tumor.x == "Control", ]$mean.y,  col = "green", pch = 16 , cex = 1.6)
points(res.info.g.p.fem[ res.info.g.p.fem$Tumor.x == "Tumor", ]$mean.x, res.info.g.p.fem[ res.info.g.p.fem$Tumor.x == "Tumor", ]$mean.y, col = "red", pch = 16 , cex = 1.6)
legend("topleft", inset = 0.05, c("XX control", "XX tumor"), pch=c(16,16), col = c("green", "red" ))
title(main = paste(geneName, ", r=", round(t2$estimate, digits = 3), " p=", format(t2$p.value, digits=3), sep=""))
abline(h = seq(0,10,0.5), lty = 5, lwd = 0.5, col = "gray")

###male
plot( res.info.g.p.male$mean.x, res.info.g.p.male$mean.y, xlab="inflamm pathway z-score", ylab="gene expr log2(cpm+1)", ylim=c(1, 8.5), col="white")
abline(lm(res.info.g.p.male$mean.y ~ res.info.g.p.male$mean.x))
points(res.info.g.p.male[ res.info.g.p.male$Tumor.x == "Control", ]$mean.x, res.info.g.p.male[ res.info.g.p.male$Tumor.x == "Control", ]$mean.y,  col = "green", pch = 17 , cex = 1.6)
points(res.info.g.p.male[ res.info.g.p.male$Tumor.x == "Tumor", ]$mean.x, res.info.g.p.male[ res.info.g.p.male$Tumor.x == "Tumor", ]$mean.y, col = "red", pch = 17 , cex = 1.6)
legend("topleft", inset = 0.05, c("XY control", "XY tumor"), pch=c(17,17), col = c("green", "red" ))
title(main = paste(geneName, ", r=", round(t3$estimate, digits = 3), " p=", format(t3$p.value, digits=3), sep=""))
abline(h = seq(0,10,0.5), lty = 5, lwd = 0.5, col = "gray")
                                                                                           
#############################################################################
### sex:tumor interaction
t <- read.delim("temp.txt", header = T, row.names = 1)
dim(t)
##[1] 58302    39
rawCount <- t
group <- factor(rep(1, 39))
y <- DGEList(counts=rawCount,group=group)
y <- calcNormFactors(y)
keep <-rowSums(edgeR::cpm(y)>=1) >= 9
y<-y[keep,]
dim(y)
# [1] 16285    39
info <- read.delim("microglia-39-sample-sampInfo.txt")
identical(info$id1, row.names( y$samples))
# [1] TRUE
design <- model.matrix(~info$XX + info$Tumor + info$age + info$XX : info$Tumor + info$XX : info$age + info$age : info$Tumor)
design
#    (Intercept) info$XXXY info$TumorTumor info$age info$XXXY:info$TumorTumor info$XXXY:info$age info$TumorTumor:info$age
# 1            1         1               1       75                         1                 75                       75
# 2            1         1               1       32                         1                 32                       32
# 3            1         0               1       64                         0                  0                       64
# 4            1         1               1       63                         1                 63                       63
# 5            1         1               1       63                         1                 63                       63
# 6            1         1               0       60                         0                 60                        0
# 7            1         0               0       73                         0                  0                        0
# 8            1         0               1       67                         0                  0                       67
# 9            1         1               1       55                         1                 55                       55
# 10           1         1               1       69                         1                 69                       69
y <- estimateDisp(y,design)
fit <- glmQLFit(y, design)
qlf <- glmQLFTest(fit, coef=5)
top2v1 <- topTags(qlf, n = 91234)
write.table(top2v1, "diff2-1.txt", sep="\t", quote = F)
topTags(qlf, n = 9)
# Coefficient:  info$XXXY:info$TumorTumor
#                     logFC     logCPM        F       PValue       FDR
# ENSG00000131002  5.025318  3.9277759 19.20134 9.546588e-05 0.9454273
# ENSG00000162490  5.318278 -0.3963349 16.30299 2.655488e-04 0.9454273
# ENSG00000139329  5.613509  0.8971800 15.57379 3.469926e-04 0.9454273

mv -i diff2-1.txt all39samp.sex-tum-interaction.diff2-1.txt
vi all39samp.sex-tum-interaction.diff2-1.txt ##geneID
/Users/linyongmao/Documents/microglia/scrnaseq-metaannot-combine all39samp.sex-tum-interaction.diff2-1.txt        geneID-name-type-chr out
paste  all39samp.sex-tum-interaction.diff2-1.txt  out | grep -vw notApplicable > all39samp.sex-tum-interaction.diff2-1.name-type-chr.txt
./make-rnk-genesymble  all39samp.sex-tum-interaction.diff2-1.name-type-chr.txt all39samp.sex-tum-interaction.diff2-1.rnk
cat all39samp.sex-tum-interaction.diff2-1.rnk | awk 'BEGIN {FS = "\t"; OFS = "\t"} {print $1, (-1)*$2}' > all39samp.sex-tum-interaction.diff2-1.2.rnk
bash /Users/linyongmao/Documents/GSEA_4.1.0/gsea-cli.sh  GSEAPreranked -gmx   /Users/linyongmao/Documents/h.all.v7.4.symbols.gmt    -collapse No_Collapse -mode Max_probe -norm meandiv  -nperm 1000 -rnk  all39samp.sex-tum-interaction.diff2-1.2.rnk  -rpt_label   "all39samp.sex-tum-interaction.edgeR_TAM.prerank.v7.4"  -create_svgs false -include_only_symbols true   -make_sets true -plot_top_x 1234567 -rnd_seed 1234 -set_max 500  -zip_report false -out  "/Users/linyongmao/gsea_home/output/microgliaSex"

####F-M-33samps.noCereb.noOcci, sex-tum-interaction model
rawCount <- read.delim("microglia-41-samples.F-M-33samps.noCereb.noOcci.genecount.txt", header = T, row.names = 1)
dim(rawCount)
##[1] 58302    33
group <- factor(rep(1, 33))
y <- DGEList(counts=rawCount,group=group)
y <- calcNormFactors(y)
keep <-rowSums(edgeR::cpm(y)>=1) >= 8
y<-y[keep,]
dim(y)
# [1] 16269    33
info <- read.delim("microglia-33-sample-nocereb-nooci-sampInfo.txt")
identical(info$geneID, row.names( y$samples))
# [1] TRUE
design <- model.matrix(~info$XX + info$Tumor + info$age + info$XX : info$Tumor + info$XX : info$age + info$age : info$Tumor)
design
y <- estimateDisp(y,design)
fit <- glmQLFit(y, design)
qlf <- glmQLFTest(fit, coef=5)
top2v1 <- topTags(qlf, n = 91234)
write.table(top2v1, "diff2-1.txt", sep="\t", quote = F)
topTags(qlf, n = 9)

mv -i diff2-1.txt human33samp.nocereb-nooci.sex-tum-interaction.diff2-1.txt
##geneID
vi human33samp.nocereb-nooci.sex-tum-interaction.diff2-1.txt 
/Users/linyongmao/Documents/microglia/scrnaseq-metaannot-combine human33samp.nocereb-nooci.sex-tum-interaction.diff2-1.txt        geneID-name-type-chr out
paste  human33samp.nocereb-nooci.sex-tum-interaction.diff2-1.txt  out | grep -vw notApplicable > human33samp.nocereb-nooci.sex-tum-interaction.diff2-1.name-type-chr.txt
./make-rnk-genesymble  human33samp.nocereb-nooci.sex-tum-interaction.diff2-1.name-type-chr.txt human33samp.nocereb-nooci.sex-tum-interaction.diff2-1.rnk
cat human33samp.nocereb-nooci.sex-tum-interaction.diff2-1.rnk | awk 'BEGIN {FS = "\t"; OFS = "\t"} {print $1, (-1)*$2}' > human33samp.nocereb-nooci.sex-tum-interaction.diff2-1.2.rnk
bash /Users/linyongmao/Documents/GSEA_4.1.0/gsea-cli.sh  GSEAPreranked -gmx   /Users/linyongmao/Documents/h.all.v7.4.symbols.gmt    -collapse No_Collapse -mode Max_probe -norm meandiv  -nperm 1000 -rnk  human33samp.nocereb-nooci.sex-tum-interaction.diff2-1.2.rnk  -rpt_label   "human33samp.nocereb-nooci.sex-tum-interaction.edgeR_TAM.prerank.v7.4"  -create_svgs false -include_only_symbols true   -make_sets true -plot_top_x 1234567 -rnd_seed 1234 -set_max 500  -zip_report false -out  "/Users/linyongmao/gsea_home/output/microgliaSex"

###############################human34samps.noXYlowgrade.sex-tum-interaction.
cat microglia-39-sample-sampInfo.txt  | grep -v " XY      .*Low grade resection" | cut -f 1 > temp-nocere-sampids
head -1 microglia-41-samples.genecount.txt | awk 'BEGIN {FS = "\t"; OFS = "\t"} {for(i = 1; i <= NF; i++) print  $i, i}' > temp-1
/Users/linyongmao/Documents/microglia/scrnaseq-metaannot-combine temp-nocere-sampids temp-1 out
paste temp-nocere-sampids out | cut -f 3 | awk 'BEGIN {FS = "\t"; ORS = ""} {print $1 ","}'
cut -f 1,3,6,8,9,10,11,12,13,14,16,17,18,19,20,21,23,24,25,26,27,28,29,30,32,33,34,35,36,37,38,39,41,42,43 microglia-41-samples.genecount.txt > temp
mv temp microglia-41-samples.F-M-34samps.noXYlowgrade.genecount.txt
head -1 microglia-41-samples.F-M-34samps.noXYlowgrade.genecount.txt | awk 'BEGIN {FS = "\t"; OFS = "\t"} {for(i = 1; i <= NF; i++) print  $i, i}' > temp-2
vi temp-2
/Users/linyongmao/Documents/microglia/scrnaseq-metaannot-combine  temp-2  microglia-39-sample-sampInfo.txt out
mv out microglia-41-samples.F-M-34samps.noXYlowgrade.sampInfo.txt 

> rawCount <- read.delim("microglia-41-samples.F-M-34samps.noXYlowgrade.genecount.txt", header = T, row.names = 1)
dim(rawCount)
# [1] 58302    34
group <- factor(rep(1, 34))
y <- DGEList(counts=rawCount,group=group)
y <- calcNormFactors(y)
keep <-rowSums(edgeR::cpm(y)>=1) >= 34/4
y<-y[keep,]
dim(y)
# [1] 15896    34
info <- read.delim("microglia-41-samples.F-M-34samps.noXYlowgrade.sampInfo.txt")
identical(info$id1, row.names( y$samples))
# [1] TRUE
design <- model.matrix(~info$XX + info$Tumor + info$age + info$XX : info$Tumor + info$XX : info$age + info$age : info$Tumor)
design
y <- estimateDisp(y,design)
fit <- glmQLFit(y, design)
qlf <- glmQLFTest(fit, coef=5)
top2v1 <- topTags(qlf, n = 91234)
write.table(top2v1, "diff2-1.txt", sep="\t", quote = F)
topTags(qlf, n = 9)

mv -i diff2-1.txt human34samps.noXYlowgrade.sex-tum-interaction.diff2-1.txt
##geneID
vi human34samps.noXYlowgrade.sex-tum-interaction.diff2-1.txt
/Users/linyongmao/Documents/microglia/scrnaseq-metaannot-combine human34samps.noXYlowgrade.sex-tum-interaction.diff2-1.txt        geneID-name-type-chr out
paste  human34samps.noXYlowgrade.sex-tum-interaction.diff2-1.txt  out | grep -vw notApplicable > human34samps.noXYlowgrade.sex-tum-interaction.diff2-1.name-type-chr.txt
./make-rnk-genesymble  human34samps.noXYlowgrade.sex-tum-interaction.diff2-1.name-type-chr.txt human34samps.noXYlowgrade.sex-tum-interaction.diff2-1.rnk
cat human34samps.noXYlowgrade.sex-tum-interaction.diff2-1.rnk | awk 'BEGIN {FS = "\t"; OFS = "\t"} {print $1, (-1)*$2}' > human34samps.noXYlowgrade.sex-tum-interaction.diff2-1.2.rnk
bash /Users/linyongmao/Documents/GSEA_4.1.0/gsea-cli.sh  GSEAPreranked -gmx   /Users/linyongmao/Documents/h.all.v7.4.symbols.gmt    -collapse No_Collapse -mode Max_probe -norm meandiv  -nperm 1000 -rnk  human34samps.noXYlowgrade.sex-tum-interaction.diff2-1.2.rnk  -rpt_label   "human34samps.noXYlowgrade.sex-tum-interaction.edgeR_TAM.prerank.v7.4"  -create_svgs false -include_only_symbols true   -make_sets true -plot_top_x 1234567 -rnd_seed 1234 -set_max 500  -zip_report false -out  "/Users/linyongmao/gsea_home/output/microgliaSex"


#############################################################################
### tpm for all 39 samples
/Users/linyongmao/Documents/microglia/scrnaseq-metaannot-combine  temp.txt gene-length out
paste  temp.txt out | grep -vw notApplicable >  temp-1
cat temp-1 | awk '
BEGIN {FS = "\t"; OFS = ""; ORS = ""}
{
 if(NR == 1)
 {
  print $1;
  for(i = 2; i <= 40; i++)
  {  print "\t" $i;}
  print "\n";
 }
 else
 {
  print $1;
  for(i = 2; i <= 40; i++)
  {  print "\t" $i/$42;}
  print "\n";
 }
}
' > temp-2
t1 <- read.delim("temp-2", row.names=1)
cols <- base::colSums(t1)
t2 <- t1 
for(i in 1:dim(t1)[2])
{
 t2[,i] <- t1[,i] * 1e6 / cols[i]
}
summary(t2)
#########
    MGB_009             MGB_011            MGB_016            MGB_018            MGB_022             MGB_023            MGB_024             MGB_025        
 Min.   :    0.000   Min.   :    0.00   Min.   :    0.00   Min.   :    0.00   Min.   :    0.000   Min.   :    0.00   Min.   :    0.000   Min.   :    0.00  
 1st Qu.:    0.000   1st Qu.:    0.00   1st Qu.:    0.00   1st Qu.:    0.00   1st Qu.:    0.000   1st Qu.:    0.00   1st Qu.:    0.000   1st Qu.:    0.00  
 Median :    0.000   Median :    0.00   Median :    0.04   Median :    0.02   Median :    0.054   Median :    0.00   Median :    0.000   Median :    0.00  
 Mean   :   17.152   Mean   :   17.15   Mean   :   17.15   Mean   :   17.15   Mean   :   17.152   Mean   :   17.15   Mean   :   17.152   Mean   :   17.15  
 3rd Qu.:    2.255   3rd Qu.:    2.98   3rd Qu.:    2.42   3rd Qu.:    2.43   3rd Qu.:    2.468   3rd Qu.:    2.67   3rd Qu.:    3.032   3rd Qu.:    3.09  
 Max.   :29611.262   Max.   :47513.14   Max.   :36492.15   Max.   :54222.74   Max.   :27375.283   Max.   :97872.46   Max.   :26342.273   Max.   :54402.51  
##########
write.table(t2, "microglia-39-sample-tpm.txt", quote=F, sep="\t")
vi  microglia-39-sample-tpm.txt
/Users/linyongmao/Documents/microglia/scrnaseq-metaannot-combine  microglia-39-sample-tpm.txt geneID-name out
paste  microglia-39-sample-tpm.txt out | grep -vw notApplicable | awk 'BEGIN {FS = "\t"; OFS = "\t"; ORS = ""}
{
print $42;
for(i = 2; i <= 40; i++)
{
 if(i != 45)
 {
  print "\t" $i;
 }
}
print "\n"
}' > microglia-39-sample-tpm.genename.txt
###dup gene names
t3 <- read.delim("microglia-39-sample-tpm.genename.txt")
med <- data.frame(t3[,1])
med$logic <- TRUE
for(i in 1:dim(t3)[1]) {
 med$logic[i] <-  median(as.numeric( t3[i,2:40])) >= 1
}
t4<-t3[med$logic,]
dim(t4)
# 16266    40
write.table(t4, "temp-39samp-TPM-medianGE1.txt", quote=F, sep="\t")
cat temp-39samp-TPM-medianGE1.txt | cut -f 2-200 > temp
vi temp
mv temp temp-39samp-TPM-medianGE1.txt

###### try to annotate microglia bulk RNA-seq with scRNA profile; batch effect?
ref.data <- MonacoImmuneData()
cat temp-39samp-TPM-medianGE1.txt | cut -f 2-200 > temp
vi temp
echo geneID > temp-2
cat  temp | cut -f 1 | sort | uniq -u| grep -vw geneID >> temp-2
/Users/linyongmao/Documents/microglia/scrnaseq-metaannot-combine   temp-2  temp out
ge <- read.delim("out", row.names=1)
summary(ge)
dim(ge)
# [1] 16136    39
pred <- SingleR(test = ge , ref = ref.data,  labels =  ref.data$label.fine, assay.type.test=1)
data.frame(pred$first.labels, pred$labels, pred$pruned.labels)

ref.data <- celldex::HumanPrimaryCellAtlasData()
pred <- SingleR(test = ge , ref = ref.data,  labels =  ref.data$label.fine, assay.type.test=1)
res <- data.frame(pred$first.labels, pred$labels, pred$pruned.labels)

info <- read.delim("microglia-39-sample-sampInfo.txt")
identical(info$id1,colnames(ge) )
# [1] TRUE
res[c(1,2,4,7,9:12,28,32:36,38,39),]
# Macrophage:monocyte-derived:IL-4/Dex/TGFb
info[c(1,2,4,7,9:12,28,32:36,38,39),]
t1 <- info[c(1,2,4,7,9:12,28,32:36,38,39),]
t1[ t1$XX == "XX",]

#############################################################################
# LM22 correlation microglia sample
t1 <- read.delim("LM22.txt")
summary(t1)
###################
microarray 

Macrophages.M0     Macrophages.M1     Macrophages.M2      Dendritic.cells.resting Dendritic.cells.activated Mast.cells.resting  Mast.cells.activated  Eosinophils      
 Min.   :    1.06   Min.   :    0.25   Min.   :    0.453   Min.   :    1.026       Min.   :    0.759         Min.   :    2.435   Min.   :    1.12     Min.   :    1.87  
 1st Qu.:   19.60   1st Qu.:   23.05   1st Qu.:   23.403   1st Qu.:   19.723       1st Qu.:   22.607         1st Qu.:   27.843   1st Qu.:   29.19     1st Qu.:   39.78  
 Median :   58.12   Median :   76.08   Median :   88.341   Median :   65.778       Median :   70.791         Median :   76.946   Median :   92.54     Median :  119.94  
 Mean   :  519.42   Mean   :  996.14   Mean   :  572.152   Mean   :  539.898       Mean   :  734.217         Mean   :  513.519   Mean   :  699.19     Mean   :  675.88  
 3rd Qu.:  204.55   3rd Qu.:  284.61   3rd Qu.:  268.321   3rd Qu.:  202.624       3rd Qu.:  259.681         3rd Qu.:  235.396   3rd Qu.:  324.56     3rd Qu.:  424.21  
 Max.   :38944.02   Max.   :38944.02   Max.   :16386.057   Max.   :15992.470       Max.   :30950.328         Max.   :28290.310   Max.   :35339.69     Max.   :26617.24  
  Neutrophils       
 Min.   :    1.926  
 1st Qu.:   26.592  
 Median :  111.272  
 Mean   :  935.448  
 3rd Qu.:  429.546  
 Max.   :27644.590  
######################
sink("temp-res.txt")
for(i in 2:dim(t1)[2]) {
 for(j in 2:dim(t1)[2]) {
 res <- cor.test(t1[,i], t1[,j], method="spearman", exact=FALSE)
 str <- paste(colnames(t1)[i], colnames(t1)[j], format(res$p.value, digits=3), round(res$estimate, digits = 3), sep = "\t" )
 cat(str)
 cat("\n")
}
}
sink()


cat temp-res.txt | awk 'BEGIN {FS = "\t"; OFS = "\t"} $1 > $2 && $4 >= 0.7' > temp.0.7.txt
wc -l  temp.0.7.txt
      29 edges temp.0.7.txt for 21 nodes

cat temp-res.txt | awk 'BEGIN {FS = "\t"; OFS = "\t"} $1 > $2 && $4 >= 0.65' > temp.0.65.txt
wc -l  temp.0.65.txt

      38 eges, 22 nodes (add node eosino); temp.0.65.txt
Neutrophils	Eosinophils	1.79e-73	0.673

t3 <- read.delim("microglia-39-sample-tpm.genename.txt")
summary(t3)
t4 <- merge(t3, t1, by.x="name", by.y="Gene.symbol")
dim(t4)
# [1] 530  62
dim(t1)
# [1] 547  23
length(unique(t4$name))
## [1] 530

sink("temp-res.txt")

for(i in 2:40) {
 for(j in 41:62) {
 res <- cor.test(t4[,i], t4[,j], method="spearman", exact=FALSE)
 str <- paste(colnames(t4)[i], colnames(t4)[j], format(res$p.value, digits=3), round(res$estimate, digits = 3), sep = "\t" )
 cat(str)
 cat("\n")
}
}
sink()

cat LM22.microgliaSamples-tpm.spearman.txt | awk 'BEGIN {FS = "\t"; OFS = "\t"}  $4 >= 0.4' > temp-1
cat temp-1 | cut -f 1 | sort | uniq | while read s
do
 grep -w "$s" temp-1 | sort -t '        ' +3 -4gr | head -1
done > temp-2
cut -f 1 temp-2 | sort | uniq | wc -l
#      39
cut -f 2 temp-2 | sort | uniq -c     
  11 Macrophages.M2
  28 Monocytes
cat temp-2 |  sort -t '   ' +3 -4gr | tail
MGB_024	Monocytes	9.77e-33	0.486
MGB_113	Monocytes	2.27e-32	0.483
MGB_035	Monocytes	3.7e-31	0.475
MGB_018	Macrophages.M2	5.41e-31	0.474
MGB_119	Monocytes	4.81e-30	0.467
MGB_086	Macrophages.M2	7.23e-30	0.466
MGB_023	Monocytes	2.15e-29	0.462
MGB_011	Macrophages.M2	2.79e-28	0.454
MGB_073	Macrophages.M2	1.28e-27	0.449
MGB_139	Macrophages.M2	1.35e-25	0.433

cat temp-2 |  grep -i macrophages.m2  | cut -f 1 | while read s
do
grep -w "$s" microglia-39-sample-sampInfo.txt
done     > temp-3   
grep -w XY temp-3 | sort -t '     ' +4 -5 +5 -6

cat LM22.microgliaSamples-tpm.spearman.txt | awk 'BEGIN {FS = "\t"; OFS = "\t"}  $4 >= 0.4' | grep -i Macrophage > temp-4
cat temp-4 | cut -f 1 | sort | uniq | while read s
do
 grep -w "$s" temp-4 | sort -t '        ' +3 -4gr | head -1
done > temp-5
cat temp-5 | cut -f 1 | sort | uniq | wc -l
      39
cat temp-5 | cut -f 2 | sort | uniq -c     
   3 Macrophages.M0
  36 Macrophages.M2


#########################merge with duplicate ids
> df1
  names data1
1     a     1
2     b     2
3     c     3
4     c     4
5     d     5
> df2
  names data2
1     a     1
2     e     2
3     e     3
4     c     4
5     c     5
6     d     6
> merge(df1, df2)
  names data1 data2
1     a     1     1
2     c     3     4
3     c     3     5
4     c     4     4
5     c     4     5
6     d     5     6

######cpm/geneLength vs. tpm
t <- read.delim("temp.txt", header = T, row.names = 1)
dim(t)
##[1] 58302    39
rawCount <- t
group <- factor(rep(1, 39))
y <- DGEList(counts=rawCount,group=group)
y <- calcNormFactors(y)
d = as.data.frame( edgeR::cpm(y))
g <- read.delim("geneID-name")
d$name <- rownames(d)
d.g <- merge(d, g, by.x="name", by.y="geneID")
t3 <- read.delim("microglia-39-sample-tpm.txt")
summary(t3)
cpm.tpm.1 <- merge(d.g, t3, by.x="name", by.y="geneID")
dim(cpm.tpm.1)
# [1] 58302    80
mgb087.tpm <- cpm.tpm.1$MGB_087.y
mgb087.cpm <- cpm.tpm.1$MGB_087.x
len <- read.delim("geneID-name-type-chr-length")
ct.2 <- merge(cpm.tpm.1, len, by.x="name", by.y="geneID")
dim(ct.2)
# [1] 58302    85

#############################################################################
###corr between mg bulk RNA-seq samples and mouse scRNA mg clusters
> saveRDS(immune.combined, file="immune.combined.rds")
......
> t1 <- as.data.frame(t(pb))
####t1, read count per gene, same "gene length" sampled, will be used for spearman corr
> t1["Il1b",] ### raw aggregated read counts of cells belonging to microglia cluster-s
     f-ctrl-1 f-ctrl-2 f-tumor-1 f-tumor-2 m-ctrl-1 m-ctrl-2 m-tumor-1 m-tumor-2
Il1b       57      103       689       631       57       49       322       374
Tnf       118      191       369       477      121      163       331       293

> write.table(t1, "temp.1.txt", quote=F, sep="\t")
vi "temp.1.txt"

/Users/linyongmao/Documents/microglia/scrnaseq-metaannot-combine  temp.1.txt  M10.geneID-name-chr-type.2.name-first.txt out
paste temp.1.txt   out | grep -vw notApplicable |
awk 'BEGIN {FS = "\t"; OFS = "\t"; ORS = ""}
{
print $12;
for(i = 1; i <= NF; i++)
{
 if(i != 12)
 {
  print "\t" $i;
 }
}
print "\n"
}' > temp.1.geneID.txt

/Users/linyongmao/Documents/microglia/scrnaseq-metaannot-combine    temp.1.geneID.txt  Mouse_ENSEMBL_Gene_ID_Human_Orthologs_MSigDB.v7.4.chip out
paste  temp.1.geneID.txt  out | grep -vw notApplicable > temp.1.human.gene.name.txt
cat temp.1.human.gene.name.txt |  awk 'NR > 1' | cut -f 16 | sort | uniq -u > temp-2
wc -l temp-2
#   12272 temp-2

t2 <- read.delim("temp.1.human.gene.name.txt")
t3 <- read.delim("temp-2", header=F)
t4 <- t2[ t2$Gene.Symbol %in% t3$V1, ]
dim(t4)
# 12272    17
t5 <- read.delim("../microglia/LM22.txt")
t6 <- merge(t4, t5, by.x= "Gene.Symbol", by.y="Gene.symbol")
dim(t6)
# 333  39
length(unique(t6$Gene.Symbol))
# [1] 333

sink("temp-res.txt")

for(i in 4:11) {
 for(j in 18:39) {
 res <- cor.test(t6[,i], t6[,j], method="spearman", exact=FALSE)
 str <- paste(colnames(t6)[i], colnames(t6)[j], format(res$p.value, digits=3), round(res$estimate, digits = 3), sep = "\t" )
 cat(str)
 cat("\n")
}
}
sink()

t7 <- read.delim("../microglia/microglia-39-sample-tpm.genename.txt")
summary(t7)
t8 <- merge(t7, t6, by.x="name", by.y="Gene.Symbol")
dim(t8)
length(unique(t8$name))
# 333
sink("temp-res.txt")

for(i in 2:40) {
 for(j in c(43:50, 57:78)) {
 res <- cor.test(t8[,i], t8[,j], method="spearman", exact=FALSE)
 str <- paste(colnames(t8)[i], colnames(t8)[j], format(res$p.value, digits=3), round(res$estimate, digits = 3), sep = "\t" )
 cat(str)
 cat("\n")
}
}
sink()

#############################################################################
###gene-gene correlation over female samples, male samples
t <- read.delim("temp.txt", header = T, row.names = 1)
dim(t)
##[1] 58302    39
rawCount <- t
group <- factor(rep(1, 39))
y <- DGEList(counts=rawCount,group=group)
y <- calcNormFactors(y)
med <- data.frame(y$counts[,1])
med$logic <- TRUE
d <- edgeR::cpm(y)
for(i in 1:dim(y)[1]) {
 med$logic[i] <- median(d[i,]) >= 1
}
####median >= 1 for pathway genes
y<-y[med$logic,]
dim(y)
###[1] 14170    39
d = edgeR::cpm(y)
a <- log2(d+1)
head(a)
info <- read.delim("microglia-39-sample-sampInfo.txt")
g <- read.delim("geneID-name")
a.df <- as.data.frame(a)
a.df$id <- row.names(a.df)
a.df.g <- merge(a.df, g, by.x="id", by.y="geneID")
dim(a.df.g)
###[1] 14170    41
genes <- scan(what="", sep = "\n")
a8 <- a.df.g[ a.df.g$name %in% genes,]
c1 = numeric()
c2 = numeric()
for(i in 2:40) ###a8 column sample ID - group
{
 id <- colnames(a8)[i]
 gr <- info[ info$id1 == id,]$XX
 if(gr == "XX")
   c1 <- c(c1, i)
 else if (gr == "XY")
   c2 <- c(c2, i)
 else
   c5 = ""
}

sink("temp.2.txt")
str <- "geneID  name    pathway f-r     f-p     m-r     m-p     a-r     a-p"
cat(str)
cat("\n")

for(i in 1:dim(a8)[1]) {
 for(j in 1:dim(a8)[1]) {
t1 <- cor.test(as.numeric(a8[i,2:40]), as.numeric(a8[j,2:40]))
t2 <- cor.test(as.numeric(a8[i,c1]), as.numeric(a8[j,c1]))
t3 <- cor.test(as.numeric(a8[i,c2]), as.numeric(a8[j,c2]))
corRes <- paste(a8[i,]$id, a8[i,]$name, a8[j,]$name, round(t2$estimate, digits = 2), format(t2$p.value, digits = 3),
  round(t3$estimate, digits = 2) , format(format(t3$p.value, digits = 3), digits = 3), round(t1$estimate , digits = 2) , t1$p.value, sep = "\t")
cat(corRes)
cat("\n") 
}
}
sink()

###############################################################
###https://www.creative-diagnostics.com/The-NF-kB-Signaling-Pathway.htm
###rela/nfkb1 targets gene symbols
PLA2G4A 
IL4
CCL2
NOS2
CXCL8
PTGS2
IL1B
CCL3
SELE
IL6
CCL5
IL5
TNF
ICAM1
VCAM1

#############################################################################
###graph: plot NES & signed FDR of many pathways on one figure 
f1="/Users/linyongmao/gsea_home/output/microgliaSex/all39samp.sex-tum-interaction.edgeR_TAM.prerank.v7.4.GseaPreranked.1659467396692/gsea_report_for_na_pos_1659467396692.tsv"
f2="/Users/linyongmao/gsea_home/output/microgliaSex/all39samp.sex-tum-interaction.edgeR_TAM.prerank.v7.4.GseaPreranked.1659467396692/gsea_report_for_na_neg_1659467396692.tsv"
cat "$f1" "$f2" > te-39samp-lm.interaction.txt
vi te-39samp-lm.interaction.txt 

a <- read.delim("te-39samp-lm.txt")
a2 <- a[ (a$FDR.q.val < 0.05 & a$FDR.q.val.1 < 0.25) | (a$FDR.q.val.2 < 0.05 & a$FDR.q.val.3 < 0.25),]
dim(a2)
# [1] 27 34
a3 <- read.delim("te-39samp-lm.interaction.txt")
a4 <- merge(a2,a3, by.x="NAME", by.y = "NAME")
dim(a4)
# [1] 27 45
a5 <- a4[ a4$FDR.q.val.y < 0.25 & a4$NOM.p.val.y < 0.05, ]
dim(a5)
# [1] 18 45
# selected 18 pathways
a5$NAME
#### NES, FDR columns,
a6 <- a5[,c(1,3,5,10,12,17,19,24,26,39,41)]
write.table(a6, "temp.1.txt", quote=F, sep="\t")
system("bash ./script-fdr2col")
a7 <- read.delim("temp-4")
 par(pin=c(2.5,5), mai = c(2,3,1,1))
 plot(0, 0, xlim=c(0.5, 5.5), ylim=c(0,20), col="white", cex = 0.05,  xlab = "",ylab = "", yaxt="n", xaxt = "n"  )
 axis(2, at = 1:dim(a7)[1], labels=a7$NAME, las=1, cex.axis = 0.7)
axis(1, at = c(1:5), labels=c("XX gene perm", "XX sample perm", "XY gene perm", "XY sample perm", "sex:tumor interaction"), las = 2, cex.axis = 0.8)


for(i in 1:5) { ## of NESs
 for(j in 1:dim(a7)[1]) { ## of pathways
# points(1,12, pch=21, bg="yellow", )
 x = i;
 y = j;
 c = c(3,5,7,9,11)
 s = c(2,4,6,8,10)
 col = a7[j, c[i]];  #3,5,7,9,11
 siz = abs(a7[j,s[i]]) * 1.0;
 points(x, y, pch = 21, bg = col, cex = siz) 
}
}

abline(h = seq(1,dim(a7)[1],1), lty = 5, lwd = 0.5, col = "gray")

par(pin=c(2,2))
plot(0, 0, xlim=c(0.5, 5.5), ylim=c(0,20), col="white", cex = 0.05,  xlab = "",ylab = "", yaxt="n", xaxt = "n" , frame.plot=F )
legend(1,20, title="signed GSEA FDR", legend=c( "[-1,-0.25]", "[-0.25,-0.05]","[-0.05, 0]", "[0,0.05]",
 "[0.05,0.25]","[0.25,1]"), pch = 21, cex = 1, pt.bg= c("lightgreen", "lightblue","blue","red", "pink", "yellow"), pt.cex = 2)

par(pin=c(2,2))
plot(0, 0, xlim=c(0.5, 5.5), ylim=c(0,20), col="white", cex = 0.05,  xlab = "",ylab = "", yaxt="n", xaxt = "n" , frame.plot=F )
legend(1,20, title="|NES|", legend=c( "1", " ","2",
  " ", "3"), pch = 1, cex = 1, pt.cex = c(1,0,2,0,3))

#############################################################################
### add mouse BMDM infected with Listeria monocytogenes.
f1="/Users/linyongmao/gsea_home/output/microgliaSex/mouse-infect-BMDM-vsCtrl.prerank_h.all.v7.4.GseaPreranked.1664678201783/gsea_report_for_na_pos_1664678201783.tsv"
f2="/Users/linyongmao/gsea_home/output/microgliaSex/mouse-infect-BMDM-vsCtrl.prerank_h.all.v7.4.GseaPreranked.1664678201783/gsea_report_for_na_neg_1664678201783.tsv"
cat "$f1" "$f2" > te-BMDM-listeria-infection-gsea.txt
vi te-BMDM-listeria-infection-gsea.txt

b1 <- read.delim("te-BMDM-listeria-infection-gsea.txt")
# name, NES, FDR
b2 <- b1[, c(1,6,8)]
b3 <- merge(a6, b2, by.x="NAME", by.y="NAME")
write.table(b3, "temp.1.txt", quote=F, sep="\t")
system("bash ./script-fdr2col")
a7 <- read.delim("temp-4")

par(pin=c(2.5,5), mai = c(2,3,1,1))
 plot(0, 0, xlim=c(0.5, 6.5), ylim=c(0,20), col="white", cex = 0.05,  xlab = "",ylab = "", yaxt="n", xaxt = "n"  )
 axis(2, at = 1:dim(a7)[1], labels=a7$NAME, las=1, cex.axis = 0.7)
axis(1, at = c(1:6), labels=c("XX gene perm", "XX sample perm", "XY gene perm", "XY sample perm", "sex:tumor interaction", "BMDM list infection"), las = 2, cex.axis = 0.8)


for(i in 1:6) { ## of NESs
 for(j in 1:dim(a7)[1]) { ## of pathways
# points(1,12, pch=21, bg="yellow", )
 x = i;
 y = j;
 c = c(3,5,7,9,11,13)
 s = c(2,4,6,8,10,12)
 col = a7[j, c[i]];  #3,5,7,9,11
 siz = abs(a7[j,s[i]]) * 1.0;
 points(x, y, pch = 21, bg = col, cex = siz)
}
}

abline(h = seq(1,dim(a7)[1],1), lty = 5, lwd = 0.5, col = "gray")
abline(v = 5.5,  lwd = 2, col = "black")

####add human33samp.nocereb-nooci, and compare
f1="/Users/linyongmao/gsea_home/output/microgliaSex/human33samp.nocereb-nooci.sex-tum-interaction.edgeR_TAM.prerank.v7.4.GseaPreranked.1659566792009/gsea_report_for_na_pos_1659566792009.tsv"
f2="/Users/linyongmao/gsea_home/output/microgliaSex/human33samp.nocereb-nooci.sex-tum-interaction.edgeR_TAM.prerank.v7.4.GseaPreranked.1659566792009/gsea_report_for_na_neg_1659566792009.tsv"
cat "$f1" "$f2" > te-human33samp.nocereb-nooci.sex-tum-interaction-gsea.txt
vi te-human33samp.nocereb-nooci.sex-tum-interaction-gsea.txt

b1 <- read.delim("te-human33samp.nocereb-nooci.sex-tum-interaction-gsea.txt")
b2 <- b1[, c(1,6,8)]
b3 <- merge(a6, b2, by.x="NAME", by.y="NAME")
write.table(b3, "temp.1.txt", quote=F, sep="\t")
system("bash ./script-fdr2col")
a7 <- read.delim("temp-4")

par(pin=c(1.5,5), mai = c(2,5,1,1))
 plot(0, 0, xlim=c(0.5, 2.5), ylim=c(0,20), col="white", cex = 0.05,  xlab = "",ylab = "", yaxt="n", xaxt = "n"  )
 axis(2, at = 1:dim(a7)[1], labels=a7$NAME, las=1, cex.axis = 0.7)
axis(1, at = c(1:2), labels=c( "sex:tumor interaction, \n all 39 samples", "33 samples without \n Cerebellum and occipital"), las = 2, cex.axis = 0.8)

for(i in 1:2) { ## of NESs
 for(j in 1:dim(a7)[1]) { ## of pathways
# points(1,12, pch=21, bg="yellow", )
 x = i;
 y = j;
 c = c(11,13)
 s = c(10,12)
 col = a7[j, c[i]];  #11, 13
 siz = abs(a7[j,s[i]]) * 1.0;
 points(x, y, pch = 21, bg = col, cex = siz)
}
}

abline(h = seq(1,dim(a7)[1],1), lty = 5, lwd = 0.5, col = "gray")

######human and mouse scRNA-seq TAM
> b1 <- read.delim("te-mouse.clusts.micro.sex-tum-interaction-gsea.txt")
"sex:tumor interaction, \n mouse scRNA-seq TAM"

#############################################################################
###heatmap of gene level z-score average per group (XX_TAM,
###annotated with mouse BMDM bacterial infection
f1="/Users/linyongmao/gsea_home/output/microgliaSex/all39samp.sex-tum-interaction.edgeR_TAM.prerank.v7.4.GseaPreranked.1659467396692/HALLMARK_TNFA_SIGNALING_VIA_NFKB.tsv"
f2="/Users/linyongmao/gsea_home/output/microgliaSex/all39samp.sex-tum-interaction.edgeR_TAM.prerank.v7.4.GseaPreranked.1659467396692/HALLMARK_INFLAMMATORY_RESPONSE.tsv"
#77 genes; LEGs && interaction p-value < 0.1
cat "$f1"  "$f2" | cut -f 2,4,6 | awk 'BEGIN {FS = "\t"; OFS = "\t"}  $3 == "Yes" && $2 > -log(0.1) / log(10)' | cut -f 1 | sort | uniq  > temp-genes
genes <- read.delim("temp-genes", header=F)
a8 <- a.df.g[ a.df.g$name %in% genes$V1, ] ###genes a set of genes (e.g. NF-kB members + DDX3X)
dim(a8)
# [1] 72 41 (77 genes in the orig list)
info$group <- paste(info$XX, info$Tumor, sep="_")
sort(unique(info$group))
# [1] "XX_Control" "XX_Tumor"   "XY_Control" "XY_Tumor"
g5 <- sort(unique(info$group))
c1 = numeric()
c2 = numeric()
......
a9 <- a8[,42:45]
rownames(a9) <- a8$name
mat <- as.matrix(a9)

dim(mat)
# [1] 72  4
Heatmap(matrix=mat, name="z-score", cluster_columns=F, row_names_gp = gpar(fontsize = 6))

b1 <- read.delim("/Users/linyongmao/Documents/microglia-mouse/dir-ddx3x-list-infection/GSE86591_RAW/mouse-infect-BMDM-vsCtrl-diff2-1.human.gene.rnk", header=F)
a9$name <- rownames(a9)
a.b <- merge(a9, b1, by.x="name", by.y="V1")
dim(a.b)
# [1] 61  6
a.b <- merge(a9, b1, by.x="name", by.y="V1", all.x=T)
dim(a.b)
# [1] 72  6
mat <- as.matrix(a.b[,2:5])
rownames(mat) <- a.b$name
col_fun = colorRamp2(c(-4,0,8), c("blue", "white",  "red"))
ca <- HeatmapAnnotation(bact_infect = a.b$V2, col=list(bact_infect = col_fun), which="row")
>need to be tested: Heatmap(matrix=mat, name="z-score", cluster_columns=F, row_names_gp = gpar(fontsize = 6), right_annotation=ca)

######M1 mg LPS stimulation, signaling genes
echo $f1
../microglia-mouse/dir-ddx3x-list-infection/GSE86591_RAW/mouse-infect-BMDM-vsCtrl-diff2-1.human.gene.rnk
cat $f1 all39samp.sex-tum-interaction.diff2-1.2.rnk  | cut -f 1 | sort | uniq | wc -l
   17024
cat $f1 all39samp.sex-tum-interaction.diff2-1.2.rnk  | cut -f 1 | sort | uniq > temp-1
rm temp-2
grep -i "tlr[24]"  temp-1 >> temp-2
grep -i "myd88" temp-1 >> temp-2
grep -i TICAM1  temp-1 >> temp-2
grep -i "irf[1-9]$" temp-1 >> temp-2
grep -i "stat" temp-1 >> temp-2
grep -i "jun" temp-1 >> temp-2
grep -i nfkb  temp-1 >> temp-2
grep -i ^rel temp-1 >> temp-2
vi temp-2
sort temp-2 | uniq > temp-3
mv temp-3 M1-mg-LPS-signaling-genes

f1 <- read.delim("../microglia-mouse/dir-ddx3x-list-infection/GSE86591_RAW/mouse-infect-BMDM-vsCtrl-diff2-1.human.gene.rnk", header=F)
g1 <- read.delim("M1-mg-LPS-signaling-genes.v2", header=F)
a1 <- merge(g1, f1, by.x="V1", by.y="V1")
f2 <- read.delim("all39samp.sex-tum-interaction.diff2-1.2.rnk", header=F)
a2 <- merge(a1, f2, by.x="V1", by.y="V1")
write.table(a2, "temp.2.txt", quote=F, sep="\t")

#############################################################################
###data label, label data points, label overlapping data points
> install.packages("maptools", repos="http://R-Forge.R-project.org")
library(maptools)
plot(a2$V2.x, a2$V2.y, xlab="signed logP (mouse BMDM infect vs ctrl)", ylab="signed logP (sex:tumor interaction)", pch = 21, 
 bg = "black", cex=0.5, xlim=c(-8,8), ylim=c(-2,2), xaxt="n")
axis(1, at = seq(-8,8,2), labels=seq(-8,8,2), las = 1, cex.axis = 1)
abline(lm(a2$V2.y ~ a2$V2.x), lwd = 0.5)
####95% confidence interval
y = a2$V2.y
x = a2$V2.x
lm.out <- lm(y ~ x)
newx = seq(-10,10, by = 0.01)
conf_interval <- predict(lm.out, newdata=data.frame(x=newx), interval="confidence",level = 0.95)
lines(newx, conf_interval[,2], col="blue", lty=2)
lines(newx, conf_interval[,3], col="blue", lty=2)
pointLabel(a2$V2.x, a2$V2.y, a2$V1, offset = 0, cex = .5, method="SANN", col="red")
abline(h = seq(-10,10,1), lty = 5, lwd = 0.5, col = "gray")
abline(v = seq(-10,10,2), lty = 5, lwd = 0.5, col = "gray")
abline(h = 0,  lwd = 1)
abline(v = 0, lwd = 1)

res <- cor.test(x,y)
title(main=paste("r=",round(res$estimate, digits = 3), " p=", format(res$p.value, digits=3), sep =""))

######female plot
f2 <- read.delim("female-diff2-1-filtgenesFirst.rnk", header=F)
plot(a2$V2.x, a2$V2.y, xlab="signed logP (mouse BMDM infect vs ctrl)", ylab="female signed logP (TAM vs ctrl)", pch = 21,
  bg = "black", cex=0.5, xlim=c(-8,8), ylim=c(-2,3), xaxt="n")

###########male plot
ylab="male signed logP (TAM vs ctrl)"
f2 <- read.delim("male-diff2-1-filtgenesFirst.rnk", header=F)

############male tumor resection only vs all male samples
f1 <- read.delim("M-17samps.tumResecOnly.rnk", header=F)
g1 <- read.delim("M1-mg-LPS-signaling-genes.v2", header=F)
a1 <- merge(g1, f1, by.x="V1", by.y="V1")
f2 <- read.delim("male-diff2-1-filtgenesFirst.rnk", header=F)
a2 <- merge(a1, f2, by.x="V1", by.y="V1")
write.table(a2, "temp.2.txt", quote=F, sep="\t")

plot(a2$V2.x, a2$V2.y, xlab="male signed logP (TAM vs ctrl, tumResecOnly)", ylab="male signed logP (TAM vs ctrl, all 39 samples)", pch = 21,
 bg = "black", cex=0.5, )
abline(lm(a2$V2.y ~ a2$V2.x), lwd = 0.5)

# f1 <- read.delim("M-17samps.tumResecOnly.rnk", header=F)
f1 <- read.delim("../microglia-mouse/dir-ddx3x-list-infection/GSE86591_RAW/mouse-infect-BMDM-vsCtrl-diff2-1.human.gene.rnk", header=F)
# g1 <- read.delim("M1-mg-LPS-signaling-genes.v2", header=F)
g1 <- read.delim("M1-marker-genes", header=F)
head(g1)
a1 <- merge(g1, f1, by.x="V1", by.y="V1")
# f2 <- read.delim("female-diff2-1-filtgenesFirst.rnk", header=F)
f2 <- read.delim("all39samp.sex-tum-interaction.diff2-1.2.rnk", header=F)
a2 <- merge(a1, f2, by.x="V1", by.y="V1")
write.table(a2, "temp.2.txt", quote=F, sep="\t")
plot(a2$V2.x, a2$V2.y, xlab="male signed logP (TAM vs ctrl, tumResecOnly)", ylab="male signed logP (TAM vs ctrl, all male samples)", pch = 21,
 bg = "black", cex=0.5, )
y = 1:5
x = y
abline(lm(y~x))
abline(h = seq(-10,10,0.5), lty = 5, lwd = 0.5, col = "gray")
abline(v = seq(-10,10,0.5), lty = 5, lwd = 0.5, col = "gray")
 abline(h = 0,  lwd = 1)
 abline(v = 0, lwd = 1)
pointLabel(a2$V2.x, a2$V2.y, a2$V1, offset = 0, cex = 1, method="SANN", col="red")

#############################################################################
###########correlation human and mouse gene signed logP-value
####using all genes
hm <- read.delim("male-diff2-1-filtgenesFirst.rnk", header=F)
mm <- read.delim("../microglia-mouse/mouse.clusts.micro.male.diff2-1.edgeR.human.gene.rnk", header=F)
a1 <- merge(hm, mm, by.x="V1", by.y="V1")
dim(a1)
# [1] 9364    3
dim(hm)
# [1] 16233     2
dim(mm)
# [1] 10001     2
plot(a1$V2.x, a1$V2.y, xlab="male human signed logP (TAM vs ctrl, all 39 samples)", ylab = "male mouse signed logP (TAM vs ctrl)", cex=0.2)
abline(lm(a1$V2.y ~ a1$V2.x), col="red")
abline(v = 0, lty = 5, lwd = 1, col = "blue")
abline(h = 0, lty = 5, lwd = 1, col = "blue")
res <- cor.test(a1$V2.y , a1$V2.x)
title(main=paste("r=",round(res$estimate, digits = 3), " p=", format(res$p.value, digits=3), sep =""))
a2 <- a1[ (a1$V2.x)^2 >= (log10(0.01))^2 | (a1$V2.y)^2 >= (log10(0.01))^2,]
dim(a2)
# [1] 1702    3
plot(a2$V2.x, a2$V2.y, xlab="male human signed logP (TAM vs ctrl, all 39 samples)", ylab = "male mouse signed logP (TAM vs ctrl)", cex=0.2)
abline(lm(a2$V2.y ~ a2$V2.x), col="red")
abline(v = 0, lty = 5, lwd = 1, col = "blue")
abline(h = 0, lty = 5, lwd = 1, col = "blue")
res <- cor.test(a2$V2.y , a2$V2.x)
title(main=paste("genes with p<= 0.01 in human or mouse\n", "r=",round(res$estimate, digits = 3), " p=", format(res$p.value, digits=3), sep =""))

#############human tpm four group boxplot
h1 <- read.delim("../microglia/microglia-39-sample-tpm.genename.txt")
sum(h1[,2:40])
# [1] 3.9e+07 /39 samples = 1e6 per sample
t3 <- h1[ h1$name %in% c("PTPRC"), ]
rownames(t3) <- t3$name
t3 <- t3[, 2:40]
dim(t3)
res <- data.frame(id = colnames(t3), mean = colMeans(t3))
info <- read.delim("../microglia/microglia-39-sample-sampInfo.txt")
res.info <- merge(res, info, by.x="id", by.y="id1")
res.info$grape3 <- paste(res.info$XX, res.info$Tumor)
boxplot(as.numeric(res.info$mean) ~ res.info$grape3 ,  ylab = "Tpm", xlab = "", outcol = "white")
   beeswarm(as.numeric(res.info$mean) ~ res.info$grape3 ,add =T,pch = c(16,16,17,17), col=c("green", "red", "green", "red"), cex = 1)
   title(main = "human microglia PTPRC")
   abline(h = seq(-100,1000,100), lty = 5, lwd = 0.5, col = "gray")

########################################################################################################
cat microglia-all-samples-sampInfo.txt | cut -f 7 | sort  | uniq -u | wc -l
     121
     121 microglia-all-samples-sampInfo.txt

> s1 <- read.delim("microglia-all-samples-sampInfo.txt")
info <- read.delim("microglia-39-sample-sampInfo.txt")
ss <- merge(s1, info, by.x="BamID", by.y="id1")
data.frame(ss$Age, ss$age)
unique(paste(ss$Sex, ss$XX))
[1] "M XY" "F XX"
unique(paste(ss$Brain_region, ss$location))
[1] "Parietal Parietal"     "Temporal Temporal"     "Frontal Frontal"       "Occipital Occipital"   "Cerebellum Cerebellum"
unique(paste(ss$Pathology_major, ss$Tumor))
[1] "Tumour Tumor"    "Control Control"
ss2 <- ss[ ss$Pathology_major == "Tumour",]
unique(paste(ss2$Pathology, ss2$grade))
[1] "Tumour resection Tumor resection"        "Low grade resection Low grade resection" "Tumour resection  Tumor resection"       "Benign resection Benign resection"
[5] "Met resection Met resection"  

############################################################################################
ls /lab/solexa_page/mtharp/EGA_microglia/All_pathologies_bam/Haemorrage/  | wc -l
18
ls /lab/solexa_page/mtharp/EGA_microglia/All_pathologies_bam/Hydrocephalus/  | wc -l
19
ls /lab/solexa_page/mtharp/EGA_microglia/All_pathologies_bam/Trauma/  | wc -l
14

summary(factor(ss$Population))
      European South American           NA's
            35              2              2
ss[ ss$DemuxletPair1 != ss$DemuxletPair2,]
summary(as.numeric( ss$RIN))
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's
  5.000   7.325   7.800   7.718   8.475   9.600       1
> s1[ s1$DemuxletPair1 != s1$DemuxletPair2,]

#############################################################################
### tpm for all trauma-etc-51samples samples
/Users/linyongmao/Documents/microglia/scrnaseq-metaannot-combine  temp.1.txt gene-length out
paste  temp.1.txt out | grep -vw notApplicable >  temp-1

cat temp-1 | awk '
BEGIN {FS = "\t"; OFS = ""; ORS = ""}
{
 if(NR == 1)
 {
  print $1;
  for(i = 2; i <= 52; i++)
  {  print "\t" $i;}
  print "\n";
 }
 else
 {
  print $1;
  for(i = 2; i <= 52; i++)
  {  print "\t" $i/$54;}
  print "\n";
 }
}
' > temp-2

t1 <- read.delim("temp-2", row.names=1)
cols <- base::colSums(t1)
t2 <- t1 
for(i in 1:dim(t1)[2])
{
 t2[,i] <- t1[,i] * 1e6 / cols[i]
}
summary(t2)
######
    MGB_031             MGB_036            MGB_043            MGB_052            MGB_056            MGB_065             MGB_068            MGB_074        
 Min.   :    0.000   Min.   :    0.00   Min.   :    0.00   Min.   :    0.00   Min.   :    0.00   Min.   :     0.00   Min.   :    0.00   Min.   :    0.00  
 1st Qu.:    0.000   1st Qu.:    0.00   1st Qu.:    0.00   1st Qu.:    0.00   1st Qu.:    0.00   1st Qu.:     0.00   1st Qu.:    0.00   1st Qu.:    0.00  
 Median :    0.000   Median :    0.05   Median :    0.00   Median :    0.00   Median :    0.00   Median :     0.00   Median :    0.00   Median :    0.03  
 Mean   :   17.152   Mean   :   17.15   Mean   :   17.15   Mean   :   17.15   Mean   :   17.15   Mean   :    17.15   Mean   :   17.15   Mean   :   17.15  
 3rd Qu.:    2.004   3rd Qu.:    2.70   3rd Qu.:    0.99   3rd Qu.:    2.38   3rd Qu.:    1.13   3rd Qu.:     1.44   3rd Qu.:    1.78   3rd Qu.:    3.43  
 Max.   :29608.106   Max.   :70958.02   Max.   :72278.89   Max.   :63705.61   Max.   :63449.07   Max.   :103610.43   Max.   :87305.84   Max.   :40912.74  

write.table(t2, "microglia-trauma-etc-51-sample-tpm.txt", quote=F, sep="\t")
vi microglia-trauma-etc-51-sample-tpm.txt
/Users/linyongmao/Documents/microglia/scrnaseq-metaannot-combine  microglia-trauma-etc-51-sample-tpm.txt  geneID-name out
paste   microglia-trauma-etc-51-sample-tpm.txt  out | grep -vw notApplicable | awk 'BEGIN {FS = "\t"; OFS = "\t"; ORS = ""}
{
print $54;
for(i = 2; i <= 52; i++)
{
 if(i != 450)
 {
  print "\t" $i;
 }
}
print "\n"
}' > microglia-trauma-etc-51-sample-tpm.genename.txt

#################################trauma etc samples boxplot
> t1 <- read.delim("microglia-39-sample-tpm.txt")
t2 <- read.delim("microglia-trauma-etc-51-sample-tpm.txt")
t3 <- merge(t1, t2, by.x="geneID", by.y = "geneID")
dim(t3)
# [1] 58302    91
g <- read.delim("geneID-name")
t4 <- merge(t3, g, by.x="geneID", by.y = "geneID" )
g2 <- scan(what="", sep = "\n")
t5 <- t4[ t4$name %in% g2,]
t6 <- t5[, c(2:91)]
rownames(t6) <- t5$name
dim(t6)
# [1]  8 90
t7 <- as.data.frame( t(t6))
t7$name <- rownames(t7)
s <- read.delim("microglia-all-samples-sampInfo.txt")
t8 <- merge(t7, s, by.x="name", by.y="BamID")
summary(factor(t8$Pathology_major))
#      Control   Haemorrhage Hydrocephalus        Trauma        Tumour
#           16            18            19            14            23
boxplot(t8$TMEM119 ~ t8$Pathology_major, ylab = "TMEM119 (tpm)",  outcol = "white", cex.axis = 0.8, col = c("grey", "white"))
beeswarm(t8$TMEM119 ~ t8$Pathology_major, col = c("green", "red"), add=T)
abline(h = seq(0, 500, 50), lty = 5, lwd = 0.5, col = "gray")

#F Control   F Haemorrhage F Hydrocephalus        F Trauma        F Tumour       M Control   M Haemorrhage M Hydrocephalus        M Trauma        M Tumour 
#        7               6               9               3              10               9              12              10              11              13 

#################################trauma etc samples pathway level boxplot
t1 <- read.delim("temp.txt")
t2 <- read.delim("trauma-hae-hydro-51samp.counts_gene.52colum.txt")
t3 <- merge(t1, t2, by.x="geneID", by.y = "geneID")
dim(t3)
# [1] 58302    91
t4 <- t3[, colnames(t3) != "MGB_102" & colnames(t3) != "MGB_103"]
t5 <- t4[,2:89]
rownames(t5) <- t4$geneID

rawCount <- t5
group <- factor(rep(1, 88))
y <- DGEList(counts=rawCount,group=group)
y <- calcNormFactors(y)
y$samples
# MGB_097     1 42617903    0.3342273
# 81   76   M     Haemorrhage    Arteriovenous Malformation   Cerebellum               European MGB_097       MGB_097       MGB_097                   N/D                   
med <- data.frame(y$counts[,1])
med$logic <- TRUE
d <- cpm(y)
for(i in 1:dim(y)[1]) {
 med$logic[i] <- median(d[i,]) >= 1
}
####median >= 1 for pathway genes
y<-y[med$logic,]
dim(y)
# [1] 13991    88
d = cpm(y)
a <- d
b = log10(a+1)
for(i in 1:dim(b)[1])
{
 a[i, ] <- (b[i, ] - mean(as.numeric(b[i,]))) / var(as.numeric(b[i,]))^(1/2)
}
###a is z-score of log10(cpm+1)
info <- read.delim("microglia-all-samples-sampInfo.txt")
g <- read.delim("geneID-name")
a.df <- as.data.frame(a)
a.df$id <- row.names(a.df)
a.df.g <- merge(a.df, g, by.x="id", by.y="geneID")
dim(a.df.g)
# [1] 13991    90
file <- read.delim("temp-files", header=F)
index = 10
file[index,1]
# [1] "HALLMARK_INFLAMMATORY_RESPONSE.genes"
pathname = file[index,1]
p <- read.delim(file[index,1], header=F)
p.exp <- a.df.g[ a.df.g$name %in% p$V1, ]
length(p.exp$name)
# [1] 164
mat <- as.matrix(p.exp[, 2:89])
res <- data.frame(id = colnames(mat), mean = colMeans(mat))
res.info <- merge(res, info, by.x="id", by.y="BamID")
res.info$grape3 <- paste(res.info$Sex, res.info$Pathology_major)
res.info.path <- res.info
r2 <- res.info[ res.info$Pathology_major == "Trauma" | res.info$Pathology_major == "Control",]
dim(r2)
boxplot( r2$mean ~ r2$grape3, xlab = "", ylab = "z-score avg of all genes", outcol = "white")
title(main= gsub(".genes", "", pathname))
beeswarm(r2$mean ~ r2$grape3, pch = c(16,16,17,17), col = c("green", "red", "green", "red" ), cex = 2, add = T)
abline(h = seq(-100, 500, 0.1), lty = 5, lwd = 0.5, col = "gray")

layout(matrix(1:2, 1, 2, byrow=T) )
#####SAT1 ~ inflamm pathway
plot( res.info.g.p.fem$mean.x, res.info.g.p.fem$mean.y, xlab="inflamm pathway z-score", ylab="gene expr log2(cpm+1)",  col="black", ylim=c(8, 14), cex = 0.1)
abline(lm(res.info.g.p.fem$mean.y ~ res.info.g.p.fem$mean.x))
points(res.info.g.p.fem[ res.info.g.p.fem$Pathology_major.x == "Control", ]$mean.x, res.info.g.p.fem[ res.info.g.p.fem$Pathology_major.x == "Control", ]$mean.y,  col = "green", pch = 16 , cex = 1.6)
points(res.info.g.p.fem[ res.info.g.p.fem$Pathology_major.x == "Tumour", ]$mean.x, res.info.g.p.fem[ res.info.g.p.fem$Pathology_major.x == "Tumour", ]$mean.y, col = "red", pch = 16 , cex = 1.6)
points(res.info.g.p.fem[ res.info.g.p.fem$Pathology_major.x == "Trauma", ]$mean.x, res.info.g.p.fem[ res.info.g.p.fem$Pathology_major.x == "Trauma", ]$mean.y, col = "orange", pch = 17 , cex = 1.6)
points(res.info.g.p.fem[ res.info.g.p.fem$Pathology_major.x == "Haemorrhage", ]$mean.x, res.info.g.p.fem[ res.info.g.p.fem$Pathology_major.x == "Haemorrhage", ]$mean.y, col = "blue", pch = 15 , cex = 1.6)
points(res.info.g.p.fem[ res.info.g.p.fem$Pathology_major.x == "Hydrocephalus", ]$mean.x, res.info.g.p.fem[ res.info.g.p.fem$Pathology_major.x == "Hydrocephalus", ]$mean.y, col = "black", pch = 18 , cex = 1.6)
legend("topleft", inset = 0.05, c("XX control", "XX tumor", "XX Trauma", "XX Haemorrhage", "XX Hydrocephalus"), pch=c(16,16,17,15,18), col = c("green", "red", "orange", "blue","black" ), bty = "n")
title(main = paste(a.df.g[geneID2, ]$name, ", r=", round(t2$estimate, digits = 3), " p=", format(t2$p.value, digits=3), sep=""))
abline(h = seq(0,20,1), lty = 5, lwd = 0.5, col = "gray")

# male SAT1
plot( res.info.g.p.male$mean.x, res.info.g.p.male$mean.y, xlab="inflamm pathway z-score", ylab="gene expr log2(cpm+1)",  col="black", ylim=c(8, 14), cex = 0.1)
abline(lm(res.info.g.p.male$mean.y ~ res.info.g.p.male$mean.x))
points(res.info.g.p.male[ res.info.g.p.male$Pathology_major.x == "Control", ]$mean.x, res.info.g.p.male[ res.info.g.p.male$Pathology_major.x == "Control", ]$mean.y,  col = "green", pch = 16 , cex = 1.6)
points(res.info.g.p.male[ res.info.g.p.male$Pathology_major.x == "Tumour", ]$mean.x, res.info.g.p.male[ res.info.g.p.male$Pathology_major.x == "Tumour", ]$mean.y, col = "red", pch = 16 , cex = 1.6)
points(res.info.g.p.male[ res.info.g.p.male$Pathology_major.x == "Trauma", ]$mean.x, res.info.g.p.male[ res.info.g.p.male$Pathology_major.x == "Trauma", ]$mean.y, col = "orange", pch = 17 , cex = 1.6)
points(res.info.g.p.male[ res.info.g.p.male$Pathology_major.x == "Haemorrhage", ]$mean.x, res.info.g.p.male[ res.info.g.p.male$Pathology_major.x == "Haemorrhage", ]$mean.y, col = "blue", pch = 15 , cex = 1.6)
points(res.info.g.p.male[ res.info.g.p.male$Pathology_major.x == "Hydrocephalus", ]$mean.x, res.info.g.p.male[ res.info.g.p.male$Pathology_major.x == "Hydrocephalus", ]$mean.y, col = "black", pch = 18 , cex = 1.6)
legend("topleft", inset = 0.05, c("XY control", "XY tumor", "XY Trauma", "XY Haemorrhage", "XY Hydrocephalus"), pch=c(16,16,17,15,18), col = c("green", "red", "orange", "blue","black" ), bty = "n")
title(main = paste(a.df.g[geneID2, ]$name, ", r=", round(t3$estimate, digits = 3), " p=", format(t3$p.value, digits=3), sep=""))
abline(h = seq(0,20,1), lty = 5, lwd = 0.5, col = "gray")

#################################trauma etc corr between gene and a pathway
...
res.info.path <- res.info
...
###gene expr
y <- DGEList(counts=rawCount,group=group)
y <- calcNormFactors(y)
y$samples
keep <-rowSums(cpm(y)>=1) >= 6
y<-y[keep,]
dim(y)
# [1] 19210    88
d = cpm(y)
a <- log2(d+1)
###a is log2(cpm+1)
info <- read.delim("microglia-all-samples-sampInfo.txt")
g <- read.delim("geneID-name")
a.df <- as.data.frame(a)
a.df$id <- row.names(a.df)
a.df.g <- merge(a.df, g, by.x="id", by.y="geneID")
dim(a.df.g)
# [1] 19210    90
str <- "geneID	name	pathway	f-r	f-p	m-r	m-p	a-r	a-p"
cat(str)
cat("\n")
for(geneID2 in 1:dim(a.df.g)[1]) {
# geneID2 = 5405
p.exp <- a.df.g[geneID2, ]
geneName = paste(a.df.g[geneID2, ]$id, a.df.g[geneID2, ]$name, sep = "\t")
length(p.exp$name)
# [1] 1
mat <- as.matrix(p.exp[, 2:89])
res <- data.frame(id = colnames(mat), mean = colMeans(mat))
res.info <- merge(res, info, by.x="id", by.y="BamID")
res.info$grape3 <- paste(res.info$Sex, res.info$Pathology_major)
res.info.xgene <- res.info

res.info.g.p <- merge(res.info.path, res.info.xgene, by.x="id", by.y="id")
res.info.g.p.fem <- res.info.g.p[ res.info.g.p$Sex.x == "F", ]
res.info.g.p.male <- res.info.g.p[ res.info.g.p$Sex.x == "M", ]
t1 <- cor.test(res.info.g.p$mean.x, res.info.g.p$mean.y)
t2 <- cor.test(res.info.g.p.fem$mean.x, res.info.g.p.fem$mean.y)
t3 <- cor.test(res.info.g.p.male$mean.x, res.info.g.p.male$mean.y)
corRes <- paste(geneName, pathname, t2$estimate, t2$p.value, t3$estimate, t3$p.value, t1$estimate, t1$p.value, sep = "\t")
cat(corRes)
cat("\n")
# ENSG00000130066	SAT1	HALLMARK_INFLAMMATORY_RESPONSE.genes	0.881003868640096	6.25377307153326e-12	0.828280839536467	1.09261636934345e-14	0.851018408237509	8.8103590119187e-26
# ENSG00000104856	RELB	HALLMARK_INFLAMMATORY_RESPONSE.genes	0.91618895880208	2.97446066087139e-14	0.774425341585504	6.43728727603421e-12	0.835542577721745	4.38048596889194e-24
}

#############################################################################
#############STAR vs RSEM read mapping
/Users/linyongmao/Documents/microglia/scrnaseq-metaannot-combine  MGB_022.2.genecount  rsem-count.genes.results  out
paste  MGB_022.2.genecount   out | grep -iv  notapp  > star-rsem.txt
cat star-rsem.txt  | cut -f 1,3,8 > temp.1.txt

t <- read.delim("temp.1.txt", header = T, row.names = 1)
dim(t)
##62750     2
rawCount <- t
group <- factor(rep(1, 2))
y <- DGEList(counts=rawCount,group=group)
y <- calcNormFactors(y)
med <- data.frame(y$counts[,1])
med$logic <- TRUE
d <- cpm(y)
for(i in 1:dim(y)[1]) {
 med$logic[i] <- median(d[i,]) >= 1
}
####median >= 1 for pathway genes
y<-y[med$logic,]
dim(y)
# 15907     2
t1 <- as.data.frame(y$counts)
> plot( log10(t1$expected_count + 1), log10(t1$count + 1))

abline(h = seq(0,20,1), lty = 1, lwd = 0.5, col = "gray")
abline(v = seq(0,20,1), lty = 1, lwd = 0.5, col = "gray")
x1 <- 1:10
y1 <- x1
abline( lm(y1 ~ x1), col = "blue")
t2 <- read.delim("MGB_022.2.genecount")
t1$gene_id <- rownames(t1)
t3 <- merge(t1, t2, by.x="gene_id", by.y="gene_id")
file <- read.delim("temp-files", header=F)
index = 10
file[index,1]
# [1] "HALLMARK_INFLAMMATORY_RESPONSE.genes"
pathname = file[index,1]
p <- read.delim(file[index,1], header=F)
p.exp <- t3[ t3$name %in% p$V1, ]
dim(p.exp)
# [1] 169   5
plot( log10(p.exp$expected_count + 1), log10(p.exp$count.x + 1))
abline(h = seq(0,20,1), lty = 1, lwd = 0.5, col = "gray")
abline(v = seq(0,20,1), lty = 1, lwd = 0.5, col = "gray")
x1 <- 1:10
y1 <- x1
abline( lm(y1 ~ x1), col = "blue")
title(main = pathname)
sum(p.exp$count.x > p.exp$expected_count)
sum(p.exp$count.x < p.exp$expected_count)
sum(p.exp$count.x == p.exp$expected_count)

ls HALLMARK*.genes | grep -v temp > temp-files.2
file <- read.delim("temp-files.2", header=F)
sink("temp-sink.txt")

for(index in 1:dim(file)[1]) {
pathname = file[index,1]
p <- read.delim(file[index,1], header=F)
p.exp <- t3[ t3$name %in% p$V1, ]
dim(p.exp)
a <- sum(p.exp$count.x > p.exp$expected_count)
b <- sum(p.exp$count.x < p.exp$expected_count)
c <- sum(p.exp$count.x == p.exp$expected_count)
res <- paste( pathname, a, b, c, sep="\t")
cat(res)
cat("\n")

}
sink()
t4 <- read.delim("temp-sink.txt", header=F)
par()$mar
# [1] 5.1 4.1 4.1 2.1
par(mar=c(6,6,4,2))
plot(t4$V3, t4$V2, xlim=c(0, 200), ylim=c(0,200), xlab="# of genes in a hallmark pathway \n for which RSEM has more reads mapped", ylab = "# of genes in a hallmark pathway \n for which STAR has more reads mapped")
abline(h = seq(0,200,50), lty = 1, lwd = 0.5, col = "gray")
abline(v = seq(0,200,50), lty = 1, lwd = 0.5, col = "gray")
x1 <- 1:10
y1 <- x1
abline( lm(y1 ~ x1), col = "blue")

# 4383 uniq genes in hallmark pathway
p <- read.delim("temp-uniq", header=F)
p.exp <- t3[ t3$name %in% p$V1, ]
dim(p.exp)
# [1] 3614    5

# temp2 contains expressed hallmark genes with STAR gene-level-count < 10
cat temp2 | awk '{print $5}' | uniq | sort | uniq | while read g
do
grep -w "$g" HALLMARK*.genes
done | sort | uniq > temp3
vi temp3
cat temp3 | cut -f 1 | sort | uniq -c
grep HALLMARK_KRAS_SIGNALING_UP.genes  temp3  | cut -f 2 | while read g
do
grep -w "$g" temp2
done | awk 'BEGIN {OFS = "\t"} {print $2, $3, $4, $5}' > temp4.txt

#############STAR gene count from (old) ensemble GTF
62750 substitutions on 62750 lines
cp rsem-count.genes.results rsem-count.genes.2.results
vi rsem-count.genes.2.results                         
# :1, $ s/\.[0-9][0-9]*^I/^I/
/Users/linyongmao/Documents/microglia/scrnaseq-metaannot-combine   MGB_022.counts_gene   rsem-count.genes.2.results  out
paste  MGB_022.counts_gene    out | grep -iv  notapp > star-rsem.2.txt
cat star-rsem.2.txt | cut -f 1,3,8 > temp.1.txt

t <- read.delim("temp.1.txt", header = T, row.names = 1)
dim(t)
## [1] 57603     2
rawCount <- t 
group <- factor(rep(1, 2))
y <- DGEList(counts=rawCount,group=group)
y <- calcNormFactors(y)
med <- data.frame(y$counts[,1])
med$logic <- TRUE
d <- cpm(y)
for(i in 1:dim(y)[1]) { 
  med$logic[i] <- median(d[i,]) >= 1
 }
####median >= 1 for pathway genes
y<-y[med$logic,]
dim(y)
## [1] 15326     2
t1 <- as.data.frame(y$counts)
plot( log10(t1$expected_count + 1), log10(t1$STAR_ensemb_count + 1))

###############STAR two diff mode compare & RSEM. three way compare
################also compare with TAM STAR (old) ensembl uniq gene count
paste MGB_022.2.genecount MGB_022.2.multimap200.nonunique.genecount rsem-count.genes.results | awk '$1 == $4 && $1 == $7' | cut -f 1,3,6,11 > temp.1.txt
t <- read.delim("temp.1.txt", header = T, row.names = 1)
dim(t)
##62750     2
rawCount <- t
group <- factor(rep(1, 3))
y <- DGEList(counts=rawCount,group=group)
y <- calcNormFactors(y)
med <- as.data.frame(y$counts)
med$logic <- med$count >= 45 | med$expected_count >= 45
y <- y[ med$logic,]
dim(y)
# [1] 16738     3
t1 <- as.data.frame(y$counts)
t2 <- t1[ t1$count == t1$count.1,]
dim(t2)
# [1] 8625    3
plot( log10(t2$expected_count + 1), log10(t2$count.1 +1), xlab="RSEM log10(count+1)", ylab="STAR log10(count + 1)")
title(main = paste(dim(t2)[1], "expressed genes. \n100% of reads that can be mapped to a gene by STAR are unique reads", sep = " "), cex.main = 0.8)
abline(h = seq(0,20,1), lty = 1, lwd = 0.5, col = "gray")
abline(v = seq(0,20,1), lty = 1, lwd = 0.5, col = "gray")
x1 <- 1:10
y1 <- x1
abline( lm(y1 ~ x1), col = "blue")
cor.test(log10(t2$expected_count + 1), log10(t2$count.1 +1))
sum( t2$expected_count < t2$count.1)
sum( t2$expected_count * 1.25 < t2$count.1)
# [1] 2010
write.table(t2, "temp.t2.txt", quote=F, sep="\t")
cat temp.t2.txt | sed 's/\.[0-9][0-9]*\t/\t/' > temp3   
t3 <- read.delim("temp3")
t3$gene_id <- rownames(t3)
t4 <- read.delim("MGB_022.counts_gene")
t5 <- merge(t3, t4, by.x="gene_id", by.y="gene_id")
dim(t5)
# [1] 8237    6
plot( log10(t5$expected_count + 1), log10( t5$STAR_ensemb_count + 1), )
title(main = paste(dim(t5)[1], "expressed genes. \n100% of reads that can be mapped to a gene by STAR are unique reads\n TAM (old) ensembl count", sep = " "), cex.main = 0.8)
abline(h = seq(0,20,1), lty = 1, lwd = 0.5, col = "gray")
abline(v = seq(0,20,1), lty = 1, lwd = 0.5, col = "gray")
x1 <- 1:10
y1 <- x1
abline( lm(y1 ~ x1), col = "blue")
write.table(t5, "temp.t5.txt", quote=F, sep="\t") 
