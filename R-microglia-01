t <- read.delim("microglia-41-samples.genecount.txt", header = T, row.names = 1)
rawCount <- t[,2:42]
> dim(rawCount)
[1] 58302    41
group <- factor(rep(1, 41))
y <- DGEList(counts=rawCount,group=group)
y <- calcNormFactors(y)
write.table(y$samples, "microglia-lib-norm-factor", quote = F, sep = "\t")
mds <- plotMDS(y, top=98765)
df <- data.frame(colnames(y), mds$x, mds$y)

linyongmao@Linyong-Mao-MBP16-2019 microglia % cut -f 1,6,10,11,16,17,18,19,23,24,27,29,32,33,35,41,42,43 microglia-41-samples.genecount.txt 
 > microglia-41-samples.female17samp.genecount.tx
                                      cut -f 1,3,4,7,8,9,12,13,14,15,20,21,22,25,26,28,30,34,36,37,38,39,40 microglia-41-samples.genecount.txt 
> microglia-41-samples.male17samp.genecount.txt 
mv -i microglia-41-samples.male17samp.genecount.txt microglia-41-samples.male22samp.genecount.txt
cat microglia-39-sample-sampInfo.txt | head -1 > temp-control
cat microglia-39-sample-sampInfo.txt  | grep -w Control >> temp-control
head -1 microglia-41-samples.genecount.txt | awk 'BEGIN {FS = "\t"; OFS = "\t"} {for(i = 1; i <= NF; i++) print  $i, i}'  > temp-sample-columNum
/Users/linyongmao/Documents/microglia/scrnaseq-metaannot-combine    temp-control temp-sample-columNum out
paste  temp-control  out  | cut -f 1-7 > microglia-41-samples.control-F-M.16samp.sampInfo.txt
paste  temp-control  out  | cut -f 9 |awk 'BEGIN {FS = "\t"; OFS = ""; ORS =""} {print $1 ","} '
cut -f 1,9,10,16,20,23,26,30,32,33,34,35,36,37,38,39,42 microglia-41-samples.genecount.txt > microglia-41-samples.control-F-M.16samp.genecount.txt

rawCount <- read.delim("microglia-41-samples.female17samp.genecount.txt", header = T, row.names = 1)
sampleinfo <- read.delim("microglia-41-samples.female17samp.sampInfo.txt", row.names=1)
group <- factor(sampleinfo$controTumor)

y <- DGEList(counts=rawCount,group=group)
y <- calcNormFactors(y)
###mds <- plotMDS(y, top=98765)
###df <- data.frame(colnames(y), mds$x, mds$y)
keep <-rowSums(cpm(y)>=1) >= 4
y<-y[keep,]
dim(y)
[1] 16850    17

design <- model.matrix(~sampleinfo$controTumor + sampleinfo$age)
> design
   (Intercept) sampleinfo$controTumorTumor sampleinfo$age
1            1                           1             64
2            1                           0             73
3            1                           1             67
4            1                           0             64
5            1                           1             30
6            1                           1             20
7            1                           1             44
8            1                           0             60
9            1                           1             55
10           1                           1             57
11           1                           1             69
12           1                           0             78
13           1                           0             45
14           1                           0             62
15           1                           1             45
16           1                           0             35
17           1                           1             72

y <- estimateDisp(y,design)
fit <- glmQLFit(y, design)
qlf <- glmQLFTest(fit, coef=2)
top2v1 <- topTags(qlf, n = 91234)
write.table(top2v1, "diff2-1.txt", sep="\t", quote = F)

rawCount <- read.delim("microglia-41-samples.male22samp.genecount.txt", header = T, row.names = 1)
sampleinfo <- read.delim("microglia-41-samples.male22samp.sampInfo.txt", row.names=1)
sampleinfo
group <- factor(sampleinfo$controTumor)
y <- DGEList(counts=rawCount,group=group)
y <- calcNormFactors(y)
y
keep <-rowSums(cpm(y)>=1) >= 5
y<-y[keep,]
dim(y)
###[1] 16246    22

design <- model.matrix(~sampleinfo$controTumor + sampleinfo$age)
design
   (Intercept) sampleinfo$controTumorTumor sampleinfo$age
1            1                           1             75
2            1                           1             32
3            1                           1             63
4            1                           1             63
5            1                           0             60


> y <- estimateDisp(y,design)
> fit <- glmQLFit(y, design)
> qlf <- glmQLFTest(fit, coef=2)
> top2v1 <- topTags(qlf, n = 91234)
> write.table(top2v1, "diff2-1.txt", sep="\t", quote = F)
> topTags(qlf)
Coefficient:  sampleinfo$controTumorTumor 
                    logFC     logCPM        F       PValue       FDR
ENSG00000130844  1.715600  6.8048595 23.16679 7.145985e-05 0.2602094
ENSG00000047634  1.525419  4.1331532 21.98299 9.767113e-05 0.2602094
ENSG00000140534  8.539626 -0.3918492 26.88397 1.030518e-04 0.2602094

rawCount <- read.delim("microglia-41-samples.control-F-M.16samp.genecount.txt", header = T, row.names = 1)
sampleinfo <- read.delim("microglia-41-samples.control-F-M.16samp.sampInfo.txt", row.names=1)
mean(colnames(rawCount) == rownames(sampleinfo))
###[1] 1
y <- DGEList(counts=rawCount)
y <- calcNormFactors(y)
###mds <- plotMDS(y, top=98765)
###df <- data.frame(colnames(y), mds$x, mds$y)
keep <-rowSums(cpm(y)>=1) >= 4
y<-y[keep,]
dim(y)
###[1] 16366    16
design <- model.matrix(~sampleinfo$XX + sampleinfo$age)
> design
   (Intercept) sampleinfo$XXXY sampleinfo$age
1            1               1             60
2            1               0             73
3            1               0             64
4            1               1             48

y <- estimateDisp(y,design)
fit <- glmQLFit(y, design)
qlf <- glmQLFTest(fit, coef=2)
top2v1 <- topTags(qlf, n = 91234)
write.table(top2v1, "diff2-1.txt", sep="\t", quote = F)
mv -i diff2-1.txt control-F-M-diff2-1.txt
vi control-F-M-diff2-1.txt
/Users/linyongmao/Documents/microglia/scrnaseq-metaannot-combine  control-F-M-diff2-1.txt         geneID-name-type-chr out
paste  control-F-M-diff2-1.txt out > control-F-M-diff2-1.name-type-chr.txt
./make-rnk-genesymble                control-F-M-diff2-1.name-type-chr.txt  control-F-M-diff2-1.rnk
cat geneID-name-type-chr | cut -f 2-4 > temp-2
/Users/linyongmao/Documents/microglia/scrnaseq-metaannot-combine    control-F-M-diff2-1.rnk temp-2 out
paste   control-F-M-diff2-1.rnk out > control-F-M-diff2-1.rnk.type.chr.txt
###"temp.txt" cpm(y)
/Users/linyongmao/Documents/microglia/scrnaseq-metaannot-combine  control-F-M-diff2-1.name-type-chr.txt temp.txt out
paste  control-F-M-diff2-1.name-type-chr.txt  out >  control-F-M-diff2-1.name-type-chr.cpm
cat control-F-M-diff2-1.name-type-chr.cpm | cut -f 1,8,12-200 > temp-2
bash   script-gct-plus-0d01 > control-F-M-diff2-1.16366genes.cpm.plus0d01.gct
vi control-F-M-diff2-1.cls
###GSEA resuly files control only
f1="/Users/linyongmao/gsea_home/output/microgliaSex/ControlOnlyMalevsFemale_prerank_p.GseaPreranked.1638567040071/gsea_report_for_na_pos_1638567040071.tsv"
f2="/Users/linyongmao/gsea_home/output/microgliaSex/ControlOnlyMalevsFemale_prerank_p.GseaPreranked.1638567040071/gsea_report_for_na_neg_1638567040071.tsv"
cat $f1 $f2 |cut -f 1,4,6,7,8 | sort | uniq > temp-1.txt
f3="/Users/linyongmao/gsea_home/output/microgliaSex/logRatioUseMedianControlOnlyMalevsFemale.Gsea.1638558369585/gsea_report_for_XY_1638558369585.tsv"
f4="/Users/linyongmao/gsea_home/output/microgliaSex/logRatioUseMedianControlOnlyMalevsFemale.Gsea.1638558369585/gsea_report_for_XX_1638558369585.tsv"
cat $f3 $f4 |cut -f 1,4,6,7,8 | sort | uniq > temp-2.txt
paste temp-[12].txt | awk '$1 != $6'
paste temp-[12].txt > temp-3.txt  

rawCount <- read.delim("microglia-41-samples.female13samp.noCereb.noOcci.genecount.txt", header = T, row.names = 1)
sampleinfo <- read.delim("microglia-41-samples.female13samp.noCereb.noOcci.sampInfo.txt", row.names=1)
group <- factor(sampleinfo$controTumor)
y <- DGEList(counts=rawCount,group=group)
y <- calcNormFactors(y)
keep <-rowSums(cpm(y)>=1) >= 3
y<-y[keep,]
dim(y)
##[1] 17319    13
vi microglia-41-samples.female13samp.noCereb.noOcci.cpm.txt
vi temp
mv temp temp-2
bash script-gct-plus-0d01 > microglia-41-samples.female13samp.noCereb.noOcci.cpm.plus0.01.gct
vi microglia-41-samples.female13samp.noCereb.noOcci.cls

head -1 microglia-39-sample-sampInfo.txt > microglia-41-samples.male20samp.noCereb.noOcci.sampInfo.txt
cat microglia-39-sample-sampInfo.txt | grep -w XY | grep -iwv Cerebellum | grep -iwv occipital >>  microglia-41-samples.male20samp.noCereb.noOcci.sampInfo.txt
vi microglia-41-samples.male20samp.noCereb.noOcci.sampInfo.txt
cat microglia-41-samples.male20samp.noCereb.noOcci.sampInfo.txt | cut -f 1 | awk 'NR > 1' >  temp-1
head -1 microglia-41-samples.genecount.txt | awk 'BEGIN {FS = "\t"; OFS = "\t"} {for(i = 1; i <= NF; i++) print  $i, i}' > temp-2
/Users/linyongmao/Documents/microglia/scrnaseq-metaannot-combine  temp-1 temp-2 out
cat out | cut -f 2 | awk 'BEGIN {FS = "\t"; OFS = ""; ORS =""} {print $1 ","} '
cut -f 1,3,4,7,8,9,12,13,14,15,20,21,22,25,28,30,34,37,38,39,40 microglia-41-samples.genecount.txt  > microglia-41-samples.male20samp.noCereb.noOcci.genecount.txt

rawCount <- read.delim("microglia-41-samples.male20samp.noCereb.noOcci.genecount.txt", header = T, row.names = 1)
sampleinfo <- read.delim("microglia-41-samples.male20samp.noCereb.noOcci.sampInfo.txt", row.names=1)
group <- factor(sampleinfo$Tumor)
y <- DGEList(counts=rawCount,group=group)
y <- calcNormFactors(y)
keep <-rowSums(cpm(y)>=1) >= 4
y<-y[keep,]
dim(y)
#[1] 16609    20
d <- cpm(y)
write.table(d, "temp.txt", quote=F, sep = "\t")
vi temp.txt ###add geneID is first line first field
mv temp.txt  microglia-41-samples.female13samp.noCereb.noOcci.cpm.txt
mv microglia-41-samples.female13samp.noCereb.noOcci.cpm.txt microglia-41-samples.male20samp.noCereb.noOcci.cpm.txt
cp  microglia-41-samples.male20samp.noCereb.noOcci.cpm.txt temp-2
vi temp-2
bash script-gct-plus-0d01 > microglia-41-samples.male20samp.noCereb.noOcci.cpm.plus0.01.gct
vi microglia-41-samples.male20samp.noCereb.noOcci.cpm.cls  

> info <- read.delim("microglia-39-sample-sampInfo.txt")
> info$group <- paste(info$XX, info$Tumor )
> info.2 <- info[ info$location != "Cerebellum" & info$location != "Occipital", ]
> dim(info.2)
##[1] 33  8
> boxplot(info.2$age ~ info.2$group, xlab = "", ylab = "age" )
> beeswarm(info.2$age ~ info.2$group, pch = c(16,16,17,17), col = c("green", "red", "green", "red" ), cex = 2, add = T )
> abline(h = seq(20,80,5), lty = 5, lwd = 0.5, col = "gray")
> xxco <- info.2[ info.2$group == "XX Control", ]$age
> xxtu <- info.2[ info.2$group == "XX Tumor", ]$age
> xytu <- info.2[ info.2$group == "XY Tumor", ]$age
> xyco <- info.2[ info.2$group == "XY Control", ]$age
cat microglia-39-sample-sampInfo.txt  | grep -iwv Cerebellum | grep -iwv occipital | cut -f 1 > temp-nocere-sampids
head -1 microglia-41-samples.genecount.txt | awk 'BEGIN {FS = "\t"; OFS = "\t"} {for(i = 1; i <= NF; i++) print  $i, i}' > temp-1
/Users/linyongmao/Documents/microglia/scrnaseq-metaannot-combine temp-nocere-sampids temp-1 out
paste temp-nocere-sampids out | cut -f 3 | awk 'BEGIN {FS = "\t"; ORS = ""} {print $1 ","}'
cut -f 1,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,22,23,25,27,28,30,32,33,34,35,37,38,39,40,41,42 microglia-41-samples.genecount.txt > temp
mv temp microglia-41-samples.F-M-33samps.noCereb.noOcci.genecount.txt
> rawCount <- read.delim("microglia-41-samples.F-M-33samps.noCereb.noOcci.genecount.txt", header = T, row.names = 1)
> dim(rawCount)
##[1] 58302    33
group <- factor(rep(1, 33))
y <- DGEList(counts=rawCount,group=group)
y <- calcNormFactors(y)
med <- data.frame(y$counts[,1])
med$logic <- TRUE
d <- cpm(y)
for(i in 1:dim(y)[1]) {
 med$logic[i] <- median(d[i,]) >= 1
}
y<-y[med$logic,]
dim(y)
#[1] 14204    33
mds <- plotMDS(y, top=98765)
x <- cbind( colnames(y$counts), mds$x, mds$y)
x <- as.data.frame(x)
info <- read.delim("microglia-39-sample-sampInfo.txt", row.names=1)
info$id <- rownames(info)
pca.info <- merge(x, info, by.x="V1", by.y="id")
plot(pca.info$V2, pca.info$V3, cex=0.05, xlab="PC1 (20%)", ylab = "PC2 (14%)")
....graph
res <- lm(as.numeric(pca.info$V2) ~ pca.info$XX + pca.info$location + pca.info$age + pca.info$Tumor)
r <- summary(res)
r

px <- pca.info[ pca.info$XX == "XX", ]
res <- lm(as.numeric(px$V2) ~  px$location + px$age + px$Tumor)
r <- summary(res)
r

px <- pca.info[ pca.info$XX == "XY", ]
res <- lm(as.numeric(px$V2) ~  px$location + px$age + px$Tumor)
r <- summary(res)
r

res <- lm(as.numeric(pca.info$V3) ~ pca.info$XX + pca.info$location + pca.info$age + pca.info$Tumor)
r <- summary(res)
r

px <- pca.info[ pca.info$Tumor == "Control", ] 
res <- lm(-as.numeric(px$V3) ~  px$location + px$age + px$XX)
r <- summary(res)
r

px <- pca.info[ pca.info$Tumor == "Tumor", ]
res <- lm(-as.numeric(px$V3) ~  px$location + px$age + px$XX)
r <- summary(res)
r

px <- pca.info[ pca.info$XX == "XX", ]
res <- lm(-as.numeric(px$V3) ~  px$location + px$age + px$Tumor)
r <- summary(res)
r

px <- pca.info[ pca.info$XX == "XX", ]
res <- lm(-as.numeric(px$V3) ~   px$Tumor)
r <- summary(res)
r

px <- pca.info[ pca.info$XX == "XY", ]
res <- lm(-as.numeric(px$V3) ~  px$location + px$age + px$Tumor)
r <- summary(res)
r

px <- pca.info[ pca.info$XX == "XY", ]
res <- lm(-as.numeric(px$V3) ~   px$Tumor)
r <- summary(res)
r

#############################################
###fisher multi row test
> a <- scan()
1: 0	3	2	0
5: 3	4	2	6
9: 0	1	0	0
13: 3	1	2	2
17: 1	1	3	5
21: 
Read 20 items
> m <- matrix(a, nrow=5, ncol = 4, byrow=T)
> m
     [,1] [,2] [,3] [,4]
[1,]    0    3    2    0
[2,]    3    4    2    6
[3,]    0    1    0    0
[4,]    3    1    2    2
[5,]    1    1    3    5
> # XX_cotrol	XX_Tumor	XY control	XY Tumor
> y <- m[,c(2,4)]
> y
     [,1] [,2]
[1,]    3    0
[2,]    4    6
[3,]    1    0
[4,]    1    2
[5,]    1    5
> fisher.test(y)

	Fisher's Exact Test for Count Data

data:  y
p-value = 0.1367
alternative hypothesis: two.sided

setwd("/Users/linyongmao/Documents/microglia")
f <- read.delim("temp-HALLMARK_INTERFERON_GAMMA_RESPONSE-f-m-ranks.txt")
boxplot(f$rank1, f$rank2, xlab = "", ylab = "logFC based gene ranks in percentile")
beeswarm(data.frame(f$rank1, f$rank2),  pch = 1, col = 1, cex = 1, add = T)
axis(1, at = 1:2, labels=c("F", "M"))
title(main="HALLMARK_INTERFERON_GAMMA_RESPONSE \n p = 3.09E-06 (t test, 193 genes)")

f <- read.delim("temp-HALLMARK_E2F_TARGETS-f-m-ranks.txt")
boxplot(f$rank1, f$rank2, xlab = "", ylab = "logFC based gene ranks in percentile")
beeswarm(data.frame(f$rank1, f$rank2),  pch = 1, col = 1, cex = 1, add = T)
title(main="HALLMARK_E2F_TARGETS \n p = 0.00721 (t test, 198 genes)")
axis(1, at = 1:2, labels=c("F", "M"))

head -1 microglia-41-samples.male20samp.noCereb.noOcci.genecount.txt | awk 'BEGIN {FS = "\t"; OFS = "\t"} {for(i = 1; i <= NF; i++) print i, $i}'  > temp-1
paste temp-1 microglia-41-samples.male20samp.noCereb.noOcci.sampInfo.txt | awk '$2 != $3'
head -1 microglia-41-samples.female13samp.noCereb.noOcci.genecount.txt | awk 'BEGIN {FS = "\t"; OFS = "\t"} {for(i = 1; i <= NF; i++) print i, $i}'  > temp-1
paste temp-1 microglia-41-samples.female13samp.noCereb.noOcci.sampInfo.txt | awk '$2 != $3'

####################################################################
###heatmap LEGs in female in HALLMARK_INTERFERON_GAMMA_RESPONSE
library(ComplexHeatmap)
library(beeswarm)
library(edgeR)
library("circlize")

setwd("/Users/linyongmao/Documents/microglia")
rawCount <- read.delim("microglia-41-samples.female17samp.genecount.txt", header = T, row.names = 1)
sampleinfo <- read.delim("microglia-41-samples.female17samp.sampInfo.txt", row.names=1)
y <- DGEList(counts=rawCount)
y <- calcNormFactors(y)
keep <-rowSums(cpm(y)>=1) >= 4
y<-y[keep,]
dim(y)
###[1] 16850    17

d = cpm(y)
a <- d
b = log10(a+1)
for(i in 1:dim(b)[1])
{
 a[i, ] <- (b[i, ] - mean(as.numeric(b[i,]))) / var(as.numeric(b[i,]))^(1/2)
}
### a is  z score of expressed genes in female samples
write.table(rownames(a), "temp-filt-geneID.txt", quote=F, sep = "\t")
cut -f 2 temp-filt-geneID.txt  > temp-filt-geneID.2.txt
vi  temp-filt-geneID.2.txt
/Users/linyongmao/Documents/microglia/scrnaseq-metaannot-combine  temp-filt-geneID.2.txt geneID-name out
cut -f 1-2 out | awk 'BEGIN {FS = "\t"; OFS = "\t"} {print $2, $1}' > temp-filt-geneID.2.name-ID.txt
bash script-female-specific-genes
vi temp-female-only
/Users/linyongmao/Documents/microglia/scrnaseq-metaannot-combine    temp-female-only temp-filt-geneID.2.name-ID.txt out
cut -f 1-2 out | awk 'BEGIN {FS = "\t"; OFS = "\t"} {print $2, $1}' > out-2
/Users/linyongmao/Documents/microglia/scrnaseq-metaannot-combine  out-2 geneID-name-type-chr out-3
mv -i out-3 femaleOnlyLEGs-HALLMARK_INTERFERON_GAMMA_RESPONSE.txt

###LEGs ONLY from male dataset, but retrieve sames genes from female, some genes may miss from female due to gene filtering
cat maleOnlyLEGs-HALLMARK_E2F_TARGETS.txt | awk 'BEGIN {FS = "\t"; OFS = "\t"} {print $2, $1}' > temp-name-id
fc="/Users/linyongmao/gsea_home/output/microgliaSex/templogratioPlus0d01usMedian.Gsea.1635801846691/ranked_gene_list_Tumor_versus_Control_1635801846691.tsv"
pc="/Users/linyongmao/gsea_home/output/microgliaSex/microglia_female_prerank_p.GseaPreranked.1635699072273/ranked_gene_list_na_pos_versus_na_neg_1635699072273.tsv"
......
paste  out5  out6  > maleOnlyLEGs-HALLMARK_E2F_TARGETS.female.fc.p-value.txt
> g <- read.delim("maleOnlyLEGs-HALLMARK_E2F_TARGETS.female.fc.p-value.txt", header=F)
> g
a.df <- as.data.frame(a)
a.df$id <- rownames(a.df)
a.df.g <- merge(a.df, g, by.x="id", by.y="V8")
mat <- as.matrix(a.df.g[,2:18])
rownames(mat) <- a.df.g$V1

dim(mat)

col_fun = colorRamp2(c(-1,0,1), c("green", "white",  "magenta"))
col_fun_2 = colorRamp2(c(-2,log10(0.25),0), c("green", "white",  "magenta"))
ca <- HeatmapAnnotation(log2FC= a.df.g$V3, log10Pval = -abs(a.df.g$V6), which="row", col=list(log2FC = col_fun, log10Pval = col_fun_2))
col_fun_3 = colorRamp2(c(-3,0,3), c("blue", "white",  "red"))
ha <- HeatmapAnnotation(group=sampleinfo$controTumor, colAvg = colMeans(mat),  
      col = list(group = c("Control" = "green", "Tumor" = "red"), colAvg = col_fun_3))
Heatmap(matrix = mat,
                top_annotation = ha,
        name = "mRNA", row_names_gp = gpar(fontsize = 8), clustering_distance_columns="euclidean", clustering_method_columns="complete",
        column_split=sampleinfo$controTumor,
         col = col_fun_3, right_annotation=ca, row_order=order(a.df.g$V3), column_order=order(colMeans(mat) + 4*(sampleinfo$controTumor == "Tumor")))	 
Heatmap(matrix = mat,
                top_annotation = ha,
        name = "mRNA", row_names_gp = gpar(fontsize = 8), clustering_distance_columns="euclidean", clustering_method_columns="complete", column_split=sampleinfo$controTumor, right_annotation=ca)

col_fun2 = colorRamp2(c(-4,0,4), c("blue", "white",  "red"))
ha <- HeatmapAnnotation(group=sampleinfo$controTumor, col = list(group = c("Control" = "green", "Tumor" = "red")))
Heatmap(matrix = mat,
                top_annotation = ha,
        name = "mRNA", row_names_gp = gpar(fontsize = 8), clustering_distance_columns="euclidean", clustering_method_columns="complete", 
	column_split=sampleinfo$controTumor, 
	right_annotation=ca, row_split= c("log2FC < 0.5", "log2FC > 0.5")[1+(fc[ rownames(mat) ,]$SCORE > 0.5)], col = col_fun2)
####################################################################
###heatmap selected genes in male in HALLMARK_INTERFERON_GAMMA_RESPONSE
library(ComplexHeatmap)
library(beeswarm)
library(edgeR)
library("circlize")

setwd("/Users/linyongmao/Documents/microglia")
rawCount <- read.delim("microglia-41-samples.male22samp.genecount.txt", header = T, row.names = 1)
sampleinfo <- read.delim("microglia-41-samples.male22samp.sampInfo.txt", row.names=1)
y <- DGEList(counts=rawCount)
y <- calcNormFactors(y)
keep <-rowSums(cpm(y)>=1) >= 5
y<-y[keep,]
dim(y)
###[1] 16246    22

d = cpm(y)
a <- d
b = log10(a+1)
for(i in 1:dim(b)[1])
{
 a[i, ] <- (b[i, ] - mean(as.numeric(b[i,]))) / var(as.numeric(b[i,]))^(1/2)
}
### a is  z score of expressed genes in female samples
write.table(rownames(a), "temp-filt-geneID.txt", quote=F, sep = "\t")
cut -f 2 temp-filt-geneID.txt  > temp-filt-geneID.2.txt
vi  temp-filt-geneID.2.txt
/Users/linyongmao/Documents/microglia/scrnaseq-metaannot-combine  temp-filt-geneID.2.txt geneID-name out
cut -f 1-2 out | awk 'BEGIN {FS = "\t"; OFS = "\t"} {print $2, $1}' > temp-filt-geneID.2.name-ID.txt
bash script-female-specific-genes
vi temp-female-only
/Users/linyongmao/Documents/microglia/scrnaseq-metaannot-combine    temp-female-only temp-filt-geneID.2.name-ID.txt out

fc="/Users/linyongmao/gsea_home/output/microgliaSex/tempMale_logratioPlus0d01usMedian.Gsea.1635809488219/ranked_gene_list_Tumor_versus_Control_1635809488219.tsv"
cat maleOnlyLEGs-HALLMARK_E2F_TARGETS.txt | awk 'BEGIN {FS = "\t"; OFS = "\t"} {print $2, $1}' > temp-name-id
/Users/linyongmao/Documents/microglia/scrnaseq-metaannot-combine  temp-name-id $fc out
cat out | grep -vw notApplicable > out2
pc="/Users/linyongmao/gsea_home/output/microgliaSex/microglia_male_prerank_p.GseaPreranked.1635699117040/ranked_gene_list_na_pos_versus_na_neg_1635699117040.tsv"
/Users/linyongmao/Documents/microglia/scrnaseq-metaannot-combine out2 $pc out3
cat out3 | awk '{print $1 "\t" $2}' > out4
paste out2 out4 > out5
/Users/linyongmao/Documents/microglia/scrnaseq-metaannot-combine  out5 temp-name-id out6
paste  out5  out6 | awk 'BEGIN {FS = "\t"; OFS = "\t"}  $1 != $5' | wc -l
paste  out5  out6 | awk 'BEGIN {FS = "\t"; OFS = "\t"}  $1 != $7' | wc -l
paste  out5  out6  > maleOnlyLEGs-HALLMARK_E2F_TARGETS.fc.p-value.txt

g <- read.delim("maleOnlyLEGs-HALLMARK_E2F_TARGETS.fc.p-value.txt", header=F)
g.f <- read.delim("maleOnlyLEGs-HALLMARK_E2F_TARGETS.female.fc.p-value.txt", header=F)
t <- merge(g, g.f, by.x="V1", by.y = "V1", all.x = TRUE)
dim(t)
g <- t
a.df <- as.data.frame(a)
a.df$id <- rownames(a.df)
a.df.g <- merge(a.df, g, by.x="id", by.y="V8.x")
dim(a.df.g)
a.df.g
mat <- as.matrix(a.df.g[,2:23])
rownames(mat) <- a.df.g$V1
dim(mat)
##[1] 27 22
ha <- HeatmapAnnotation(group=sampleinfo$controTumor, col = list(group = c("Control" = "green", "Tumor" = "red")))
col_fun = colorRamp2(c(-1,0,1), c("green", "white",  "magenta"))
col_fun_2 = colorRamp2(c(-2,log10(0.25),0), c("green", "white",  "magenta"))
ca <- HeatmapAnnotation(log2FC= a.df.g$V3.x, log10Pval = -abs(a.df.g$V6.x), which="row", col=list(log2FC = col_fun, log10Pval = col_fun_2))
col_fun_3 = colorRamp2(c(-3,0,3), c("blue", "white",  "red"))
ha <- HeatmapAnnotation(group=sampleinfo$controTumor, colAvg = colMeans(mat),  
      col = list(group = c("Control" = "green", "Tumor" = "red"), colAvg = col_fun_3))

for(i in 1:length(a.df.g$V3.y))
{ if(is.na(a.df.g$V3.y[i]))
     a.df.g$V3.y[i] = 0
}
Heatmap(matrix = mat,
                top_annotation = ha,
        name = "mRNA", row_names_gp = gpar(fontsize = 8), clustering_distance_columns="euclidean", clustering_method_columns="complete",
        column_split=sampleinfo$controTumor,
         col = col_fun_3, right_annotation=ca, row_order=order(a.df.g$V3.y), column_order=order(colMeans(mat) + 4*(sampleinfo$controTumor == "Tumor")))


ha <- HeatmapAnnotation(group=sampleinfo$controTumor)
fc <- read.delim("/Users/linyongmao/gsea_home/output/microgliaSex/tempMale_logratioPlus0d01usMedian.Gsea.1635809488219/ranked_gene_list_Tumor_versus_Control_1635809488219.tsv", row.names=1)
length(fc[ rownames(mat) ,]$SCORE)
dim(mat)
col_fun = colorRamp2(c(-1,0,1), c("blue", "white",  "red"))
ca <- HeatmapAnnotation(logFC=fc[ rownames(mat) ,]$SCORE, which="row", col=list(logFC = col_fun))
Heatmap(matrix = mat,
                top_annotation = ha,
        name = "mRNA", row_names_gp = gpar(fontsize = 8), clustering_distance_columns="euclidean", clustering_method_columns="complete", column_split=sampleinfo$controTumor, right_annotation=ca, row_split= c("log2FC < 0.5", "log2FC > 0.5")[1+(fc[ rownames(mat) ,]$SCORE > 0.5)])


#########################
###t1 <- fc[ rownames(mat) ,]
t1 <- fc[ rownames(fc) %in% rownames(mat),]
names0.5 <- rownames(t1[ t1$SCORE <= 0.5, ])
df1 <- as.data.frame(mat[,1])
df1$split = "geneset1"
df1[ rownames(df1) %in% names0.5, ]$split = "geneset2"
Heatmap(matrix = mat,
                top_annotation = ha,
        name = "mRNA", row_names_gp = gpar(fontsize = 8), clustering_distance_columns="euclidean", clustering_method_columns="complete", column_split=sampleinfo$controTumor, right_annotation=ca, row_split=df1$split)

#############################################################################
####PCA plot of39 samples
cut -f 1,6,10,11,16,17,18,19,23,24,27,29,32,33,35,41,42,43,3,4,7,8,9,12,13,14,15,20,21,22,25,26,28,30,34,36,37,38,39,40 microglia-41-samples.genecount.txt > temp.txt
t <- read.delim("temp.txt", header = T, row.names = 1)
dim(t)
##[1] 58302    39
rawCount <- t
group <- factor(rep(1, 39))
y <- DGEList(counts=rawCount,group=group)
y <- calcNormFactors(y)
med <- data.frame(y$counts[,1])
med$logic <- TRUE
d <- cpm(y)
for(i in 1:dim(y)[1]) {
 med$logic[i] <- median(d[i,]) >= 1
}
y<-y[med$logic,]
dim(y)
###[1] 14170    39
mds <- plotMDS(y, top=98765)
x <- cbind( colnames(y$counts), mds$x, mds$y)
write.table(x, "temp.txt", quote = F, sep = "\t")
x <- as.data.frame(x)
info <- read.delim("microglia-39-sample-sampInfo.txt", row.names=1)
rownames(x) <- colnames(y$counts)
info$id <- rownames(info)
pca.info <- merge(x, info, by.x="V1", by.y="id")

plot(pca.info$V2, pca.info$V3, cex=0.05, xlab="PC1 (19%)", ylab = "PC2 (14%)")
###text(as.numeric(x.info$V2), as.numeric(x.info$V3), paste(info$XX, info$Tumor))
points(pca.info[ pca.info$XX == "XX" & pca.info$Tumor == "Tumor", ]$V2, pca.info[ pca.info$XX == "XX" & pca.info$Tumor == "Tumor", ]$V3, col = "red", pch = 16 , cex = 1.6)
points(pca.info[ pca.info$XX == "XX" & pca.info$Tumor == "Control", ]$V2, pca.info[ pca.info$XX == "XX" & pca.info$Tumor == "Control", ]$V3, col = "green", pch = 16 , cex = 1.6)
points(pca.info[ pca.info$XX == "XY" & pca.info$Tumor == "Tumor", ]$V2, pca.info[ pca.info$XX == "XY" & pca.info$Tumor == "Tumor", ]$V3, col = "red", pch = 17 , cex = 1.6)
points(pca.info[ pca.info$XX == "XY" & pca.info$Tumor == "Control", ]$V2, pca.info[ pca.info$XX == "XY" & pca.info$Tumor == "Control", ]$V3, col = "green", pch = 17 , cex = 1.6)
legend("topleft", inset = 0.05, c("XX control", "XX tumor", "XY control", "XY tumor"), pch=c(16,16,17,17), col = c("green", "red", "green", "red" ))

###boxplot per four groups
pca.info$group <- paste(pca.info$XX, pca.info$Tumor)
boxplot(as.numeric( pca.info$V3) ~ pca.info$group, xlab="", ylab = "PC2")
beeswarm(as.numeric( pca.info$V3) ~ pca.info$group, pch = c(16,16,17,17), col = c("green", "red", "green", "red" ), cex = 2, add = T)
###add horizon grid line
> abline(h = seq(20,80,10), lty = 5, lwd = 0.5, col = "gray")

xxco <- pca.info[ pca.info$group == "XX Control",]$V3
xxtu <- pca.info[ pca.info$group == "XX Tumor",]$V3
xyco <- pca.info[ pca.info$group == "XY Control",]$V3
xytu <- pca.info[ pca.info$group == "XY Tumor",]$V3
ll <- list(xxco = xxco, xxtu = xxtu, xyco = xyco, xytu = xytu )
for(i in 1:length(ll)) {
 for(j in 1:length(ll)) {
wilcox <- wilcox.test(as.numeric( ll[[i]]),as.numeric( ll[[j]]), paired=F, exact=F, conf.int = T)
str <- paste(names(ll)[i], names(ll)[j], wilcox$p.value, sep = "\t" )
cat(str)
cat("\n")
 } }

boxplot(as.numeric( pca.info$V2) ~ pca.info$group, xlab="", ylab = "PC1")
beeswarm(as.numeric( pca.info$V2) ~ pca.info$group, pch = c(16,16,17,17), col = c("green", "red", "green", "red" ), cex = 2, add = T)
xxco <- pca.info[ pca.info$group == "XX Control",]$V2
xxtu <- pca.info[ pca.info$group == "XX Tumor",]$V2
xyco <- pca.info[ pca.info$group == "XY Control",]$V2
xytu <- pca.info[ pca.info$group == "XY Tumor",]$V2
ll <- list(xxco = xxco, xxtu = xxtu, xyco = xyco, xytu = xytu )
for(i in 1:length(ll)) {
 for(j in 1:length(ll)) {
wilcox <- wilcox.test(as.numeric( ll[[i]]),as.numeric( ll[[j]]), paired=F, exact=F, conf.int = T)
str <- paste(names(ll)[i], names(ll)[j], wilcox$p.value, sep = "\t" )
cat(str)
cat("\n")
 } }

boxplot(as.numeric( pca.info$V2) ~ pca.info$XX, xlab="", ylab = "PC1")
beeswarm(as.numeric( pca.info$V2) ~ pca.info$XX, pch = c(16,17), col = c("green", "green"), cex = 2, add = T)
xx <- pca.info[ pca.info$XX == "XX",]$V2
xy <- pca.info[ pca.info$XX == "XY",]$V2
wilcox.test(as.numeric(xx), as.numeric(xy), paired=F, exact=F, conf.int = T)

########multiple groups, [1] "XX Control"             "XX Benign resection"    "XX Tumor resection"     "XX Met resection"      
########[5] "XY Control"             "XY Low grade resection" "XY Tumor resection"   
pca.info$grape2 <- pca.info$grade
for(i in 1:dim(pca.info)[1]) {
 if(pca.info$Tumor[i] == "Control")
  { pca.info$grape2[i] = "Control"
  }
}
pca.info$grape3 <- paste(pca.info$XX, pca.info$grape2)
b <- sort(unique(paste(pca.info$XX, pca.info$grape2) ))
pca.info$grape3 <- factor( pca.info$grape3, levels=c(b[2], b[1], b[4], b[3], b[5:7]) )
####4in wide, 3 in high
par(pin=c(4,3))
boxplot(as.numeric(pca.info$V3) ~ pca.info$grape3 , xaxt = "n", ylab = "PC2", xlab = "")
#####las = 2 perpendicular,
axis(side = 1, 
     ## Rotate the labels.
     labels=c(b[2], b[1], b[4], b[3], b[5:7]) , at = 1:7, las =2)
beeswarm(as.numeric(pca.info$V3) ~ pca.info$grape3 ,add =T,pch = c(16,16,16,16,17,17,17), col=c("green", "red","red","red", "green", "red", "red"))

t1 <- pca.info[ pca.info$grape3 == "XY Low grade resection",  ]$V3
t2 <- pca.info[ pca.info$XX == "XX" & pca.info$Tumor == "Tumor",  ]$V3
t3 <- pca.info[ pca.info$grape3 == "XX Tumor resection",  ]$V3
t4 <- pca.info[ pca.info$grape3 == "XY Tumor resection",  ]$V3

cx <- pca.info[ pca.info$XX == "XX" & pca.info$Tumor == "Control",  ]$V3
cy <- pca.info[ pca.info$XX == "XY" & pca.info$Tumor == "Control",  ]$V3
tx <- pca.info[ pca.info$XX == "XX" & pca.info$Tumor == "Tumor",  ]$V3
ty <- pca.info[ pca.info$XX == "XY" & pca.info$Tumor == "Tumor",  ]$V3


d <- mean(as.numeric(cy)) - mean(as.numeric(cx))
> d
[1] 0.02690553

t.test(as.numeric(t3),as.numeric(t4))
wilcox.test(as.numeric(t3),as.numeric(t4))

t.test(as.numeric(t1) - mean(as.numeric(cy)),as.numeric(t3) - mean(as.numeric(cx)))
t.test(as.numeric(t4) - mean(as.numeric(cy)),as.numeric(t3) - mean(as.numeric(cx)))

t.test(as.numeric(tx),as.numeric(ty))
t.test(as.numeric(tx) - mean(as.numeric(cx)),as.numeric(ty) - mean(as.numeric(cy)))

##############################################################################
#####lm(), PC2 ~ multivariables
res <- lm(-as.numeric(pca.info$V3) ~ pca.info$XX + pca.info$location + pca.info$age + pca.info$Tumor)
r <- summary(res)
r

res <- lm(-as.numeric(pca.info$V3) ~  pca.info$Tumor)
r <- summary(res)

a <- pca.info[pca.info$Tumor == "Tumor", ]
res <- lm(-as.numeric(a$V3) ~ a$XX + a$location + a$age )
r <- summary(res)

a <- pca.info[pca.info$Tumor == "Control", ]
res <- lm(-as.numeric(a$V3) ~ a$XX + a$location + a$age )
r <- summary(res)

pca.info$group <- paste(pca.info$XX, pca.info$Tumor)
boxplot(as.numeric( pca.info$V3) ~ pca.info$group, xlab="", ylab = "PC2")
beeswarm(as.numeric( pca.info$V3) ~ pca.info$group, pch = c(16,16,17,17), col = c("green", "red", "green", "red" ), cex = 2, add = T)
###add horizon grid
abline(h = seq(-0.8, 1.1, 0.1), lty = 5, lwd = 0.5, col = "gray")
b <- sort(unique(pca.info$group))
text(1, as.numeric(pca.info[ pca.info$location == "Temporal" & pca.info$group == b[1],]$V3),"Tempor", cex = 1)
text(2, as.numeric(pca.info[ pca.info$location == "Temporal" & pca.info$group == b[2],]$V3),"Tempor", cex = 1)
text(3, as.numeric(pca.info[ pca.info$location == "Temporal" & pca.info$group == b[3],]$V3),"Tempor", cex = 1)
text(4, as.numeric(pca.info[ pca.info$location == "Temporal" & pca.info$group == b[4],]$V3),"Tempor", cex = 1)
text(1, as.numeric(pca.info[ pca.info$location == "Cerebellum" & pca.info$group == b[1],]$V3),"cere", cex = 1)
text(2, as.numeric(pca.info[ pca.info$location == "Cerebellum" & pca.info$group == b[2],]$V3),"cere", cex = 1)
text(3, as.numeric(pca.info[ pca.info$location == "Cerebellum" & pca.info$group == b[3],]$V3),"cere", cex = 1)
text(4, as.numeric(pca.info[ pca.info$location == "Cerebellum" & pca.info$group == b[4],]$V3),"cere", cex = 1)

#############################################################################
###recurrent LEGs in female-biased pathways
g <- read.delim("out", row.names=1)
mat <- as.matrix(g)
col_fun = colorRamp2(c(0,1), c("white",  "magenta"))
Heatmap(matrix = mat,
        name = "LEGs", row_names_gp = gpar(fontsize = 8), column_names_gp = gpar(fontsize = 7), clustering_distance_columns="pearson", clustering_method_columns="complete", column_names_side ="top", clustering_distance_rows="pearson" , cell_fun = function(j, i, x, y, width, height, fill) {grid.rect(x = x, y = y, width = width, height = height,
            gp = gpar(col = "grey", fill = NA)) }, col = col_fun)

##############################################################################
#######LEGs in four groups
cpm <- read.delim("microglia-41-samples.female-male.39samp.cpm.txt")
./make-table-pathway-contain-genes list-of-pathway-LEGs-file list-of-pathway-recurr-genes out
cat out
cat femaleOnlyLEGs-HALLMARK_ALLOGRAFT_REJECTION.txt-list.txt      femaleOnlyLEG.. | sort |  uniq -c | awk '$1 > 3 {print $2}'  | grep -v symbol > temp-name-id
g <- read.delim("temp-name-id", header=F)
cpm.g <- cpm[ cpm$symbol %in% g$V1, ]
cpm.g.t <- as.data.frame( t(cpm.g))
dim(cpm.g.t)
###[1] 44 12
cpm.g.t$id <- rownames(cpm.g.t)
info <- read.delim("microglia-39-sample-sampInfo.txt")
cpm.g.t.info <- merge(cpm.g.t, info,  by.x="id", by.y = "id1", all.x = TRUE)
cpm.g.t.info$group <- paste(cpm.g.t.info$XX, cpm.g.t.info$Tumor, sep = "_")

layout(matrix(1:6, 2, 3, byrow=T) )
for(i in 2:7) {
boxplot( log2(as.numeric( cpm.g.t.info[4:42,i])+1) ~ cpm.g.t.info[4:42,]$group, xlab="", ylab = "log2 (cpm+1)", outline=T, pch = c(1,1,2,2),  cex=1)
beeswarm(log2(as.numeric( cpm.g.t.info[4:42,i])+1) ~ cpm.g.t.info[4:42,]$group, pch = c(1,1,2,2), col = c("green", "red", "green", "red" ), cex = 1, add = T)
title(main= cpm.g.t.info[43,i] )
}

#############################################################################
#######whole pathway level z-score boxplot
d = cpm(y)
a <- d
b = log10(a+1)
for(i in 1:dim(b)[1])
{
 a[i, ] <- (b[i, ] - mean(as.numeric(b[i,]))) / var(as.numeric(b[i,]))^(1/2)
}
###a is z-score of log10(cpm+1)
info <- read.delim("microglia-39-sample-sampInfo.txt")
g <- read.delim("geneID-name")
a.df <- as.data.frame(a)
a.df$id <- row.names(a.df)
a.df.g <- merge(a.df, g, by.x="id", by.y="geneID")
dim(a.df.g)
###[1] 14170    41
grep -i via_nfkb h.all* | awk '
BEGIN {FS = "\t"; OFS = ""}
{
 for(i = 3; i <= NF; i++)
 {
  if($i != "")
    print $i;
 }
}
' > temp-path.genes
p <- read.delim("temp-path.genes", header=F)
p.exp <- a.df.g[ a.df.g$name %in% p$V1, ]
length(p.exp$name)
###[1] 185
mat <- as.matrix(p.exp[, 2:40])
res <- data.frame(id = colnames(mat), mean = colMeans(mat))
> res
             id        mean
MGB_009 MGB_009  0.16357008
MGB_011 MGB_011  0.04620055
MGB_016 MGB_016  1.47960440
MGB_018 MGB_018  0.40593726
MGB_022 MGB_022  0.49574590
MGB_023 MGB_023 -0.42584137

res.info <- merge(res, info, by.x="id", by.y="id1")
res.info$group <- paste(res.info$XX, res.info$Tumor)
boxplot(res.info$mean ~ res.info$group, xlab = "", ylab = "z-score avg of all genes")
title(main="HALLMARK_TNFA_SIGNALING_VIA_NFKB")
beeswarm(res.info$mean ~ res.info$group, pch = c(16,16,17,17), col = c("green", "red", "green", "red" ), cex = 2, add = T)

xxco <- res.info[ res.info$group == "XX Control",]$mean
xxtu <- res.info[ res.info$group == "XX Tumor",]$mean
xyco <- res.info[ res.info$group == "XY Control",]$mean
xytu <- res.info[ res.info$group == "XY Tumor",]$mean

#############################################################################
##########whole pathway level z-score boxplot; loop
layout(matrix(1:6, 2, 3, byrow=T) )
file <- read.delim("temp-files", header=F)
for(index in 1:6) {
 p <- read.delim(file[index,1], header=F)
 p.exp <- a.df.g[ a.df.g$name %in% p$V1, ]
 length(p.exp$name)
 ###[1] 185
 mat <- as.matrix(p.exp[, 2:40])
 res <- data.frame(id = colnames(mat), mean = colMeans(mat))
 ###> res        
 ###             id        mean
 ###MGB_009 MGB_009  0.16357008
 ###MGB_011 MGB_011  0.04620055
 
 res.info <- merge(res, info, by.x="id", by.y="id1")
 res.info$grape3 <- paste(res.info$XX, res.info$Tumor)
 par(cex = 0.4)
 boxplot(as.numeric(res.info$mean) ~ res.info$grape3 ,  ylab = "z-score avg of all genes", xlab = "")
 beeswarm(as.numeric(res.info$mean) ~ res.info$grape3 ,add =T,pch = c(16,16,17,17), col=c("green", "red", "green", "red"), cex = 1.5)
 title(main = file[index,1])
 }

#############################################################################
###pathway level z-score avg per group
###cp from R-lm-XX-XY-Tumor-Control-pathway-Zscores-age-loc
###a.df.g && info
sink("temp-2.txt")

file <- read.delim("temp-files", header=F)
for(index in 1:dim(file)[1]) {
 p <- read.delim(file[index,1], header=F)
 p.exp <- a.df.g[ a.df.g$name %in% p$V1, ]
 length(p.exp$name)
 ###[1] 185
 mat <- as.matrix(p.exp[, 2:40])
 res <- data.frame(id = colnames(mat), mean = colMeans(mat))
 res.info <- merge(res, info, by.x="id", by.y="id1")
 res.info$grape3 <- paste(res.info$XX, res.info$Tumor)
 
####header printed multiple times
cat("pathway")
cat("\t")
a <- sort(unique(res.info$grape3))
for(kk in 1:4) {
cat(a[kk])
cat("\t")
}
###pathway      XX Control   XX Tumor        XY Control      XY Tumor
cat("\n")

 cat(file[index,1])
 cat("\t")

 for(kk in 1:4) {
 cat(mean(res.info[ res.info$grape3 == a[kk] , ]$mean))
 cat("\t")
}
cat("\n")
}

sink()

#######################################################################
#######15 pathways, 7 groups, pathway-level z-score of all genes,
#######[1] "XX Benign resection"    "XX Control"             "XX Met resection"       "XX Tumor resection"    
#######[5] "XY Control"             "XY Low grade resection" "XY Tumor resection"    

cat list-of-pathways | while read ll
do
  grep -i "$ll"  h.all.v7.4.symbols.gmt | awk '
BEGIN {FS = "\t"; OFS = ""}
{
 for(i = 3; i <= NF; i++)
 {
  if($i != "")
    print $i;
 }
}
' > "$ll".temp.genes
done

ls  *.temp.genes > temp-files
.......dim(a.df.g)
###[1] 14170    41

layout(matrix(1:6, 2, 3, byrow=T) )
file <- read.delim("temp-files", header=F)
for(index in 1:6) {
 p <- read.delim(file[index,1], header=F)
 p.exp <- a.df.g[ a.df.g$name %in% p$V1, ]
 length(p.exp$name)
 ###[1] 185
 mat <- as.matrix(p.exp[, 2:40])
 res <- data.frame(id = colnames(mat), mean = colMeans(mat))
 ###> res
 ###             id        mean
 ###MGB_009 MGB_009  0.16357008
 ###MGB_011 MGB_011  0.04620055

 res.info <- merge(res, info, by.x="id", by.y="id1")
 res.info$grape2 <- res.info$grade
 for(i in 1:dim(res.info)[1]) {
  if(res.info$Tumor[i] == "Control")
   { res.info$grape2[i] = "Control"
   }
 }
 res.info$grape3 <- paste(res.info$XX, res.info$grape2)
 b <- sort(unique(paste(res.info$XX, res.info$grape2) ))
 res.info$grape3 <- factor( res.info$grape3, levels=c(b[2], b[1], b[4], b[3], b[5:7]), labels=c("XXco", "XXBe", "XXTu", "XXme", "XYco", "XYlo", "XYTu") )
 par(cex = 0.4)
 boxplot(as.numeric(res.info$mean) ~ res.info$grape3 ,  ylab = "z-score avg of all genes", xlab = "")
 beeswarm(as.numeric(res.info$mean) ~ res.info$grape3 ,add =T,pch = c(16,16,16,16,17,17,17), col=c("green", "red","red","red", "green", "red", "red"), cex = 1.5)
 title(main = file[index,1])
 }
